CFR data loaded successfully.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3s', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 1, 'raise_count': 0}
Strategy for state (0, ('3s', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Regret updated for <class 'skeleton.actions.CallAction'>: -0.656. Total: -0.656
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 2, 'total_actions': 2, 'raise_count': 0}
Strategy for state (0, ('3d', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -0.5459999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5459999999999999. Total: -0.5459999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.054
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 2, 'total_actions': 3, 'raise_count': 1}
Strategy for state (0, ('3d', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.8915
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7788333333333334. Total: -1.3248333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.1085
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8h', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 2, 'total_actions': 4, 'raise_count': 1}
Strategy for state (0, ('3s', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -0.5449999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.695. Total: -0.695
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.055
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Jh', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2, 'bluff_count': 2, 'total_actions': 5, 'raise_count': 1}
Strategy for state (0, ('Jh', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5005. Total: -0.5005
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5005. Total: -0.5005
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0995. Total: -0.0995
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 2, 'total_actions': 6, 'raise_count': 2}
Strategy for state (0, ('Jh', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -0.8154999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7483333333333334. Total: -1.2488333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.1845
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['Jh', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.42857142857142855, 'bluff_count': 2, 'total_actions': 7, 'raise_count': 3}
Strategy for state (0, ('Jh', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -1.1195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.804. Total: -2.052833333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.28049999999999997
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jh', 'Tc'], Board Cards=['9h', '2h', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 2, 'total_actions': 8, 'raise_count': 4}
Strategy for state (3, ('Jh', 'Tc'), ('9h', '2h', 'Th')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.28099999999999997. Total: -0.28099999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6269459459459459. Total: -0.6269459459459459
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.319. Total: -0.319
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 55.824999999999996
sent answer: RaiseAction(amount=55.824999999999996)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.4444444444444444, 'bluff_count': 3, 'total_actions': 9, 'raise_count': 4}
Strategy for state (0, ('9d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6725. Total: -0.6725
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['9d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 3, 'total_actions': 10, 'raise_count': 5}
Strategy for state (0, ('9d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -0.8434999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.796. Total: -1.4685000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.1565
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3c', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.45454545454545453, 'bluff_count': 3, 'total_actions': 11, 'raise_count': 5}
Strategy for state (0, ('3c', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.0545
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3c', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 3, 'total_actions': 12, 'raise_count': 6}
Strategy for state (0, ('3c', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.881
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7688333333333334. Total: -1.3143333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.119
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3c', 'Qh'], Board Cards=['2d', '6d', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.5384615384615384, 'bluff_count': 3, 'total_actions': 13, 'raise_count': 7}
Strategy for state (3, ('3c', 'Qh'), ('2d', '6d', '4s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4755. Total: -0.4755
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7505. Total: -0.7505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1245. Total: -0.1245
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8.715
sent answer: RaiseAction(amount=8.715)
Round State: Street=3, My Cards=['3c', 'Qh'], Board Cards=['2d', '6d', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 3, 'total_actions': 14, 'raise_count': 8}
Strategy for state (3, ('3c', 'Qh'), ('2d', '6d', '4s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.477. Total: -0.7525
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8214444444444444. Total: -1.5719444444444444
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.123. Total: -0.2475
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['3c', 'Qh'], Board Cards=['2d', '6d', '4s', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 3, 'total_actions': 15, 'raise_count': 9}
Strategy for state (4, ('3c', 'Qh'), ('2d', '6d', '4s', '6h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4325. Total: -0.4325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.800241935483871. Total: -0.800241935483871
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1675. Total: -0.1675
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 50.25
sent answer: RaiseAction(amount=50.25)
Round State: Street=4, My Cards=['3c', 'Qh'], Board Cards=['2d', '6d', '4s', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.625, 'bluff_count': 3, 'total_actions': 16, 'raise_count': 10}
Strategy for state (4, ('3c', 'Qh'), ('2d', '6d', '4s', '6h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4485. Total: -0.681
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8368720930232558. Total: -1.6371140285071268
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1515. Total: -0.319
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 110
sent answer: RaiseAction(amount=110)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ad', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5882352941176471, 'bluff_count': 4, 'total_actions': 17, 'raise_count': 10}
Strategy for state (0, ('8c', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CallAction'>: -0.67. Total: -0.67
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Js', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5555555555555556, 'bluff_count': 4, 'total_actions': 18, 'raise_count': 10}
Strategy for state (0, ('5s', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.5305
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5305. Total: -0.5305
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.0695
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Js', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5789473684210527, 'bluff_count': 4, 'total_actions': 19, 'raise_count': 11}
Strategy for state (0, ('5s', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -0.849
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7518333333333334. Total: -1.2823333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.15100000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ah', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.55, 'bluff_count': 4, 'total_actions': 20, 'raise_count': 11}
Strategy for state (0, ('Ah', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6825. Total: -0.6825
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ah', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5238095238095238, 'bluff_count': 4, 'total_actions': 21, 'raise_count': 11}
Strategy for state (0, ('8d', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.CallAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ah', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5454545454545454, 'bluff_count': 4, 'total_actions': 22, 'raise_count': 12}
Strategy for state (0, ('8d', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.8640000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7653333333333334. Total: -1.2973333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.136
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Jd', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5217391304347826, 'bluff_count': 4, 'total_actions': 23, 'raise_count': 12}
Strategy for state (0, ('Ah', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6855. Total: -0.6855
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Jd', 'Ah'], Board Cards=['7d', '4d', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.5416666666666666, 'bluff_count': 4, 'total_actions': 24, 'raise_count': 13}
Strategy for state (3, ('Ah', 'Jd'), ('7d', '4d', '3c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 3.84
sent answer: RaiseAction(amount=3.84)
Round State: Street=3, My Cards=['Jd', 'Ah'], Board Cards=['7d', '4d', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.56, 'bluff_count': 4, 'total_actions': 25, 'raise_count': 14}
Strategy for state (3, ('Ah', 'Jd'), ('7d', '4d', '3c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -0.881
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9005555555555556. Total: -0.9005555555555556
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.119
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Jd', 'Ah'], Board Cards=['7d', '4d', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.5769230769230769, 'bluff_count': 4, 'total_actions': 26, 'raise_count': 15}
Strategy for state (4, ('Ah', 'Jd'), ('7d', '4d', '3c', '8d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.346. Total: -0.346
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.254. Total: -0.254
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.254. Total: -0.254
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 86.36
sent answer: RaiseAction(amount=86.36)
Round State: Street=4, My Cards=['Jd', 'Ah'], Board Cards=['7d', '4d', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.5925925925925926, 'bluff_count': 4, 'total_actions': 27, 'raise_count': 16}
Strategy for state (4, ('Ah', 'Jd'), ('7d', '4d', '3c', '8d')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7311685823754789. Total: -0.7311685823754789
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.265. Total: -0.519
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9s', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 4, 'total_actions': 28, 'raise_count': 16}
Strategy for state (0, ('3d', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.063. Total: -0.063
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9s', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5862068965517241, 'bluff_count': 4, 'total_actions': 29, 'raise_count': 17}
Strategy for state (0, ('3d', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.877
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7733333333333334. Total: -1.3103333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.123
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2s', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5666666666666667, 'bluff_count': 4, 'total_actions': 30, 'raise_count': 17}
Strategy for state (0, ('2s', '7c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.5479999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.698. Total: -0.698
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.052
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5483870967741935, 'bluff_count': 5, 'total_actions': 31, 'raise_count': 17}
Strategy for state (0, ('2c', '4c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.489. Total: -0.489
Regret updated for <class 'skeleton.actions.CallAction'>: -0.489. Total: -0.489
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.111. Total: -0.111
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5625, 'bluff_count': 5, 'total_actions': 32, 'raise_count': 18}
Strategy for state (0, ('2c', '4c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49849999999999994. Total: -0.7874999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7318333333333333. Total: -1.2208333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1015. Total: -0.21250000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['4c', '2c'], Board Cards=['Ts', 'Kd', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5757575757575758, 'bluff_count': 5, 'total_actions': 33, 'raise_count': 19}
Strategy for state (3, ('2c', '4c'), ('Ts', 'Kd', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5755. Total: -0.5755
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8505. Total: -0.8505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0245. Total: -0.0245
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5s', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5588235294117647, 'bluff_count': 5, 'total_actions': 34, 'raise_count': 19}
Strategy for state (0, ('5s', '6h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6615. Total: -0.6615
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['5s', '6h'], Board Cards=['3s', '3h', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 5, 'total_actions': 35, 'raise_count': 20}
Strategy for state (3, ('5s', '6h'), ('3s', '3h', '9s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5775. Total: -0.5775
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0225. Total: -0.0225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0225. Total: -0.0225
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['5s', '6h'], Board Cards=['3s', '3h', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.5833333333333334, 'bluff_count': 5, 'total_actions': 36, 'raise_count': 21}
Strategy for state (3, ('5s', '6h'), ('3s', '3h', '9s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5765. Total: -0.954
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8765000000000001. Total: -0.8765000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0235. Total: -0.046
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Td', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5675675675675675, 'bluff_count': 6, 'total_actions': 37, 'raise_count': 21}
Strategy for state (0, ('Jh', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -0.5
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5. Total: -0.5
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.1
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Td', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5789473684210527, 'bluff_count': 6, 'total_actions': 38, 'raise_count': 22}
Strategy for state (0, ('Jh', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.495. Total: -0.7949999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7283333333333334. Total: -1.2283333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.105. Total: -0.20500000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Td', 'Jh'], Board Cards=['Qc', '7s', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.5897435897435898, 'bluff_count': 6, 'total_actions': 39, 'raise_count': 23}
Strategy for state (3, ('Jh', 'Td'), ('Qc', '7s', '3c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5549999999999999. Total: -0.5549999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8497368421052631. Total: -0.8497368421052631
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.045. Total: -0.045
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=4, My Cards=['Td', 'Jh'], Board Cards=['Qc', '7s', '3c', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 6, 'total_actions': 40, 'raise_count': 24}
Strategy for state (4, ('Jh', 'Td'), ('Qc', '7s', '3c', '5d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.499. Total: -0.499
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8853013698630137. Total: -0.8853013698630137
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.101. Total: -0.101
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 224
sent answer: RaiseAction(amount=224)
Round State: Street=4, My Cards=['Td', 'Jh'], Board Cards=['Qc', '7s', '3c', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6097560975609756, 'bluff_count': 6, 'total_actions': 41, 'raise_count': 25}
Strategy for state (4, ('Jh', 'Td'), ('Qc', '7s', '3c', '5d')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9118847352024922. Total: -1.797186105065506
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.186
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9h', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5952380952380952, 'bluff_count': 6, 'total_actions': 42, 'raise_count': 25}
Strategy for state (0, ('8s', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49849999999999994. Total: -0.49849999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6485. Total: -0.6485
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1015. Total: -0.1015
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3s', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5813953488372093, 'bluff_count': 6, 'total_actions': 43, 'raise_count': 25}
Strategy for state (0, ('3s', '6h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5255. Total: -0.5255
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5255. Total: -0.5255
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0745. Total: -0.0745
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3s', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5909090909090909, 'bluff_count': 6, 'total_actions': 44, 'raise_count': 26}
Strategy for state (0, ('3s', '6h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.8445
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7523333333333334. Total: -1.2778333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.1555
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ac', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5777777777777777, 'bluff_count': 6, 'total_actions': 45, 'raise_count': 26}
Strategy for state (0, ('5s', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6865. Total: -0.6865
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Ac', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5869565217391305, 'bluff_count': 6, 'total_actions': 46, 'raise_count': 27}
Strategy for state (0, ('5s', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.857
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7955. Total: -1.482
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.14300000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8s', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.574468085106383, 'bluff_count': 6, 'total_actions': 47, 'raise_count': 27}
Strategy for state (0, ('5s', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4965. Total: -0.4965
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4965. Total: -0.4965
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1035. Total: -0.1035
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8s', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5833333333333334, 'bluff_count': 6, 'total_actions': 48, 'raise_count': 28}
Strategy for state (0, ('5s', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4965. Total: -0.7929999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7298333333333333. Total: -1.2263333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1035. Total: -0.207
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6d', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 6, 'total_actions': 49, 'raise_count': 28}
Strategy for state (0, ('6d', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6965. Total: -0.6965
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.0535
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['6d', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.58, 'bluff_count': 6, 'total_actions': 50, 'raise_count': 29}
Strategy for state (0, ('6d', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.8819999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8105. Total: -1.5070000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.118
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ts', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5686274509803921, 'bluff_count': 6, 'total_actions': 51, 'raise_count': 29}
Strategy for state (0, ('Jh', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ts', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5769230769230769, 'bluff_count': 6, 'total_actions': 52, 'raise_count': 30}
Strategy for state (0, ('Jh', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.8055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7443333333333334. Total: -1.2388333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.1945
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ts', 'Jh'], Board Cards=['Qh', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5849056603773585, 'bluff_count': 6, 'total_actions': 53, 'raise_count': 31}
Strategy for state (3, ('Jh', 'Ts'), ('Qh', '9h', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.238. Total: -0.238
Regret updated for <class 'skeleton.actions.CallAction'>: -0.513. Total: -0.513
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.362. Total: -0.362
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 25.34
sent answer: RaiseAction(amount=25.34)
Round State: Street=3, My Cards=['Ts', 'Jh'], Board Cards=['Qh', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5925925925925926, 'bluff_count': 6, 'total_actions': 54, 'raise_count': 32}
Strategy for state (3, ('Jh', 'Ts'), ('Qh', '9h', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.22499999999999998. Total: -0.26299999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6020114942528736. Total: -1.1150114942528737
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.375. Total: -0.737
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 159.375
sent answer: RaiseAction(amount=159.375)
Round State: Street=4, My Cards=['Ts', 'Jh'], Board Cards=['Qh', '9h', 'Ah', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 6, 'total_actions': 55, 'raise_count': 33}
Strategy for state (4, ('Jh', 'Ts'), ('Qh', '9h', 'Ah', 'Qc')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6864726631393299. Total: -0.6864726631393299
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.31. Total: -0.31
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3c', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5892857142857143, 'bluff_count': 7, 'total_actions': 56, 'raise_count': 33}
Strategy for state (0, ('3c', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -0.5449999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.695. Total: -0.695
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.055
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['3c', 'Ts'], Board Cards=['9c', '2s', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.5964912280701754, 'bluff_count': 7, 'total_actions': 57, 'raise_count': 34}
Strategy for state (3, ('3c', 'Ts'), ('9c', '2s', '3h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.564. Total: -0.564
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.036. Total: -0.036
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.036. Total: -0.036
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.16
sent answer: RaiseAction(amount=2.16)
Round State: Street=3, My Cards=['3c', 'Ts'], Board Cards=['9c', '2s', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.603448275862069, 'bluff_count': 8, 'total_actions': 58, 'raise_count': 35}
Strategy for state (3, ('3c', 'Ts'), ('9c', '2s', '3h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.577. Total: -0.9409999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.877. Total: -0.877
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.023. Total: -0.059
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['3c', 'Ts'], Board Cards=['9c', '2s', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6101694915254238, 'bluff_count': 8, 'total_actions': 59, 'raise_count': 36}
Strategy for state (3, ('3c', 'Ts'), ('9c', '2s', '3h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.573. Total: -1.3139999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9015714285714286. Total: -1.7785714285714285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.027. Total: -0.086
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8c', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 8, 'total_actions': 60, 'raise_count': 36}
Strategy for state (0, ('6c', '8c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.CallAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.113. Total: -0.113
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8c', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6065573770491803, 'bluff_count': 9, 'total_actions': 61, 'raise_count': 37}
Strategy for state (0, ('6c', '8c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4935. Total: -0.7805
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7268333333333333. Total: -1.2138333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1065. Total: -0.2195
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ad', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5967741935483871, 'bluff_count': 10, 'total_actions': 62, 'raise_count': 37}
Strategy for state (0, ('6h', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5565. Total: -0.5565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7065. Total: -0.7065
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0435. Total: -0.0435
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ad', '6h'], Board Cards=['9s', '6d', '4h']
Opponent tendencies updated: {'aggression_frequency': 0.6031746031746031, 'bluff_count': 10, 'total_actions': 63, 'raise_count': 38}
Strategy for state (3, ('6h', 'Ad'), ('9s', '6d', '4h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.576. Total: -0.576
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.024. Total: -0.024
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.024. Total: -0.024
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['Ad', '6h'], Board Cards=['9s', '6d', '4h']
Opponent tendencies updated: {'aggression_frequency': 0.609375, 'bluff_count': 10, 'total_actions': 64, 'raise_count': 39}
Strategy for state (3, ('6h', 'Ad'), ('9s', '6d', '4h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.576. Total: -0.952
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9070344827586206. Total: -0.9070344827586206
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.024. Total: -0.048
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Ad', '6h'], Board Cards=['9s', '6d', '4h', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.6153846153846154, 'bluff_count': 10, 'total_actions': 65, 'raise_count': 40}
Strategy for state (4, ('6h', 'Ad'), ('9s', '6d', '4h', 'Js')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15000000000000002. Total: 0.15000000000000002
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.75. Total: -0.75
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.75. Total: -0.75
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 114.0
sent answer: RaiseAction(amount=114.0)
Round State: Street=4, My Cards=['Ad', '6h'], Board Cards=['9s', '6d', '4h', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.6212121212121212, 'bluff_count': 10, 'total_actions': 66, 'raise_count': 41}
Strategy for state (4, ('6h', 'Ad'), ('9s', '6d', '4h', 'Js')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.129. Total: 0.47900000000000004
Regret updated for <class 'skeleton.actions.CallAction'>: -0.26576439790575923. Total: -0.26576439790575923
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.729. Total: -1.479
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 381
sent answer: RaiseAction(amount=381)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6d', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6119402985074627, 'bluff_count': 10, 'total_actions': 67, 'raise_count': 41}
Strategy for state (0, ('6d', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6d', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6176470588235294, 'bluff_count': 11, 'total_actions': 68, 'raise_count': 42}
Strategy for state (0, ('6d', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.8784999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7763333333333333. Total: -1.3118333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.1215
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', 'Ac'], Board Cards=['8s', 'Qd', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6231884057971014, 'bluff_count': 11, 'total_actions': 69, 'raise_count': 43}
Strategy for state (3, ('6d', 'Ac'), ('8s', 'Qd', '3d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.573. Total: -0.573
Regret updated for <class 'skeleton.actions.CallAction'>: -0.848. Total: -0.848
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.027. Total: -0.027
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['6d', 'Ac'], Board Cards=['8s', 'Qd', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6285714285714286, 'bluff_count': 11, 'total_actions': 70, 'raise_count': 44}
Strategy for state (3, ('6d', 'Ac'), ('8s', 'Qd', '3d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.565. Total: -0.938
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8816666666666666. Total: -1.7296666666666667
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.035. Total: -0.062
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6c', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6197183098591549, 'bluff_count': 12, 'total_actions': 71, 'raise_count': 44}
Strategy for state (0, ('6c', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6815. Total: -0.6815
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6c', 'Jd'], Board Cards=['2h', 'Ad', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.625, 'bluff_count': 12, 'total_actions': 72, 'raise_count': 45}
Strategy for state (3, ('6c', 'Jd'), ('2h', 'Ad', 'Ts')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.586. Total: -0.586
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.014. Total: -0.014
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.014. Total: -0.014
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['6c', 'Jd'], Board Cards=['2h', 'Ad', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6301369863013698, 'bluff_count': 12, 'total_actions': 73, 'raise_count': 46}
Strategy for state (3, ('6c', 'Jd'), ('2h', 'Ad', 'Ts')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.585. Total: -0.9709999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.885. Total: -0.885
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.015. Total: -0.028999999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['2h', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6216216216216216, 'bluff_count': 12, 'total_actions': 74, 'raise_count': 46}
Strategy for state (0, ('2h', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.0535
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2h', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6266666666666667, 'bluff_count': 12, 'total_actions': 75, 'raise_count': 47}
Strategy for state (0, ('2h', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.8845000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7713333333333334. Total: -1.3178333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.11549999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2h', 'Ac'], Board Cards=['6h', '6s', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.631578947368421, 'bluff_count': 12, 'total_actions': 76, 'raise_count': 48}
Strategy for state (3, ('2h', 'Ac'), ('6h', '6s', '9s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5815. Total: -0.5815
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8565. Total: -0.8565
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0185. Total: -0.0185
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['2h', 'Ac'], Board Cards=['6h', '6s', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.6363636363636364, 'bluff_count': 13, 'total_actions': 77, 'raise_count': 49}
Strategy for state (3, ('2h', 'Ac'), ('6h', '6s', '9s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.9644999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8996666666666666. Total: -1.7561666666666667
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.035500000000000004
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Qs', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6282051282051282, 'bluff_count': 13, 'total_actions': 78, 'raise_count': 49}
Strategy for state (0, ('2s', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6825. Total: -0.6825
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Qs', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6329113924050633, 'bluff_count': 13, 'total_actions': 79, 'raise_count': 50}
Strategy for state (0, ('2s', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.8565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.799. Total: -1.4815
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.14350000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['Qs', '2s'], Board Cards=['Js', '5d', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6375, 'bluff_count': 13, 'total_actions': 80, 'raise_count': 51}
Strategy for state (3, ('2s', 'Qs'), ('Js', '5d', 'Ts')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34299999999999997. Total: -0.34299999999999997
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.257. Total: -0.257
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.257. Total: -0.257
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 20.560000000000006
sent answer: RaiseAction(amount=20.560000000000006)
Round State: Street=3, My Cards=['Qs', '2s'], Board Cards=['Js', '5d', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6419753086419753, 'bluff_count': 13, 'total_actions': 81, 'raise_count': 52}
Strategy for state (3, ('2s', 'Qs'), ('Js', '5d', 'Ts')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.351. Total: -0.49399999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.726609756097561. Total: -0.726609756097561
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.249. Total: -0.506
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 79.68
sent answer: RaiseAction(amount=79.68)
Round State: Street=4, My Cards=['Qs', '2s'], Board Cards=['Js', '5d', 'Ts', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6463414634146342, 'bluff_count': 13, 'total_actions': 82, 'raise_count': 53}
Strategy for state (4, ('2s', 'Qs'), ('Js', '5d', 'Ts', 'Jc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.384. Total: -0.384
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.216. Total: -0.216
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.216. Total: -0.216
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 153.79200000000003
sent answer: RaiseAction(amount=153.79200000000003)
Round State: Street=4, My Cards=['Qs', '2s'], Board Cards=['Js', '5d', 'Ts', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6506024096385542, 'bluff_count': 13, 'total_actions': 83, 'raise_count': 54}
Strategy for state (4, ('2s', 'Qs'), ('Js', '5d', 'Ts', 'Jc')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8083944099378882. Total: -0.8083944099378882
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1885. Total: -0.40449999999999997
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Tc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6428571428571429, 'bluff_count': 13, 'total_actions': 84, 'raise_count': 54}
Strategy for state (0, ('Ad', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.5235
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5235. Total: -0.5235
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.0765
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Tc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6470588235294118, 'bluff_count': 13, 'total_actions': 85, 'raise_count': 55}
Strategy for state (0, ('Ad', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.841
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7508333333333334. Total: -1.2743333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.159
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Tc', 'Ad'], Board Cards=['Qs', 'Jc', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.6511627906976745, 'bluff_count': 13, 'total_actions': 86, 'raise_count': 56}
Strategy for state (3, ('Ad', 'Tc'), ('Qs', 'Jc', '9s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.385. Total: -0.385
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7080769230769232. Total: -0.7080769230769232
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.215. Total: -0.215
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 24
sent answer: RaiseAction(amount=24)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8c', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6436781609195402, 'bluff_count': 13, 'total_actions': 87, 'raise_count': 56}
Strategy for state (0, ('8c', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.489. Total: -0.489
Regret updated for <class 'skeleton.actions.CallAction'>: -0.639. Total: -0.639
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.111. Total: -0.111
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ah', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6363636363636364, 'bluff_count': 14, 'total_actions': 88, 'raise_count': 56}
Strategy for state (0, ('8h', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.513. Total: -0.513
Regret updated for <class 'skeleton.actions.CallAction'>: -0.513. Total: -0.513
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.087. Total: -0.087
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ah', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6404494382022472, 'bluff_count': 14, 'total_actions': 89, 'raise_count': 57}
Strategy for state (0, ('8h', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -0.8314999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7518333333333334. Total: -1.2648333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.16849999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['2d', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6333333333333333, 'bluff_count': 14, 'total_actions': 90, 'raise_count': 57}
Strategy for state (0, ('2d', '4d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.CallAction'>: -0.674. Total: -0.674
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['2d', '4d'], Board Cards=['7s', 'Qh', '5s']
Opponent tendencies updated: {'aggression_frequency': 0.6373626373626373, 'bluff_count': 14, 'total_actions': 91, 'raise_count': 58}
Strategy for state (3, ('2d', '4d'), ('7s', 'Qh', '5s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -0.5599999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.04. Total: -0.04
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.04
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['2d', '4d'], Board Cards=['7s', 'Qh', '5s']
Opponent tendencies updated: {'aggression_frequency': 0.6413043478260869, 'bluff_count': 15, 'total_actions': 92, 'raise_count': 59}
Strategy for state (3, ('2d', '4d'), ('7s', 'Qh', '5s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5539999999999999. Total: -0.9139999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8850344827586206. Total: -0.8850344827586206
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.046. Total: -0.086
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['2d', '4d'], Board Cards=['7s', 'Qh', '5s', '9c']
Opponent tendencies updated: {'aggression_frequency': 0.6451612903225806, 'bluff_count': 15, 'total_actions': 93, 'raise_count': 60}
Strategy for state (4, ('2d', '4d'), ('7s', 'Qh', '5s', '9c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 7.448
sent answer: RaiseAction(amount=7.448)
Round State: Street=4, My Cards=['2d', '4d'], Board Cards=['7s', 'Qh', '5s', '9c']
Opponent tendencies updated: {'aggression_frequency': 0.648936170212766, 'bluff_count': 16, 'total_actions': 94, 'raise_count': 61}
Strategy for state (4, ('2d', '4d'), ('7s', 'Qh', '5s', '9c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.8979999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.936010989010989. Total: -0.936010989010989
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.10200000000000001
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['2d', '4d'], Board Cards=['7s', 'Qh', '5s', '9c', '4c']
Opponent tendencies updated: {'aggression_frequency': 0.6526315789473685, 'bluff_count': 16, 'total_actions': 95, 'raise_count': 62}
Strategy for state (5, ('2d', '4d'), ('7s', 'Qh', '5s', '9c', '4c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.20899999999999996. Total: -0.20899999999999996
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.391. Total: -0.391
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.391. Total: -0.391
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 246
sent answer: RaiseAction(amount=246)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Kd', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6458333333333334, 'bluff_count': 16, 'total_actions': 96, 'raise_count': 62}
Strategy for state (0, ('Kd', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kd', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6494845360824743, 'bluff_count': 16, 'total_actions': 97, 'raise_count': 63}
Strategy for state (0, ('Kd', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.8459999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7568333333333334. Total: -1.2793333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.154
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kd', 'Ts'], Board Cards=['9d', '4d', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.6530612244897959, 'bluff_count': 17, 'total_actions': 98, 'raise_count': 64}
Strategy for state (3, ('Kd', 'Ts'), ('9d', '4d', '2h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.826. Total: -0.826
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=4, My Cards=['Kd', 'Ts'], Board Cards=['9d', '4d', '2h', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.6565656565656566, 'bluff_count': 17, 'total_actions': 99, 'raise_count': 65}
Strategy for state (4, ('Kd', 'Ts'), ('9d', '4d', '2h', '6h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.511
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8693333333333334. Total: -0.8693333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.089
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 52
sent answer: RaiseAction(amount=52)
Round State: Street=5, My Cards=['Kd', 'Ts'], Board Cards=['9d', '4d', '2h', '6h', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.66, 'bluff_count': 17, 'total_actions': 100, 'raise_count': 66}
Strategy for state (5, ('Kd', 'Ts'), ('9d', '4d', '2h', '6h', 'Jc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3505. Total: -0.3505
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7403477157360405. Total: -0.7403477157360405
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2495. Total: -0.2495
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 194.61
sent answer: RaiseAction(amount=194.61)
Round State: Street=5, My Cards=['Kd', 'Ts'], Board Cards=['9d', '4d', '2h', '6h', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6633663366336634, 'bluff_count': 18, 'total_actions': 101, 'raise_count': 67}
Strategy for state (5, ('Kd', 'Ts'), ('9d', '4d', '2h', '6h', 'Jc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34149999999999997. Total: -0.49199999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7383602825745683. Total: -1.4787079983106088
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2585. Total: -0.508
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Qs', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6568627450980392, 'bluff_count': 19, 'total_actions': 102, 'raise_count': 67}
Strategy for state (0, ('2c', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5505. Total: -0.5505
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7005. Total: -0.7005
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0495. Total: -0.0495
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Th', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6504854368932039, 'bluff_count': 19, 'total_actions': 103, 'raise_count': 67}
Strategy for state (0, ('7d', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.CallAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.096
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Th', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6538461538461539, 'bluff_count': 19, 'total_actions': 104, 'raise_count': 68}
Strategy for state (0, ('7d', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.837
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7663333333333333. Total: -1.2703333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.163
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Th', '7d'], Board Cards=['Jh', 'Kc', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.6571428571428571, 'bluff_count': 20, 'total_actions': 105, 'raise_count': 69}
Strategy for state (3, ('7d', 'Th'), ('Jh', 'Kc', '2s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.824. Total: -0.824
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=4, My Cards=['Th', '7d'], Board Cards=['Jh', 'Kc', '2s', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.660377358490566, 'bluff_count': 21, 'total_actions': 106, 'raise_count': 70}
Strategy for state (4, ('7d', 'Th'), ('Jh', 'Kc', '2s', 'Jc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.492. Total: -0.492
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8695280898876404. Total: -0.8695280898876404
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.108. Total: -0.108
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 134
sent answer: RaiseAction(amount=134)
Round State: Street=4, My Cards=['Th', '7d'], Board Cards=['Jh', 'Kc', '2s', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6635514018691588, 'bluff_count': 21, 'total_actions': 107, 'raise_count': 71}
Strategy for state (4, ('7d', 'Th'), ('Jh', 'Kc', '2s', 'Jc')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8813369963369964. Total: -1.7508650862246369
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.115. Total: -0.223
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9d', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6574074074074074, 'bluff_count': 21, 'total_actions': 108, 'raise_count': 71}
Strategy for state (0, ('8d', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.474. Total: -0.474
Regret updated for <class 'skeleton.actions.CallAction'>: -0.624. Total: -0.624
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.126. Total: -0.126
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6.048
sent answer: RaiseAction(amount=6.048)
Round State: Street=0, My Cards=['9d', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6605504587155964, 'bluff_count': 21, 'total_actions': 109, 'raise_count': 72}
Strategy for state (0, ('8d', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.47. Total: -0.744
Regret updated for <class 'skeleton.actions.CallAction'>: -0.745. Total: -1.369
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.13. Total: -0.256
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', '8d'], Board Cards=['8c', 'Tc', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6636363636363637, 'bluff_count': 21, 'total_actions': 110, 'raise_count': 73}
Strategy for state (3, ('8d', '9d'), ('8c', 'Tc', '3d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.499. Total: -0.499
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.101. Total: -0.101
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.101. Total: -0.101
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12.928
sent answer: RaiseAction(amount=12.928)
Round State: Street=3, My Cards=['9d', '8d'], Board Cards=['8c', 'Tc', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 22, 'total_actions': 111, 'raise_count': 74}
Strategy for state (3, ('8d', '9d'), ('8c', 'Tc', '3d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.8069999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8709629629629629. Total: -0.8709629629629629
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.193
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 38.272
sent answer: RaiseAction(amount=38.272)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Td', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6607142857142857, 'bluff_count': 22, 'total_actions': 112, 'raise_count': 74}
Strategy for state (0, ('8c', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Td', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6637168141592921, 'bluff_count': 23, 'total_actions': 113, 'raise_count': 75}
Strategy for state (0, ('8c', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.8225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7443333333333334. Total: -1.2558333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.1775
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jh', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6578947368421053, 'bluff_count': 23, 'total_actions': 114, 'raise_count': 75}
Strategy for state (0, ('Jh', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6545. Total: -0.6545
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.0955
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Jh', 'Th'], Board Cards=['4s', 'Js', '8s']
Opponent tendencies updated: {'aggression_frequency': 0.6608695652173913, 'bluff_count': 23, 'total_actions': 115, 'raise_count': 76}
Strategy for state (3, ('Jh', 'Th'), ('4s', 'Js', '8s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -0.521
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.079. Total: -0.079
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.079
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 7.584000000000001
sent answer: RaiseAction(amount=7.584000000000001)
Round State: Street=3, My Cards=['Jh', 'Th'], Board Cards=['4s', 'Js', '8s']
Opponent tendencies updated: {'aggression_frequency': 0.6637931034482759, 'bluff_count': 23, 'total_actions': 116, 'raise_count': 77}
Strategy for state (3, ('Jh', 'Th'), ('4s', 'Js', '8s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.509. Total: -0.8300000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8602195121951219. Total: -0.8602195121951219
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.091. Total: -0.16999999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Jh', 'Th'], Board Cards=['4s', 'Js', '8s', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 23, 'total_actions': 117, 'raise_count': 78}
Strategy for state (4, ('Jh', 'Th'), ('4s', 'Js', '8s', '2d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.07300000000000006. Total: 0.07300000000000006
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.673. Total: -0.673
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.673. Total: -0.673
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 182.0
sent answer: RaiseAction(amount=182.0)
Round State: Street=4, My Cards=['Jh', 'Th'], Board Cards=['4s', 'Js', '8s', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.6694915254237288, 'bluff_count': 23, 'total_actions': 118, 'raise_count': 79}
Strategy for state (4, ('Jh', 'Th'), ('4s', 'Js', '8s', '2d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.08000000000000007. Total: 0.35300000000000015
Regret updated for <class 'skeleton.actions.CallAction'>: -0.31666666666666665. Total: -0.31666666666666665
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.68. Total: -1.3530000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 374
sent answer: RaiseAction(amount=374)
Round State: Street=5, My Cards=['Jh', 'Th'], Board Cards=['4s', 'Js', '8s', '2d', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6722689075630253, 'bluff_count': 23, 'total_actions': 119, 'raise_count': 80}
Strategy for state (5, ('Jh', 'Th'), ('4s', 'Js', '8s', '2d', '6c')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.8045. Total: -0.8045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.8045. Total: -0.8045
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['3s', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 23, 'total_actions': 120, 'raise_count': 80}
Strategy for state (0, ('3s', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -0.8784999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5335. Total: -1.2285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.1215
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['7h', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6611570247933884, 'bluff_count': 23, 'total_actions': 121, 'raise_count': 80}
Strategy for state (0, ('7h', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.5245
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6745. Total: -0.6745
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.0755
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['7h', 'Tc'], Board Cards=['Qh', 'Jc', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6639344262295082, 'bluff_count': 23, 'total_actions': 122, 'raise_count': 81}
Strategy for state (3, ('7h', 'Tc'), ('Qh', 'Jc', '8d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46199999999999997. Total: -0.46199999999999997
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.138. Total: -0.138
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.138. Total: -0.138
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 13.248000000000001
sent answer: RaiseAction(amount=13.248000000000001)
Round State: Street=3, My Cards=['7h', 'Tc'], Board Cards=['Qh', 'Jc', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 23, 'total_actions': 123, 'raise_count': 82}
Strategy for state (3, ('7h', 'Tc'), ('Qh', 'Jc', '8d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46449999999999997. Total: -0.7264999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8267641509433963. Total: -0.8267641509433963
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1355. Total: -0.2735
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 55.284000000000006
sent answer: RaiseAction(amount=55.284000000000006)
Round State: Street=4, My Cards=['7h', 'Tc'], Board Cards=['Qh', 'Jc', '8d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.6693548387096774, 'bluff_count': 23, 'total_actions': 124, 'raise_count': 83}
Strategy for state (4, ('7h', 'Tc'), ('Qh', 'Jc', '8d', '7s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.12950000000000006. Total: 0.12950000000000006
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7295. Total: -0.7295
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7295. Total: -0.7295
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 339
sent answer: RaiseAction(amount=339)
Round State: Street=5, My Cards=['7h', 'Tc'], Board Cards=['Qh', 'Jc', '8d', '7s', 'Kd']
Opponent tendencies updated: {'aggression_frequency': 0.672, 'bluff_count': 23, 'total_actions': 125, 'raise_count': 84}
Strategy for state (5, ('7h', 'Tc'), ('Qh', 'Jc', '8d', '7s', 'Kd')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.456. Total: -0.456
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.456. Total: -0.456
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9c', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 23, 'total_actions': 126, 'raise_count': 84}
Strategy for state (0, ('9c', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9c', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6692913385826772, 'bluff_count': 23, 'total_actions': 127, 'raise_count': 85}
Strategy for state (0, ('9c', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.867
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7653333333333334. Total: -1.3003333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.133
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['9c', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.671875, 'bluff_count': 23, 'total_actions': 128, 'raise_count': 86}
Strategy for state (0, ('9c', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -1.2015
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8345. Total: -2.1348333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.1985
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['4s', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 23, 'total_actions': 129, 'raise_count': 86}
Strategy for state (0, ('4c', '4s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.353. Total: -0.353
Regret updated for <class 'skeleton.actions.CallAction'>: -0.503. Total: -0.503
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.247. Total: -0.247
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 11.856
sent answer: RaiseAction(amount=11.856)
Round State: Street=3, My Cards=['4s', '4c'], Board Cards=['3c', '8c', 'Qd']
Opponent tendencies updated: {'aggression_frequency': 0.6692307692307692, 'bluff_count': 23, 'total_actions': 130, 'raise_count': 87}
Strategy for state (3, ('4c', '4s'), ('3c', '8c', 'Qd')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.47. Total: -0.47
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.13. Total: -0.13
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.13. Total: -0.13
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 22.880000000000003
sent answer: RaiseAction(amount=22.880000000000003)
Round State: Street=3, My Cards=['4s', '4c'], Board Cards=['3c', '8c', 'Qd']
Opponent tendencies updated: {'aggression_frequency': 0.6717557251908397, 'bluff_count': 23, 'total_actions': 131, 'raise_count': 88}
Strategy for state (3, ('4c', '4s'), ('3c', '8c', 'Qd')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.474. Total: -0.744
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8517777777777777. Total: -0.8517777777777777
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.126. Total: -0.256
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Qh', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 23, 'total_actions': 132, 'raise_count': 88}
Strategy for state (0, ('8d', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qh', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6691729323308271, 'bluff_count': 23, 'total_actions': 133, 'raise_count': 89}
Strategy for state (0, ('8d', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.8625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7598333333333334. Total: -1.2958333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.1375
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5c', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.664179104477612, 'bluff_count': 24, 'total_actions': 134, 'raise_count': 89}
Strategy for state (0, ('5c', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.495. Total: -0.495
Regret updated for <class 'skeleton.actions.CallAction'>: -0.645. Total: -0.645
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.105. Total: -0.105
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jh', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6592592592592592, 'bluff_count': 24, 'total_actions': 135, 'raise_count': 89}
Strategy for state (0, ('Jh', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.472. Total: -0.7765
Regret updated for <class 'skeleton.actions.CallAction'>: -0.472. Total: -1.1265
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.128. Total: -0.2235
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Jh', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6544117647058824, 'bluff_count': 24, 'total_actions': 136, 'raise_count': 89}
Strategy for state (0, ('Jh', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46699999999999997. Total: -1.0434999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.617. Total: -1.7435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.133. Total: -0.35650000000000004
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Th', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6496350364963503, 'bluff_count': 25, 'total_actions': 137, 'raise_count': 89}
Strategy for state (0, ('2h', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6855. Total: -0.6855
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Kc', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.644927536231884, 'bluff_count': 26, 'total_actions': 138, 'raise_count': 89}
Strategy for state (0, ('Kc', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kc', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6474820143884892, 'bluff_count': 26, 'total_actions': 139, 'raise_count': 90}
Strategy for state (0, ('Kc', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.841
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7568333333333334. Total: -1.2743333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.159
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8s', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6428571428571429, 'bluff_count': 26, 'total_actions': 140, 'raise_count': 90}
Strategy for state (0, ('8s', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.CallAction'>: -0.69. Total: -0.69
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['8s', 'Kc'], Board Cards=['6c', 'Kd', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.6453900709219859, 'bluff_count': 26, 'total_actions': 141, 'raise_count': 91}
Strategy for state (3, ('8s', 'Kc'), ('6c', 'Kd', '6d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.421. Total: -0.421
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.179. Total: -0.179
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.179. Total: -0.179
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 17.184
sent answer: RaiseAction(amount=17.184)
Round State: Street=3, My Cards=['8s', 'Kc'], Board Cards=['6c', 'Kd', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.647887323943662, 'bluff_count': 26, 'total_actions': 142, 'raise_count': 92}
Strategy for state (3, ('8s', 'Kc'), ('6c', 'Kd', '6d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44699999999999995. Total: -0.6679999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8162307692307692. Total: -0.8162307692307692
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.153. Total: -0.33199999999999996
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9h', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6433566433566433, 'bluff_count': 26, 'total_actions': 143, 'raise_count': 92}
Strategy for state (0, ('9h', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.492. Total: -0.492
Regret updated for <class 'skeleton.actions.CallAction'>: -0.492. Total: -0.492
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.108. Total: -0.108
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9h', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6458333333333334, 'bluff_count': 26, 'total_actions': 144, 'raise_count': 93}
Strategy for state (0, ('9h', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.496. Total: -0.788
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7293333333333334. Total: -1.2213333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.104. Total: -0.212
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8.32
sent answer: RaiseAction(amount=8.32)
Round State: Street=0, My Cards=['9h', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6482758620689655, 'bluff_count': 26, 'total_actions': 145, 'raise_count': 94}
Strategy for state (0, ('9h', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.485. Total: -1.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.785. Total: -2.0063333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.115. Total: -0.327
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9d', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6438356164383562, 'bluff_count': 26, 'total_actions': 146, 'raise_count': 94}
Strategy for state (0, ('5c', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6799999999999999. Total: -0.6799999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.07
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4s', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6394557823129252, 'bluff_count': 26, 'total_actions': 147, 'raise_count': 94}
Strategy for state (0, ('4s', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4s', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6418918918918919, 'bluff_count': 26, 'total_actions': 148, 'raise_count': 95}
Strategy for state (0, ('4s', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.8704999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7773333333333333. Total: -1.3038333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.1295
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kd', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6375838926174496, 'bluff_count': 26, 'total_actions': 149, 'raise_count': 95}
Strategy for state (0, ('9d', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.513. Total: -0.513
Regret updated for <class 'skeleton.actions.CallAction'>: -0.663. Total: -0.663
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.087. Total: -0.087
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Kd', '9d'], Board Cards=['7d', '3s', 'Qh']
Opponent tendencies updated: {'aggression_frequency': 0.64, 'bluff_count': 26, 'total_actions': 150, 'raise_count': 96}
Strategy for state (3, ('9d', 'Kd'), ('7d', '3s', 'Qh')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.569. Total: -0.569
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.031. Total: -0.031
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.031. Total: -0.031
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.976
sent answer: RaiseAction(amount=2.976)
Round State: Street=3, My Cards=['Kd', '9d'], Board Cards=['7d', '3s', 'Qh']
Opponent tendencies updated: {'aggression_frequency': 0.6423841059602649, 'bluff_count': 26, 'total_actions': 151, 'raise_count': 97}
Strategy for state (3, ('9d', 'Kd'), ('7d', '3s', 'Qh')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -0.9289999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.86. Total: -0.86
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.07100000000000001
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=4, My Cards=['Kd', '9d'], Board Cards=['7d', '3s', 'Qh', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.6447368421052632, 'bluff_count': 26, 'total_actions': 152, 'raise_count': 98}
Strategy for state (4, ('9d', 'Kd'), ('7d', '3s', 'Qh', 'Qc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.508
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.092. Total: -0.092
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.092
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 17.664
sent answer: RaiseAction(amount=17.664)
Round State: Street=4, My Cards=['Kd', '9d'], Board Cards=['7d', '3s', 'Qh', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.6470588235294118, 'bluff_count': 26, 'total_actions': 153, 'raise_count': 99}
Strategy for state (4, ('9d', 'Kd'), ('7d', '3s', 'Qh', 'Qc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.8240000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.890025974025974. Total: -0.890025974025974
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.176
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['8h', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6428571428571429, 'bluff_count': 27, 'total_actions': 154, 'raise_count': 99}
Strategy for state (0, ('8h', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.523
Regret updated for <class 'skeleton.actions.CallAction'>: -0.523. Total: -0.523
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.077
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['8h', 'Jc'], Board Cards=['Jh', '7c', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.6451612903225806, 'bluff_count': 27, 'total_actions': 155, 'raise_count': 100}
Strategy for state (3, ('8h', 'Jc'), ('Jh', '7c', '3c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.837. Total: -0.837
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.063. Total: -0.063
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 20
sent answer: RaiseAction(amount=20)
Round State: Street=3, My Cards=['8h', 'Jc'], Board Cards=['Jh', '7c', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.6474358974358975, 'bluff_count': 27, 'total_actions': 156, 'raise_count': 101}
Strategy for state (3, ('8h', 'Jc'), ('Jh', '7c', '3c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.8559999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8957441860465116. Total: -1.7327441860465116
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.14400000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['8h', 'Jc'], Board Cards=['Jh', '7c', '3c', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.6496815286624203, 'bluff_count': 27, 'total_actions': 157, 'raise_count': 102}
Strategy for state (4, ('8h', 'Jc'), ('Jh', '7c', '3c', '3s')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.25017099567099566. Total: -0.25017099567099566
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7455. Total: -0.7455
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5s', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6455696202531646, 'bluff_count': 27, 'total_actions': 158, 'raise_count': 102}
Strategy for state (0, ('3c', '5s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6545. Total: -0.6545
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.0955
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['5s', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6477987421383647, 'bluff_count': 27, 'total_actions': 159, 'raise_count': 103}
Strategy for state (0, ('3c', '5s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.8159999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7865. Total: -1.4409999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.184
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=0, My Cards=['5s', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.65, 'bluff_count': 28, 'total_actions': 160, 'raise_count': 104}
Strategy for state (0, ('3c', '5s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -1.1159999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.825925925925926. Total: -2.266925925925926
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.28400000000000003
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5s', '3c'], Board Cards=['9s', 'Ts', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.6521739130434783, 'bluff_count': 28, 'total_actions': 161, 'raise_count': 105}
Strategy for state (3, ('3c', '5s'), ('9s', 'Ts', '4d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.523
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.077. Total: -0.077
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.077
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 18.480000000000004
sent answer: RaiseAction(amount=18.480000000000004)
Round State: Street=3, My Cards=['5s', '3c'], Board Cards=['9s', 'Ts', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.654320987654321, 'bluff_count': 28, 'total_actions': 162, 'raise_count': 106}
Strategy for state (3, ('3c', '5s'), ('9s', 'Ts', '4d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.8539999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9077441860465116. Total: -0.9077441860465116
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.14600000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['5s', '3c'], Board Cards=['9s', 'Ts', '4d', 'Ac']
Opponent tendencies updated: {'aggression_frequency': 0.656441717791411, 'bluff_count': 28, 'total_actions': 163, 'raise_count': 107}
Strategy for state (4, ('3c', '5s'), ('9s', 'Ts', '4d', 'Ac')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.416. Total: -0.416
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.184. Total: -0.184
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.184. Total: -0.184
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 150.144
sent answer: RaiseAction(amount=150.144)
Round State: Street=4, My Cards=['5s', '3c'], Board Cards=['9s', 'Ts', '4d', 'Ac']
Opponent tendencies updated: {'aggression_frequency': 0.6585365853658537, 'bluff_count': 28, 'total_actions': 164, 'raise_count': 108}
Strategy for state (4, ('3c', '5s'), ('9s', 'Ts', '4d', 'Ac')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8256832504145937. Total: -0.8256832504145937
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.171. Total: -0.355
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['5s', '3c'], Board Cards=['9s', 'Ts', '4d', 'Ac', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.6606060606060606, 'bluff_count': 28, 'total_actions': 165, 'raise_count': 109}
Strategy for state (5, ('3c', '5s'), ('9s', 'Ts', '4d', 'Ac', 'Th')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.028. Total: -0.028
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.028. Total: -0.028
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4d', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6566265060240963, 'bluff_count': 28, 'total_actions': 166, 'raise_count': 109}
Strategy for state (0, ('4d', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.CallAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.07
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4d', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6586826347305389, 'bluff_count': 28, 'total_actions': 167, 'raise_count': 110}
Strategy for state (0, ('4d', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -0.8634999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7668333333333334. Total: -1.2968333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.1365
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['3h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6547619047619048, 'bluff_count': 28, 'total_actions': 168, 'raise_count': 110}
Strategy for state (0, ('3h', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.CallAction'>: -0.674. Total: -0.674
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['3h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6568047337278107, 'bluff_count': 29, 'total_actions': 169, 'raise_count': 111}
Strategy for state (0, ('3h', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.8414999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7925. Total: -1.4665
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.1585
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3h', 'Kh'], Board Cards=['3s', '5s', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.6588235294117647, 'bluff_count': 29, 'total_actions': 170, 'raise_count': 112}
Strategy for state (3, ('3h', 'Kh'), ('3s', '5s', '2c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6.144
sent answer: RaiseAction(amount=6.144)
Round State: Street=3, My Cards=['3h', 'Kh'], Board Cards=['3s', '5s', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.6608187134502924, 'bluff_count': 29, 'total_actions': 171, 'raise_count': 113}
Strategy for state (3, ('3h', 'Kh'), ('3s', '5s', '2c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5545. Total: -0.9064999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.900445945945946. Total: -0.900445945945946
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0455. Total: -0.0935
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9d', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6569767441860465, 'bluff_count': 29, 'total_actions': 172, 'raise_count': 113}
Strategy for state (0, ('9d', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9d', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6589595375722543, 'bluff_count': 29, 'total_actions': 173, 'raise_count': 114}
Strategy for state (0, ('9d', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.881
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7763333333333333. Total: -1.3143333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.119
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', 'Ac'], Board Cards=['7c', 'As', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.6609195402298851, 'bluff_count': 29, 'total_actions': 174, 'raise_count': 115}
Strategy for state (3, ('9d', 'Ac'), ('7c', 'As', 'Ks')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.575. Total: -0.575
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8638888888888888. Total: -0.8638888888888888
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.025. Total: -0.025
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Qc', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6571428571428571, 'bluff_count': 30, 'total_actions': 175, 'raise_count': 115}
Strategy for state (0, ('Js', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5105. Total: -0.5105
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6605. Total: -0.6605
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0895. Total: -0.0895
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Qc', 'Js'], Board Cards=['4h', '9d', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.6590909090909091, 'bluff_count': 30, 'total_actions': 176, 'raise_count': 116}
Strategy for state (3, ('Js', 'Qc'), ('4h', '9d', 'Kc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.477. Total: -0.477
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.123. Total: -0.123
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.123. Total: -0.123
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 11.808
sent answer: RaiseAction(amount=11.808)
Round State: Street=3, My Cards=['Qc', 'Js'], Board Cards=['4h', '9d', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.6610169491525424, 'bluff_count': 30, 'total_actions': 177, 'raise_count': 117}
Strategy for state (3, ('Js', 'Qc'), ('4h', '9d', 'Kc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.476. Total: -0.7529999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8396363636363636. Total: -0.8396363636363636
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.124. Total: -0.247
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6c', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6573033707865169, 'bluff_count': 30, 'total_actions': 178, 'raise_count': 117}
Strategy for state (0, ('2d', '6c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6c', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.659217877094972, 'bluff_count': 30, 'total_actions': 179, 'raise_count': 118}
Strategy for state (0, ('2d', '6c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.8775
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7638333333333334. Total: -1.3108333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.1225
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4c', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6555555555555556, 'bluff_count': 30, 'total_actions': 180, 'raise_count': 118}
Strategy for state (0, ('4c', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.697. Total: -0.697
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['4c', '9d'], Board Cards=['2c', '2s', '7c']
Opponent tendencies updated: {'aggression_frequency': 0.6574585635359116, 'bluff_count': 30, 'total_actions': 181, 'raise_count': 119}
Strategy for state (3, ('4c', '9d'), ('2c', '2s', '7c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5855. Total: -0.5855
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0145. Total: -0.0145
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0145. Total: -0.0145
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['4c', '9d'], Board Cards=['2c', '2s', '7c']
Opponent tendencies updated: {'aggression_frequency': 0.6593406593406593, 'bluff_count': 30, 'total_actions': 182, 'raise_count': 120}
Strategy for state (3, ('4c', '9d'), ('2c', '2s', '7c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5725. Total: -0.958
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8725. Total: -0.8725
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0275. Total: -0.042
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4h', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6557377049180327, 'bluff_count': 31, 'total_actions': 183, 'raise_count': 120}
Strategy for state (0, ('4h', '7c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -0.525
Regret updated for <class 'skeleton.actions.CallAction'>: -0.525. Total: -0.525
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.075
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4h', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.657608695652174, 'bluff_count': 32, 'total_actions': 184, 'raise_count': 121}
Strategy for state (0, ('4h', '7c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.8454999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7538333333333334. Total: -1.2788333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.1545
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kc', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.654054054054054, 'bluff_count': 32, 'total_actions': 185, 'raise_count': 121}
Strategy for state (0, ('3d', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.697. Total: -0.697
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Kc', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6559139784946236, 'bluff_count': 32, 'total_actions': 186, 'raise_count': 122}
Strategy for state (0, ('3d', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5595. Total: -0.9064999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8345. Total: -1.5314999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0405. Total: -0.0935
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Qd', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6524064171122995, 'bluff_count': 32, 'total_actions': 187, 'raise_count': 122}
Strategy for state (0, ('Qd', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.483. Total: -0.483
Regret updated for <class 'skeleton.actions.CallAction'>: -0.483. Total: -0.483
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.117. Total: -0.117
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qd', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6542553191489362, 'bluff_count': 32, 'total_actions': 188, 'raise_count': 123}
Strategy for state (0, ('Qd', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5015. Total: -0.7845
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7348333333333333. Total: -1.2178333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0985. Total: -0.21550000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qd', 'Td'], Board Cards=['6d', 'Qc', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.656084656084656, 'bluff_count': 32, 'total_actions': 189, 'raise_count': 124}
Strategy for state (3, ('Qd', 'Td'), ('6d', 'Qc', '5c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8397619047619047. Total: -0.8397619047619047
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 14
sent answer: RaiseAction(amount=14)
Round State: Street=4, My Cards=['Qd', 'Td'], Board Cards=['6d', 'Qc', '5c', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.6578947368421053, 'bluff_count': 32, 'total_actions': 190, 'raise_count': 125}
Strategy for state (4, ('Qd', 'Td'), ('6d', 'Qc', '5c', '2h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.11599999999999999. Total: 0.11599999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.26226086956521744. Total: -0.26226086956521744
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.716. Total: -0.716
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 315.0
sent answer: RaiseAction(amount=315.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5h', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6544502617801047, 'bluff_count': 32, 'total_actions': 191, 'raise_count': 125}
Strategy for state (0, ('5c', '5h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3545. Total: -0.3545
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2455. Total: -0.2455
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 11.784
sent answer: RaiseAction(amount=11.784)
Round State: Street=0, My Cards=['5h', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.65625, 'bluff_count': 33, 'total_actions': 192, 'raise_count': 126}
Strategy for state (0, ('5c', '5h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3615. Total: -0.516
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6969838709677418. Total: -1.2014838709677418
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2385. Total: -0.484
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5h', '5c'], Board Cards=['9h', '8h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.6580310880829016, 'bluff_count': 33, 'total_actions': 193, 'raise_count': 127}
Strategy for state (3, ('5c', '5h'), ('9h', '8h', 'Td')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44699999999999995. Total: -0.44699999999999995
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.153. Total: -0.153
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.153. Total: -0.153
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 44.06400000000001
sent answer: RaiseAction(amount=44.06400000000001)
Round State: Street=3, My Cards=['5h', '5c'], Board Cards=['9h', '8h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.6597938144329897, 'bluff_count': 34, 'total_actions': 194, 'raise_count': 128}
Strategy for state (3, ('5c', '5h'), ('9h', '8h', 'Td')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4485. Total: -0.6955
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8408076923076924. Total: -0.8408076923076924
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1515. Total: -0.3045
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 312.69599999999997
sent answer: RaiseAction(amount=312.69599999999997)
Round State: Street=3, My Cards=['5h', '5c'], Board Cards=['9h', '8h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.6615384615384615, 'bluff_count': 34, 'total_actions': 195, 'raise_count': 129}
Strategy for state (3, ('5c', '5h'), ('9h', '8h', 'Td')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8477677595628416. Total: -1.688575451870534
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1495. Total: -0.45399999999999996
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6581632653061225, 'bluff_count': 34, 'total_actions': 196, 'raise_count': 129}
Strategy for state (0, ('3c', '5c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4855. Total: -0.4855
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4855. Total: -0.4855
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1145. Total: -0.1145
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['5c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6598984771573604, 'bluff_count': 35, 'total_actions': 197, 'raise_count': 130}
Strategy for state (0, ('3c', '5c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.482. Total: -0.7675
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7153333333333334. Total: -1.2008333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.118. Total: -0.23249999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5c', '3c'], Board Cards=['Kd', '3h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.6616161616161617, 'bluff_count': 35, 'total_actions': 198, 'raise_count': 131}
Strategy for state (3, ('3c', '5c'), ('Kd', '3h', 'Td')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.569. Total: -0.569
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8578888888888888. Total: -0.8578888888888888
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.031. Total: -0.031
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=4, My Cards=['5c', '3c'], Board Cards=['Kd', '3h', 'Td', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.6633165829145728, 'bluff_count': 35, 'total_actions': 199, 'raise_count': 132}
Strategy for state (4, ('3c', '5c'), ('Kd', '3h', 'Td', 'Jd')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.038000000000000034. Total: 0.038000000000000034
Regret updated for <class 'skeleton.actions.CallAction'>: -0.34258252427184466. Total: -0.34258252427184466
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.638. Total: -0.638
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 353.5
sent answer: RaiseAction(amount=353.5)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['3s', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.66, 'bluff_count': 35, 'total_actions': 200, 'raise_count': 132}
Strategy for state (0, ('3s', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6825. Total: -0.6825
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['3d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6567164179104478, 'bluff_count': 36, 'total_actions': 201, 'raise_count': 132}
Strategy for state (0, ('3d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6584158415841584, 'bluff_count': 37, 'total_actions': 202, 'raise_count': 133}
Strategy for state (0, ('3d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.8425
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7493333333333334. Total: -1.2758333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.1575
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3d', '6s'], Board Cards=['2s', '9h', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6600985221674877, 'bluff_count': 37, 'total_actions': 203, 'raise_count': 134}
Strategy for state (3, ('3d', '6s'), ('2s', '9h', '6c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8293529411764705. Total: -0.8293529411764705
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6.36
sent answer: RaiseAction(amount=6.36)
Round State: Street=4, My Cards=['3d', '6s'], Board Cards=['2s', '9h', '6c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6617647058823529, 'bluff_count': 37, 'total_actions': 204, 'raise_count': 135}
Strategy for state (4, ('3d', '6s'), ('2s', '9h', '6c', '7h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.10099999999999998. Total: 0.10099999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.26391228070175443. Total: -0.26391228070175443
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.701. Total: -0.701
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 192.5
sent answer: RaiseAction(amount=192.5)
Round State: Street=5, My Cards=['3d', '6s'], Board Cards=['2s', '9h', '6c', '7h', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.6634146341463415, 'bluff_count': 37, 'total_actions': 205, 'raise_count': 136}
Strategy for state (5, ('3d', '6s'), ('2s', '9h', '6c', '7h', '4d')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4086996699669967. Total: -0.4086996699669967
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.588. Total: -0.588
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['2c', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6601941747572816, 'bluff_count': 37, 'total_actions': 206, 'raise_count': 136}
Strategy for state (0, ('2c', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5555. Total: -0.5555
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7055. Total: -0.7055
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0445. Total: -0.0445
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['2c', 'Js'], Board Cards=['Ks', 'Kh', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.6618357487922706, 'bluff_count': 37, 'total_actions': 207, 'raise_count': 137}
Strategy for state (3, ('2c', 'Js'), ('Ks', 'Kh', '9d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.586. Total: -0.586
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.014. Total: -0.014
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.014. Total: -0.014
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['2c', 'Js'], Board Cards=['Ks', 'Kh', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.6634615384615384, 'bluff_count': 38, 'total_actions': 208, 'raise_count': 138}
Strategy for state (3, ('2c', 'Js'), ('Ks', 'Kh', '9d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.9689999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.883. Total: -0.883
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.031
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9h', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6602870813397129, 'bluff_count': 38, 'total_actions': 209, 'raise_count': 138}
Strategy for state (0, ('3h', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9h', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6619047619047619, 'bluff_count': 38, 'total_actions': 210, 'raise_count': 139}
Strategy for state (0, ('3h', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -0.8325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7483333333333334. Total: -1.2658333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.1675
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['9h', '3h'], Board Cards=['Qc', '9c', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.6635071090047393, 'bluff_count': 38, 'total_actions': 211, 'raise_count': 140}
Strategy for state (3, ('3h', '9h'), ('Qc', '9c', '2c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5579999999999999. Total: -0.5579999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8746666666666666. Total: -0.8746666666666666
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.042. Total: -0.042
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12
sent answer: RaiseAction(amount=12)
Round State: Street=4, My Cards=['9h', '3h'], Board Cards=['Qc', '9c', '2c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6650943396226415, 'bluff_count': 38, 'total_actions': 212, 'raise_count': 141}
Strategy for state (4, ('3h', '9h'), ('Qc', '9c', '2c', '7h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.08400000000000007. Total: 0.08400000000000007
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2865882352941176. Total: -0.2865882352941176
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.684. Total: -0.684
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 231.0
sent answer: RaiseAction(amount=231.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6h', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6619718309859155, 'bluff_count': 38, 'total_actions': 213, 'raise_count': 141}
Strategy for state (0, ('6h', '8d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.CallAction'>: -0.654. Total: -0.654
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.096
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6h', '8d'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6635514018691588, 'bluff_count': 38, 'total_actions': 214, 'raise_count': 142}
Strategy for state (3, ('6h', '8d'), ('3s', '4h', '3h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5715. Total: -0.5715
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0285. Total: -0.0285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0285. Total: -0.0285
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.7360000000000007
sent answer: RaiseAction(amount=2.7360000000000007)
Round State: Street=3, My Cards=['6h', '8d'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6651162790697674, 'bluff_count': 39, 'total_actions': 215, 'raise_count': 143}
Strategy for state (3, ('6h', '8d'), ('3s', '4h', '3h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5765. Total: -0.948
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8765000000000001. Total: -0.8765000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0235. Total: -0.052000000000000005
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6h', '8d'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 39, 'total_actions': 216, 'raise_count': 144}
Strategy for state (3, ('6h', '8d'), ('3s', '4h', '3h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -1.322
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9025714285714286. Total: -1.7790714285714286
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.078
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['6h', '8d'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6682027649769585, 'bluff_count': 39, 'total_actions': 217, 'raise_count': 145}
Strategy for state (3, ('6h', '8d'), ('3s', '4h', '3h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5735. Total: -1.6955
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9179444444444445. Total: -2.6970158730158733
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0265. Total: -0.1045
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Jh', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6651376146788991, 'bluff_count': 39, 'total_actions': 218, 'raise_count': 145}
Strategy for state (0, ('4d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.CallAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.072
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 39, 'total_actions': 219, 'raise_count': 146}
Strategy for state (0, ('4d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.8525
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7578333333333334. Total: -1.2858333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.1475
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ts', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6636363636363637, 'bluff_count': 39, 'total_actions': 220, 'raise_count': 146}
Strategy for state (0, ('6s', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4975. Total: -0.4975
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6475. Total: -0.6475
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1025. Total: -0.1025
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ts', '6s'], Board Cards=['Kd', 'Qs', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.665158371040724, 'bluff_count': 39, 'total_actions': 221, 'raise_count': 147}
Strategy for state (3, ('6s', 'Ts'), ('Kd', 'Qs', '3h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4.5120000000000005
sent answer: RaiseAction(amount=4.5120000000000005)
Round State: Street=3, My Cards=['Ts', '6s'], Board Cards=['Kd', 'Qs', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 39, 'total_actions': 222, 'raise_count': 148}
Strategy for state (3, ('6s', 'Ts'), ('Kd', 'Qs', '3h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -0.8989999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8919459459459459. Total: -0.8919459459459459
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.101
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['8d', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6636771300448431, 'bluff_count': 39, 'total_actions': 223, 'raise_count': 148}
Strategy for state (0, ('2d', '8d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -0.518
Regret updated for <class 'skeleton.actions.CallAction'>: -0.518. Total: -0.518
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.082
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8d', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6651785714285714, 'bluff_count': 39, 'total_actions': 224, 'raise_count': 149}
Strategy for state (0, ('2d', '8d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.8480000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7633333333333334. Total: -1.2813333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.15200000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5c', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6622222222222223, 'bluff_count': 39, 'total_actions': 225, 'raise_count': 149}
Strategy for state (0, ('5c', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -0.5385
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6885. Total: -0.6885
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.0615
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['3s', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6592920353982301, 'bluff_count': 39, 'total_actions': 226, 'raise_count': 149}
Strategy for state (0, ('3s', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3s', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6607929515418502, 'bluff_count': 39, 'total_actions': 227, 'raise_count': 150}
Strategy for state (0, ('3s', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.859
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7598333333333334. Total: -1.2923333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.14100000000000001
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['3s', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6622807017543859, 'bluff_count': 40, 'total_actions': 228, 'raise_count': 151}
Strategy for state (0, ('3s', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -1.1905000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8315. Total: -2.1238333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.20950000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3s', 'Ks'], Board Cards=['6s', '8c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6637554585152838, 'bluff_count': 41, 'total_actions': 229, 'raise_count': 152}
Strategy for state (3, ('3s', 'Ks'), ('6s', '8c', '7h')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.566. Total: -0.566
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9183809523809523. Total: -0.9183809523809523
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.034. Total: -0.034
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 40
sent answer: RaiseAction(amount=40)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ac', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6652173913043479, 'bluff_count': 41, 'total_actions': 230, 'raise_count': 153}
Strategy for state (0, ('2c', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7225. Total: -0.7225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['Ac', '2c'], Board Cards=['6d', 'Kh', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 41, 'total_actions': 231, 'raise_count': 154}
Strategy for state (3, ('2c', 'Ac'), ('6d', 'Kh', '3d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.586. Total: -0.586
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.014. Total: -0.014
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.014. Total: -0.014
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.24
sent answer: RaiseAction(amount=2.24)
Round State: Street=3, My Cards=['Ac', '2c'], Board Cards=['6d', 'Kh', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6681034482758621, 'bluff_count': 41, 'total_actions': 232, 'raise_count': 155}
Strategy for state (3, ('2c', 'Ac'), ('6d', 'Kh', '3d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.589. Total: -0.9749999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9497843137254902. Total: -0.9497843137254902
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.011. Total: -0.025
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 52
sent answer: RaiseAction(amount=52)
Round State: Street=4, My Cards=['Ac', '2c'], Board Cards=['6d', 'Kh', '3d', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6695278969957081, 'bluff_count': 41, 'total_actions': 233, 'raise_count': 156}
Strategy for state (4, ('2c', 'Ac'), ('6d', 'Kh', '3d', '6c')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4965. Total: -0.4965
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1035. Total: -0.1035
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1035. Total: -0.1035
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 102.672
sent answer: RaiseAction(amount=102.672)
Round State: Street=4, My Cards=['Ac', '2c'], Board Cards=['6d', 'Kh', '3d', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6709401709401709, 'bluff_count': 41, 'total_actions': 234, 'raise_count': 157}
Strategy for state (4, ('2c', 'Ac'), ('6d', 'Kh', '3d', '6c')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9054664310954064. Total: -0.9054664310954064
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.091. Total: -0.1945
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['Ac', '2c'], Board Cards=['6d', 'Kh', '3d', '6c', 'Jh']
Opponent tendencies updated: {'aggression_frequency': 0.6723404255319149, 'bluff_count': 41, 'total_actions': 235, 'raise_count': 158}
Strategy for state (5, ('2c', 'Ac'), ('6d', 'Kh', '3d', '6c', 'Jh')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.454. Total: -0.454
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.454. Total: -0.454
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jc', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6694915254237288, 'bluff_count': 41, 'total_actions': 236, 'raise_count': 158}
Strategy for state (0, ('9h', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -0.5095
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5095. Total: -0.5095
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.0905
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jc', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6708860759493671, 'bluff_count': 41, 'total_actions': 237, 'raise_count': 159}
Strategy for state (0, ('9h', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.8219999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8013888888888888. Total: -1.3108888888888888
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.178
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 20
sent answer: RaiseAction(amount=20)
Round State: Street=0, My Cards=['Jc', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6722689075630253, 'bluff_count': 41, 'total_actions': 238, 'raise_count': 160}
Strategy for state (0, ('9h', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -1.137
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8925280898876404. Total: -2.203416978776529
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.263
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jc', '9h'], Board Cards=['Js', '2c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6736401673640168, 'bluff_count': 41, 'total_actions': 239, 'raise_count': 161}
Strategy for state (3, ('9h', 'Jc'), ('Js', '2c', '8d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.943. Total: -0.943
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 228
sent answer: RaiseAction(amount=228)
Round State: Street=4, My Cards=['Jc', '9h'], Board Cards=['Js', '2c', '8d', '5s']
Opponent tendencies updated: {'aggression_frequency': 0.675, 'bluff_count': 42, 'total_actions': 240, 'raise_count': 162}
Strategy for state (4, ('9h', 'Jc'), ('Js', '2c', '8d', '5s')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.24913055954088947. Total: -0.24913055954088947
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.748. Total: -0.748
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['Jc', '9h'], Board Cards=['Js', '2c', '8d', '5s', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.6763485477178424, 'bluff_count': 42, 'total_actions': 241, 'raise_count': 163}
Strategy for state (5, ('9h', 'Jc'), ('Js', '2c', '8d', '5s', '3c')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.789. Total: -0.789
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.789. Total: -0.789
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jh', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6735537190082644, 'bluff_count': 42, 'total_actions': 242, 'raise_count': 163}
Strategy for state (0, ('5h', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5135. Total: -0.5135
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6635. Total: -0.6635
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0865. Total: -0.0865
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Jh', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6748971193415638, 'bluff_count': 42, 'total_actions': 243, 'raise_count': 164}
Strategy for state (0, ('5h', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.8294999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.791. Total: -1.4545
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.17049999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=0, My Cards=['Jh', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6762295081967213, 'bluff_count': 42, 'total_actions': 244, 'raise_count': 165}
Strategy for state (0, ('5h', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.505. Total: -1.1345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8216666666666667. Total: -2.2761666666666667
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.095. Total: -0.26549999999999996
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Kh', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.673469387755102, 'bluff_count': 42, 'total_actions': 245, 'raise_count': 165}
Strategy for state (0, ('Jh', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CallAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kh', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6747967479674797, 'bluff_count': 43, 'total_actions': 246, 'raise_count': 166}
Strategy for state (0, ('Jh', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -0.8294999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7918529411764705. Total: -1.3118529411764706
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.17049999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['8h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6720647773279352, 'bluff_count': 43, 'total_actions': 247, 'raise_count': 166}
Strategy for state (0, ('4s', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.517
Regret updated for <class 'skeleton.actions.CallAction'>: -0.667. Total: -0.667
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.083
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ks', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6693548387096774, 'bluff_count': 43, 'total_actions': 248, 'raise_count': 166}
Strategy for state (0, ('Ah', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5365. Total: -0.5365
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ks', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6706827309236948, 'bluff_count': 44, 'total_actions': 249, 'raise_count': 167}
Strategy for state (0, ('Ah', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.871
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7678333333333334. Total: -1.3043333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.129
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.668, 'bluff_count': 44, 'total_actions': 250, 'raise_count': 167}
Strategy for state (0, ('Ad', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.529
Regret updated for <class 'skeleton.actions.CallAction'>: -0.679. Total: -0.679
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.071
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Jc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6693227091633466, 'bluff_count': 44, 'total_actions': 251, 'raise_count': 168}
Strategy for state (0, ('Ad', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.873
Regret updated for <class 'skeleton.actions.CallAction'>: -0.819. Total: -1.498
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.127
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jc', 'Ad'], Board Cards=['8h', '9h', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.6706349206349206, 'bluff_count': 44, 'total_actions': 252, 'raise_count': 169}
Strategy for state (3, ('Ad', 'Jc'), ('8h', '9h', '3s')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -0.574
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.026. Total: -0.026
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.026
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 3.3280000000000003
sent answer: RaiseAction(amount=3.3280000000000003)
Round State: Street=3, My Cards=['Jc', 'Ad'], Board Cards=['8h', '9h', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.6719367588932806, 'bluff_count': 45, 'total_actions': 253, 'raise_count': 170}
Strategy for state (3, ('Ad', 'Jc'), ('8h', '9h', '3s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5559999999999999. Total: -0.9299999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9202857142857143. Total: -0.9202857142857143
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.044. Total: -0.06999999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Jc', 'Ad'], Board Cards=['8h', '9h', '3s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6732283464566929, 'bluff_count': 45, 'total_actions': 254, 'raise_count': 171}
Strategy for state (4, ('Ad', 'Jc'), ('8h', '9h', '3s', '5d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.513. Total: -0.513
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.087. Total: -0.087
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.087. Total: -0.087
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 59.855999999999995
sent answer: RaiseAction(amount=59.855999999999995)
Round State: Street=4, My Cards=['Jc', 'Ad'], Board Cards=['8h', '9h', '3s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6745098039215687, 'bluff_count': 46, 'total_actions': 255, 'raise_count': 172}
Strategy for state (4, ('Ad', 'Jc'), ('8h', '9h', '3s', '5d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.502. Total: -0.815
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8974648526077098. Total: -0.8974648526077098
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.098. Total: -0.185
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 357
sent answer: RaiseAction(amount=357)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['2c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.671875, 'bluff_count': 46, 'total_actions': 256, 'raise_count': 172}
Strategy for state (0, ('2c', '3c'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.669260700389105, 'bluff_count': 47, 'total_actions': 257, 'raise_count': 172}
Strategy for state (0, ('4d', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.CallAction'>: -0.688. Total: -0.688
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['3h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 47, 'total_actions': 258, 'raise_count': 172}
Strategy for state (0, ('3h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.667953667953668, 'bluff_count': 48, 'total_actions': 259, 'raise_count': 173}
Strategy for state (0, ('3h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -0.8784999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7833333333333333. Total: -1.3118333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.1215
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7s', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6653846153846154, 'bluff_count': 48, 'total_actions': 260, 'raise_count': 173}
Strategy for state (0, ('7d', '7s'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3605. Total: -0.3605
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5105. Total: -0.5105
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2395. Total: -0.2395
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 11.496
sent answer: RaiseAction(amount=11.496)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['6d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6628352490421456, 'bluff_count': 48, 'total_actions': 261, 'raise_count': 173}
Strategy for state (0, ('6d', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6641221374045801, 'bluff_count': 48, 'total_actions': 262, 'raise_count': 174}
Strategy for state (0, ('6d', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.8614999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7663333333333333. Total: -1.2948333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.1385
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
