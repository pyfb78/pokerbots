CFR data loaded successfully.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['6h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 1, 'raise_count': 0}
Strategy for state (0, ('3c', '6h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5355. Total: -0.5355
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['8h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 2, 'raise_count': 0}
Strategy for state (0, ('4s', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -0.5335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.0665
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5335. Total: -0.5335
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['2c', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 3, 'raise_count': 0}
Strategy for state (0, ('2c', '9c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.677. Total: -0.677
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['9d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 2, 'total_actions': 4, 'raise_count': 0}
Strategy for state (0, ('9d', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -0.5335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.0665
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5335. Total: -0.5335
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['8s', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 2, 'total_actions': 5, 'raise_count': 0}
Strategy for state (0, ('8s', '9c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.503. Total: -0.503
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.097. Total: -0.097
Regret updated for <class 'skeleton.actions.CallAction'>: -0.653. Total: -0.653
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['8s', '9c'], Board Cards=['9h', '5d', 'Ad']
Opponent tendencies updated: {'aggression_frequency': 0.16666666666666666, 'bluff_count': 2, 'total_actions': 6, 'raise_count': 1}
Strategy for state (3, ('8s', '9c'), ('9h', '5d', 'Ad')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.046. Total: -0.046
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5539999999999999. Total: -0.5539999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.046. Total: -0.046
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['8s', '9c'], Board Cards=['9h', '5d', 'Ad', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 2, 'total_actions': 7, 'raise_count': 2}
Strategy for state (4, ('8s', '9c'), ('9h', '5d', 'Ad', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.747. Total: -0.747
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.14700000000000002. Total: 0.14700000000000002
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.747. Total: -0.747
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 23.904
sent answer: RaiseAction(amount=23.904)
Round State: Street=4, My Cards=['8s', '9c'], Board Cards=['9h', '5d', 'Ad', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.375, 'bluff_count': 3, 'total_actions': 8, 'raise_count': 3}
Strategy for state (4, ('8s', '9c'), ('9h', '5d', 'Ad', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15100000000000002. Total: 0.29800000000000004
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.751. Total: -1.498
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2260114942528736. Total: -0.2260114942528736
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 127.5
sent answer: RaiseAction(amount=127.5)
Round State: Street=4, My Cards=['8s', '9c'], Board Cards=['9h', '5d', 'Ad', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.4444444444444444, 'bluff_count': 3, 'total_actions': 9, 'raise_count': 4}
Strategy for state (4, ('8s', '9c'), ('9h', '5d', 'Ad', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.137. Total: 0.43500000000000005
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.737. Total: -2.235
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2573342776203966. Total: -0.4833457718732702
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 392
sent answer: RaiseAction(amount=392)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['2s', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.4, 'bluff_count': 3, 'total_actions': 10, 'raise_count': 4}
Strategy for state (0, ('2s', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -0.5335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.0665
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5335. Total: -0.5335
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2s', '6s'], Board Cards=['5s', '9h', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.36363636363636365, 'bluff_count': 3, 'total_actions': 11, 'raise_count': 4}
Strategy for state (3, ('2s', '6s'), ('5s', '9h', 'Ks')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.367. Total: -0.367
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.233. Total: -0.233
Regret updated for <class 'skeleton.actions.CallAction'>: -0.517. Total: -0.517
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['2s', '6s'], Board Cards=['5s', '9h', 'Ks', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.4166666666666667, 'bluff_count': 3, 'total_actions': 12, 'raise_count': 5}
Strategy for state (4, ('2s', '6s'), ('5s', '9h', 'Ks', '9s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.020000000000000018. Total: -0.020000000000000018
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.58. Total: -0.58
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2533333333333334. Total: -0.2533333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['8c', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.38461538461538464, 'bluff_count': 3, 'total_actions': 13, 'raise_count': 5}
Strategy for state (0, ('4d', '8c'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['8c', '4d'], Board Cards=['Qc', '8s', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.35714285714285715, 'bluff_count': 3, 'total_actions': 14, 'raise_count': 5}
Strategy for state (3, ('4d', '8c'), ('Qc', '8s', '7d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['4h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 3, 'total_actions': 15, 'raise_count': 5}
Strategy for state (0, ('4h', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5389999999999999. Total: -0.5389999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Qs', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3125, 'bluff_count': 3, 'total_actions': 16, 'raise_count': 5}
Strategy for state (0, ('Jh', 'Qs'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Qs', 'Jh'], Board Cards=['9d', 'Jd', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.29411764705882354, 'bluff_count': 3, 'total_actions': 17, 'raise_count': 5}
Strategy for state (3, ('Jh', 'Qs'), ('9d', 'Jd', 'Qc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1805. Total: -0.1805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4195. Total: -0.4195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1805. Total: -0.1805
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.888
sent answer: RaiseAction(amount=2.888)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Jh', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2777777777777778, 'bluff_count': 3, 'total_actions': 18, 'raise_count': 5}
Strategy for state (0, ('8s', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.CallAction'>: -0.522. Total: -0.522
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Ad', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 3, 'total_actions': 19, 'raise_count': 5}
Strategy for state (0, ('6d', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Kh', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 3, 'total_actions': 20, 'raise_count': 5}
Strategy for state (0, ('Kh', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -0.5095
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.0905
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6595. Total: -0.6595
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kh', 'Tc'], Board Cards=['9h', 'Jd', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.23809523809523808, 'bluff_count': 3, 'total_actions': 21, 'raise_count': 5}
Strategy for state (3, ('Kh', 'Tc'), ('9h', 'Jd', 'Th')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.191. Total: -0.191
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.409. Total: -0.409
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.191. Total: -0.191
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Kh', 'Tc'], Board Cards=['9h', 'Jd', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 3, 'total_actions': 22, 'raise_count': 6}
Strategy for state (3, ('Kh', 'Tc'), ('9h', 'Jd', 'Th')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4185. Total: -0.8274999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1815. Total: -0.3725
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6646538461538462. Total: -0.6646538461538462
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Kh', 'Tc'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.30434782608695654, 'bluff_count': 3, 'total_actions': 23, 'raise_count': 7}
Strategy for state (4, ('Kh', 'Tc'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.6655. Total: -0.6655
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.0655. Total: 0.0655
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6655. Total: -0.6655
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Kh', 'Tc'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 4, 'total_actions': 24, 'raise_count': 8}
Strategy for state (4, ('Kh', 'Tc'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.051000000000000045. Total: 0.11650000000000005
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.651. Total: -1.3165
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2949459459459459. Total: -0.2949459459459459
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 45.57
sent answer: RaiseAction(amount=45.57)
Round State: Street=4, My Cards=['Kh', 'Tc'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.36, 'bluff_count': 4, 'total_actions': 25, 'raise_count': 9}
Strategy for state (4, ('Kh', 'Tc'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.05249999999999999. Total: 0.16900000000000004
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6525. Total: -1.9689999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.336450276243094. Total: -0.6313962221890399
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 233.595
sent answer: RaiseAction(amount=233.595)
Round State: Street=4, My Cards=['Kh', 'Tc'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.38461538461538464, 'bluff_count': 5, 'total_actions': 26, 'raise_count': 10}
Strategy for state (4, ('Kh', 'Tc'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6595. Total: -2.6285
Regret updated for <class 'skeleton.actions.CallAction'>: -0.33738473520249224. Total: -0.9687809573915321
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
No valid strategy available. Defaulting to FoldAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['6c', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.37037037037037035, 'bluff_count': 6, 'total_actions': 27, 'raise_count': 10}
Strategy for state (0, ('5d', '6c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.511
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.089
Regret updated for <class 'skeleton.actions.CallAction'>: -0.511. Total: -0.511
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['9c', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.35714285714285715, 'bluff_count': 7, 'total_actions': 28, 'raise_count': 10}
Strategy for state (0, ('9c', 'Kc'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['5s', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3448275862068966, 'bluff_count': 7, 'total_actions': 29, 'raise_count': 10}
Strategy for state (0, ('5s', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -0.5409999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['5c', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 7, 'total_actions': 30, 'raise_count': 10}
Strategy for state (0, ('5c', '8h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.092. Total: -0.092
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.508
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.092
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['3d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3225806451612903, 'bluff_count': 7, 'total_actions': 31, 'raise_count': 10}
Strategy for state (0, ('3d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5265. Total: -0.5265
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['7s', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3125, 'bluff_count': 7, 'total_actions': 32, 'raise_count': 10}
Strategy for state (0, ('7s', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -0.527
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['4c', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.30303030303030304, 'bluff_count': 8, 'total_actions': 33, 'raise_count': 10}
Strategy for state (0, ('4c', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.CallAction'>: -0.532. Total: -0.532
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['4c', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29411764705882354, 'bluff_count': 8, 'total_actions': 34, 'raise_count': 10}
Strategy for state (0, ('4c', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -1.073
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.127
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6910000000000001. Total: -1.223
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['4s', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 8, 'total_actions': 35, 'raise_count': 10}
Strategy for state (0, ('2h', '4s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.CallAction'>: -0.674. Total: -0.674
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['4s', '2h'], Board Cards=['2d', '5h', '4h']
Opponent tendencies updated: {'aggression_frequency': 0.3055555555555556, 'bluff_count': 8, 'total_actions': 36, 'raise_count': 11}
Strategy for state (3, ('2h', '4s'), ('2d', '5h', '4h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.244. Total: -0.244
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.356. Total: -0.356
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.244. Total: -0.244
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Jh', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2972972972972973, 'bluff_count': 8, 'total_actions': 37, 'raise_count': 11}
Strategy for state (0, ('4d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -0.5459999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.054
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5459999999999999. Total: -0.5459999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3157894736842105, 'bluff_count': 9, 'total_actions': 38, 'raise_count': 12}
Strategy for state (0, ('4d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -1.0869999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.11299999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7743333333333333. Total: -1.3203333333333331
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jh', '4d'], Board Cards=['2h', 'Ks', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 9, 'total_actions': 39, 'raise_count': 13}
Strategy for state (3, ('4d', 'Jh'), ('2h', 'Ks', '9d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.584. Total: -0.584
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.016. Total: -0.016
Regret updated for <class 'skeleton.actions.CallAction'>: -0.859. Total: -0.859
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Kc', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.325, 'bluff_count': 9, 'total_actions': 40, 'raise_count': 13}
Strategy for state (0, ('9d', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -0.534
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Qs', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3170731707317073, 'bluff_count': 9, 'total_actions': 41, 'raise_count': 13}
Strategy for state (0, ('8s', 'Qs'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.092. Total: -0.092
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.508
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.092
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Qs', '8s'], Board Cards=['3d', 'Jd', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.30952380952380953, 'bluff_count': 9, 'total_actions': 42, 'raise_count': 13}
Strategy for state (3, ('8s', 'Qs'), ('3d', 'Jd', '3h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.028. Total: -0.028
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.572. Total: -0.572
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.028. Total: -0.028
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['3d', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3023255813953488, 'bluff_count': 10, 'total_actions': 43, 'raise_count': 13}
Strategy for state (0, ('3d', '3h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3535. Total: -0.3535
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2465. Total: -0.2465
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3535. Total: -0.3535
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ad', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29545454545454547, 'bluff_count': 11, 'total_actions': 44, 'raise_count': 13}
Strategy for state (0, ('Ad', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -0.538
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['2h', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28888888888888886, 'bluff_count': 11, 'total_actions': 45, 'raise_count': 13}
Strategy for state (0, ('2h', '5c'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['2h', '5c'], Board Cards=['9d', 'Qs', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.2826086956521739, 'bluff_count': 11, 'total_actions': 46, 'raise_count': 13}
Strategy for state (3, ('2h', '5c'), ('9d', 'Qs', '2c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0195. Total: -0.0195
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5805. Total: -0.5805
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0195. Total: -0.0195
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['2h', '5c'], Board Cards=['9d', 'Qs', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.2765957446808511, 'bluff_count': 11, 'total_actions': 47, 'raise_count': 13}
Strategy for state (3, ('2h', '5c'), ('9d', 'Qs', '2c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.585. Total: -1.1655
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.015. Total: -0.0345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.735. Total: -0.735
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['2h', '5c'], Board Cards=['9d', 'Qs', '2c', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2708333333333333, 'bluff_count': 11, 'total_actions': 48, 'raise_count': 13}
Strategy for state (4, ('2h', '5c'), ('9d', 'Qs', '2c', '4s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2455. Total: -0.2455
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3545. Total: -0.3545
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2455. Total: -0.2455
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['2h', '5c'], Board Cards=['9d', 'Qs', '2c', '4s', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.2653061224489796, 'bluff_count': 11, 'total_actions': 49, 'raise_count': 13}
Strategy for state (5, ('2h', '5c'), ('9d', 'Qs', '2c', '4s', '4d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.574. Total: -0.574
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.026000000000000023. Total: -0.026000000000000023
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.574. Total: -0.574
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['4d', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26, 'bluff_count': 11, 'total_actions': 50, 'raise_count': 13}
Strategy for state (0, ('4d', '7h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Kc', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2549019607843137, 'bluff_count': 11, 'total_actions': 51, 'raise_count': 13}
Strategy for state (0, ('Kc', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.CallAction'>: -0.662. Total: -0.662
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Kc', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2692307692307692, 'bluff_count': 11, 'total_actions': 52, 'raise_count': 14}
Strategy for state (0, ('Kc', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.486. Total: -0.998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.114. Total: -0.202
Regret updated for <class 'skeleton.actions.CallAction'>: -0.761. Total: -1.423
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Tc', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2641509433962264, 'bluff_count': 12, 'total_actions': 53, 'raise_count': 14}
Strategy for state (0, ('5c', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5035. Total: -0.5035
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0965. Total: -0.0965
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5035. Total: -0.5035
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Tc', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2777777777777778, 'bluff_count': 12, 'total_actions': 54, 'raise_count': 15}
Strategy for state (0, ('5c', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -1.023
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.177
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7528333333333334. Total: -1.2563333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Tc', '5c'], Board Cards=['Kd', '4s', '8s']
Opponent tendencies updated: {'aggression_frequency': 0.2909090909090909, 'bluff_count': 12, 'total_actions': 55, 'raise_count': 16}
Strategy for state (3, ('5c', 'Tc'), ('Kd', '4s', '8s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.025. Total: -0.025
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.575. Total: -0.575
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.025. Total: -0.025
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['3s', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 12, 'total_actions': 56, 'raise_count': 16}
Strategy for state (0, ('3s', 'Qh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3s', 'Qh'], Board Cards=['2d', '7h', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.2807017543859649, 'bluff_count': 12, 'total_actions': 57, 'raise_count': 16}
Strategy for state (3, ('3s', 'Qh'), ('2d', '7h', 'Ts')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0. Total: 0.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.6. Total: -0.6
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0. Total: 0.0
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['9c', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27586206896551724, 'bluff_count': 12, 'total_actions': 58, 'raise_count': 16}
Strategy for state (0, ('3s', '9c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.CallAction'>: -0.524. Total: -0.524
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9c', '3s'], Board Cards=['Qc', '7d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.288135593220339, 'bluff_count': 12, 'total_actions': 59, 'raise_count': 17}
Strategy for state (3, ('3s', '9c'), ('Qc', '7d', '7s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5885. Total: -0.5885
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0115. Total: -0.0115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8218333333333334. Total: -0.8218333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['4h', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2833333333333333, 'bluff_count': 12, 'total_actions': 60, 'raise_count': 17}
Strategy for state (0, ('4h', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6935. Total: -0.6935
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['3d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2786885245901639, 'bluff_count': 12, 'total_actions': 61, 'raise_count': 17}
Strategy for state (0, ('3d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -1.031
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.16899999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5045. Total: -1.031
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ks', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27419354838709675, 'bluff_count': 12, 'total_actions': 62, 'raise_count': 17}
Strategy for state (0, ('As', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6715. Total: -0.6715
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ks', 'As'], Board Cards=['Jh', '7s', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.2698412698412698, 'bluff_count': 12, 'total_actions': 63, 'raise_count': 17}
Strategy for state (3, ('As', 'Ks'), ('Jh', '7s', 'Th')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.149. Total: -0.149
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.45099999999999996. Total: -0.45099999999999996
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.149. Total: -0.149
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.8608
sent answer: RaiseAction(amount=2.8608)
Round State: Street=4, My Cards=['Ks', 'As'], Board Cards=['Jh', '7s', 'Th', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.28125, 'bluff_count': 12, 'total_actions': 64, 'raise_count': 18}
Strategy for state (4, ('As', 'Ks'), ('Jh', '7s', 'Th', '6h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.157. Total: -0.157
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44299999999999995. Total: -0.44299999999999995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.157. Total: -0.157
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4.521599999999999
sent answer: RaiseAction(amount=4.521599999999999)
Round State: Street=4, My Cards=['Ks', 'As'], Board Cards=['Jh', '7s', 'Th', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.2923076923076923, 'bluff_count': 12, 'total_actions': 65, 'raise_count': 19}
Strategy for state (4, ('As', 'Ks'), ('Jh', '7s', 'Th', '6h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.425. Total: -0.8679999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.175. Total: -0.33199999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.750925925925926. Total: -0.750925925925926
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['Ks', 'As'], Board Cards=['Jh', '7s', 'Th', '6h', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.30303030303030304, 'bluff_count': 12, 'total_actions': 66, 'raise_count': 20}
Strategy for state (5, ('As', 'Ks'), ('Jh', '7s', 'Th', '6h', '8d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2605. Total: -0.2605
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33949999999999997. Total: -0.33949999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2605. Total: -0.2605
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 18.756
sent answer: RaiseAction(amount=18.756)
Round State: Street=5, My Cards=['Ks', 'As'], Board Cards=['Jh', '7s', 'Th', '6h', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.31343283582089554, 'bluff_count': 13, 'total_actions': 67, 'raise_count': 21}
Strategy for state (5, ('As', 'Ks'), ('Jh', '7s', 'Th', '6h', '8d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.32299999999999995. Total: -0.6624999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.277. Total: -0.5375000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6997441860465116. Total: -0.6997441860465116
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['As', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3088235294117647, 'bluff_count': 13, 'total_actions': 68, 'raise_count': 21}
Strategy for state (0, ('As', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -0.5155
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.0845
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5155. Total: -0.5155
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Qs', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.30434782608695654, 'bluff_count': 13, 'total_actions': 69, 'raise_count': 21}
Strategy for state (0, ('6c', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5375. Total: -0.5375
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0625. Total: -0.0625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5375. Total: -0.5375
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['As', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3, 'bluff_count': 13, 'total_actions': 70, 'raise_count': 21}
Strategy for state (0, ('As', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5025. Total: -0.5025
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['7d', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29577464788732394, 'bluff_count': 13, 'total_actions': 71, 'raise_count': 21}
Strategy for state (0, ('7d', '7s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.37. Total: -0.37
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.23. Total: -0.23
Regret updated for <class 'skeleton.actions.CallAction'>: -0.37. Total: -0.37
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['7d', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2916666666666667, 'bluff_count': 14, 'total_actions': 72, 'raise_count': 21}
Strategy for state (0, ('7d', '7s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.357. Total: -0.727
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.243. Total: -0.473
Regret updated for <class 'skeleton.actions.CallAction'>: -0.507. Total: -0.877
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Kc', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2876712328767123, 'bluff_count': 14, 'total_actions': 73, 'raise_count': 21}
Strategy for state (0, ('9c', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -1.0310000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.16899999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.519. Total: -0.519
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kd', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28378378378378377, 'bluff_count': 14, 'total_actions': 74, 'raise_count': 21}
Strategy for state (0, ('Jc', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5205. Total: -0.5205
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Th', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28, 'bluff_count': 14, 'total_actions': 75, 'raise_count': 21}
Strategy for state (0, ('6d', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5145. Total: -0.5145
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0855. Total: -0.0855
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6645. Total: -0.6645
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ts', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27631578947368424, 'bluff_count': 14, 'total_actions': 76, 'raise_count': 21}
Strategy for state (0, ('3h', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -0.534
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Th', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 14, 'total_actions': 77, 'raise_count': 21}
Strategy for state (0, ('Qd', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.511
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.089
Regret updated for <class 'skeleton.actions.CallAction'>: -0.661. Total: -0.661
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Th', 'Qd'], Board Cards=['4h', '7h', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.28205128205128205, 'bluff_count': 14, 'total_actions': 78, 'raise_count': 22}
Strategy for state (3, ('Qd', 'Th'), ('4h', '7h', 'Js')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['As', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27848101265822783, 'bluff_count': 14, 'total_actions': 79, 'raise_count': 22}
Strategy for state (0, ('As', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -0.527
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['As', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.275, 'bluff_count': 14, 'total_actions': 80, 'raise_count': 22}
Strategy for state (0, ('5s', 'As'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0925. Total: -0.0925
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5075. Total: -0.5075
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0925. Total: -0.0925
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Jh', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2716049382716049, 'bluff_count': 14, 'total_actions': 81, 'raise_count': 22}
Strategy for state (0, ('Jh', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.491. Total: -0.491
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.109. Total: -0.109
Regret updated for <class 'skeleton.actions.CallAction'>: -0.491. Total: -0.491
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Tc', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2682926829268293, 'bluff_count': 14, 'total_actions': 82, 'raise_count': 22}
Strategy for state (0, ('8h', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.491. Total: -0.491
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.109. Total: -0.109
Regret updated for <class 'skeleton.actions.CallAction'>: -0.641. Total: -0.641
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Td', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26506024096385544, 'bluff_count': 14, 'total_actions': 83, 'raise_count': 22}
Strategy for state (0, ('Qs', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.511
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.089
Regret updated for <class 'skeleton.actions.CallAction'>: -0.511. Total: -0.511
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Td', 'Qs'], Board Cards=['4c', '4s', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.2619047619047619, 'bluff_count': 14, 'total_actions': 84, 'raise_count': 22}
Strategy for state (3, ('Qs', 'Td'), ('4c', '4s', 'Ks')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.019. Total: -0.019
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.581. Total: -0.581
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.019. Total: -0.019
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Td', 'Qs'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.27058823529411763, 'bluff_count': 14, 'total_actions': 85, 'raise_count': 23}
Strategy for state (4, ('Qs', 'Td'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.14350000000000007. Total: 0.14350000000000007
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7435. Total: -0.7435
Regret updated for <class 'skeleton.actions.CallAction'>: -0.08983333333333332. Total: -0.08983333333333332
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 15.0
sent answer: RaiseAction(amount=15.0)
Round State: Street=4, My Cards=['Td', 'Qs'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.27906976744186046, 'bluff_count': 14, 'total_actions': 86, 'raise_count': 24}
Strategy for state (4, ('Qs', 'Td'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.13250000000000006. Total: 0.27600000000000013
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7325. Total: -1.476
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2297641509433962. Total: -0.3195974842767295
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 76.5
sent answer: RaiseAction(amount=76.5)
Round State: Street=4, My Cards=['Td', 'Qs'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.28735632183908044, 'bluff_count': 14, 'total_actions': 87, 'raise_count': 25}
Strategy for state (4, ('Qs', 'Td'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15449999999999997. Total: 0.4305000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7545. Total: -2.2305
Regret updated for <class 'skeleton.actions.CallAction'>: -0.23597619047619056. Total: -0.5555736747529201
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 312.0
sent answer: RaiseAction(amount=312.0)
Round State: Street=5, My Cards=['Td', 'Qs'], Board Cards=['4c', '4s', 'Ks', 'Qc', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.29545454545454547, 'bluff_count': 14, 'total_actions': 88, 'raise_count': 26}
Strategy for state (5, ('Qs', 'Td'), ('4c', '4s', 'Ks', 'Qc', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.5, <class 'skeleton.actions.CallAction'>: 0.5}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.781. Total: -0.781
Regret updated for <class 'skeleton.actions.CallAction'>: -0.21621448467966575. Total: -0.21621448467966575
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.5, <class 'skeleton.actions.CallAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Qc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29213483146067415, 'bluff_count': 15, 'total_actions': 89, 'raise_count': 26}
Strategy for state (0, ('Ad', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Qh', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28888888888888886, 'bluff_count': 15, 'total_actions': 90, 'raise_count': 26}
Strategy for state (0, ('3h', 'Qh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0955. Total: -0.0955
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.0955
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9d', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 15, 'total_actions': 91, 'raise_count': 26}
Strategy for state (0, ('9d', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -1.083
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.11699999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5489999999999999. Total: -1.083
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6d', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2826086956521739, 'bluff_count': 15, 'total_actions': 92, 'raise_count': 26}
Strategy for state (0, ('5s', '6d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.507. Total: -0.507
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.093. Total: -0.093
Regret updated for <class 'skeleton.actions.CallAction'>: -0.657. Total: -0.657
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4c', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27956989247311825, 'bluff_count': 16, 'total_actions': 93, 'raise_count': 26}
Strategy for state (0, ('4c', '6c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.479. Total: -0.479
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.121. Total: -0.121
Regret updated for <class 'skeleton.actions.CallAction'>: -0.479. Total: -0.479
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4c', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2872340425531915, 'bluff_count': 16, 'total_actions': 94, 'raise_count': 27}
Strategy for state (0, ('4c', '6c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.503. Total: -0.982
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.097. Total: -0.218
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7363333333333334. Total: -1.2153333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kc', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28421052631578947, 'bluff_count': 16, 'total_actions': 95, 'raise_count': 27}
Strategy for state (0, ('7c', 'Kc'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kc', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2916666666666667, 'bluff_count': 16, 'total_actions': 96, 'raise_count': 28}
Strategy for state (0, ('7c', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -1.0514999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.14850000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7533333333333334. Total: -0.7533333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['Kc', '7c'], Board Cards=['2s', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.29896907216494845, 'bluff_count': 16, 'total_actions': 97, 'raise_count': 29}
Strategy for state (3, ('7c', 'Kc'), ('2s', '3c', '8d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.029. Total: -0.029
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.571. Total: -0.571
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.029. Total: -0.029
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['Kc', '7c'], Board Cards=['2s', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.30612244897959184, 'bluff_count': 17, 'total_actions': 98, 'raise_count': 30}
Strategy for state (3, ('7c', 'Kc'), ('2s', '3c', '8d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.577. Total: -1.148
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.023. Total: -0.052000000000000005
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8936666666666666. Total: -0.8936666666666666
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=4, My Cards=['Kc', '7c'], Board Cards=['2s', '3c', '8d', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.31313131313131315, 'bluff_count': 17, 'total_actions': 99, 'raise_count': 31}
Strategy for state (4, ('7c', 'Kc'), ('2s', '3c', '8d', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Kc', '7c'], Board Cards=['2s', '3c', '8d', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.32, 'bluff_count': 17, 'total_actions': 100, 'raise_count': 32}
Strategy for state (4, ('7c', 'Kc'), ('2s', '3c', '8d', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -1.012
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.188
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8512195121951219. Total: -0.8512195121951219
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 22
sent answer: RaiseAction(amount=22)
Round State: Street=5, My Cards=['Kc', '7c'], Board Cards=['2s', '3c', '8d', 'Ah', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.32673267326732675, 'bluff_count': 17, 'total_actions': 101, 'raise_count': 33}
Strategy for state (5, ('7c', 'Kc'), ('2s', '3c', '8d', 'Ah', 'Td')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.3595. Total: -0.3595
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.2405. Total: -0.2405
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.3595. Total: -0.3595
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5h', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3235294117647059, 'bluff_count': 18, 'total_actions': 102, 'raise_count': 33}
Strategy for state (0, ('5h', '7h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4805. Total: -0.4805
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1195. Total: -0.1195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4805. Total: -0.4805
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['5h', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.32038834951456313, 'bluff_count': 18, 'total_actions': 103, 'raise_count': 33}
Strategy for state (0, ('5h', '7h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4885. Total: -0.969
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1115. Total: -0.23099999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6385. Total: -1.119
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['As', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3173076923076923, 'bluff_count': 18, 'total_actions': 104, 'raise_count': 33}
Strategy for state (0, ('3h', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5489999999999999. Total: -0.5489999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3142857142857143, 'bluff_count': 19, 'total_actions': 105, 'raise_count': 33}
Strategy for state (0, ('6d', 'Jh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['6d', 'Jh'], Board Cards=['8h', 'Kc', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.3113207547169811, 'bluff_count': 19, 'total_actions': 106, 'raise_count': 33}
Strategy for state (3, ('6d', 'Jh'), ('8h', 'Kc', '2s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0. Total: 0.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.6. Total: -0.6
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0. Total: 0.0
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['2h', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.308411214953271, 'bluff_count': 19, 'total_actions': 107, 'raise_count': 33}
Strategy for state (0, ('2h', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5469999999999999. Total: -0.5469999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2h', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3148148148148148, 'bluff_count': 19, 'total_actions': 108, 'raise_count': 34}
Strategy for state (0, ('2h', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -1.089
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.111
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7753333333333333. Total: -1.3223333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ts', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3119266055045872, 'bluff_count': 20, 'total_actions': 109, 'raise_count': 34}
Strategy for state (0, ('5d', 'Ts'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ts', '5d'], Board Cards=['7c', '8c', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.3090909090909091, 'bluff_count': 20, 'total_actions': 110, 'raise_count': 34}
Strategy for state (3, ('5d', 'Ts'), ('7c', '8c', '2h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.05. Total: -0.05
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -0.5499999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.05
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ts', '5d'], Board Cards=['7c', '8c', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.3063063063063063, 'bluff_count': 20, 'total_actions': 111, 'raise_count': 34}
Strategy for state (3, ('5d', 'Ts'), ('7c', '8c', '2h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -1.1099999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.09
Regret updated for <class 'skeleton.actions.CallAction'>: -0.71. Total: -0.71
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Ts', '5d'], Board Cards=['7c', '8c', '2h', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.30357142857142855, 'bluff_count': 20, 'total_actions': 112, 'raise_count': 34}
Strategy for state (4, ('5d', 'Ts'), ('7c', '8c', '2h', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6c', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3008849557522124, 'bluff_count': 20, 'total_actions': 113, 'raise_count': 34}
Strategy for state (0, ('6c', '8c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.475. Total: -0.475
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.125. Total: -0.125
Regret updated for <class 'skeleton.actions.CallAction'>: -0.475. Total: -0.475
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['6c', '8c'], Board Cards=['2h', '8d', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.30701754385964913, 'bluff_count': 20, 'total_actions': 114, 'raise_count': 35}
Strategy for state (3, ('6c', '8c'), ('2h', '8d', '3c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7723333333333333. Total: -0.7723333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4s', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.30434782608695654, 'bluff_count': 20, 'total_actions': 115, 'raise_count': 35}
Strategy for state (0, ('4s', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.CallAction'>: -0.692. Total: -0.692
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['4s', 'Ah'], Board Cards=['2c', 'Qc', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.3017241379310345, 'bluff_count': 20, 'total_actions': 116, 'raise_count': 35}
Strategy for state (3, ('4s', 'Ah'), ('2c', 'Qc', '5d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.125. Total: -0.125
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.475. Total: -0.475
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.125. Total: -0.125
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6c', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29914529914529914, 'bluff_count': 20, 'total_actions': 117, 'raise_count': 35}
Strategy for state (0, ('6c', '7c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.484. Total: -0.484
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.116. Total: -0.116
Regret updated for <class 'skeleton.actions.CallAction'>: -0.484. Total: -0.484
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9c', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2966101694915254, 'bluff_count': 20, 'total_actions': 118, 'raise_count': 35}
Strategy for state (0, ('5d', '9c'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0755. Total: -0.0755
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.5245
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.0755
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5c', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29411764705882354, 'bluff_count': 21, 'total_actions': 119, 'raise_count': 35}
Strategy for state (0, ('5c', '9c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.495. Total: -0.495
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.105. Total: -0.105
Regret updated for <class 'skeleton.actions.CallAction'>: -0.495. Total: -0.495
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['4s', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2916666666666667, 'bluff_count': 21, 'total_actions': 120, 'raise_count': 35}
Strategy for state (0, ('2h', '4s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -1.062
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.138
Regret updated for <class 'skeleton.actions.CallAction'>: -0.688. Total: -1.362
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['4s', '2h'], Board Cards=['2s', '2c', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.2975206611570248, 'bluff_count': 21, 'total_actions': 121, 'raise_count': 36}
Strategy for state (3, ('2h', '4s'), ('2s', '2c', 'Jd')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.253. Total: -0.253
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.347. Total: -0.347
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.253. Total: -0.253
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['3c', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29508196721311475, 'bluff_count': 21, 'total_actions': 122, 'raise_count': 36}
Strategy for state (0, ('3c', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6d', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2926829268292683, 'bluff_count': 21, 'total_actions': 123, 'raise_count': 36}
Strategy for state (0, ('6d', '8h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.092. Total: -0.092
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.508
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.092
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['6d', '8h'], Board Cards=['9h', 'Qs', '6s']
Opponent tendencies updated: {'aggression_frequency': 0.2903225806451613, 'bluff_count': 21, 'total_actions': 124, 'raise_count': 36}
Strategy for state (3, ('6d', '8h'), ('9h', 'Qs', '6s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['6d', '8h'], Board Cards=['9h', 'Qs', '6s', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.288, 'bluff_count': 21, 'total_actions': 125, 'raise_count': 36}
Strategy for state (4, ('6d', '8h'), ('9h', 'Qs', '6s', '3s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.677. Total: -0.677
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.07700000000000007. Total: 0.07700000000000007
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.677. Total: -0.677
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jh', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 21, 'total_actions': 126, 'raise_count': 36}
Strategy for state (0, ('Jh', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -0.5
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.1
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5. Total: -0.5
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8h', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28346456692913385, 'bluff_count': 21, 'total_actions': 127, 'raise_count': 36}
Strategy for state (0, ('8h', '9c'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.103. Total: -0.103
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.497. Total: -0.497
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.103. Total: -0.103
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5d', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28125, 'bluff_count': 21, 'total_actions': 128, 'raise_count': 36}
Strategy for state (0, ('5d', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5255. Total: -0.5255
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0745. Total: -0.0745
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5255. Total: -0.5255
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6h', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27906976744186046, 'bluff_count': 21, 'total_actions': 129, 'raise_count': 36}
Strategy for state (0, ('6h', 'Jc'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0725. Total: -0.0725
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -0.5275
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.0725
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['6h', 'Jc'], Board Cards=['Th', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.27692307692307694, 'bluff_count': 21, 'total_actions': 130, 'raise_count': 36}
Strategy for state (3, ('6h', 'Jc'), ('Th', '9h', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2475. Total: -0.2475
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3525. Total: -0.3525
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2475. Total: -0.2475
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.376
sent answer: RaiseAction(amount=2.376)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['3c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2748091603053435, 'bluff_count': 21, 'total_actions': 131, 'raise_count': 36}
Strategy for state (0, ('3c', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.5479999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.052
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5479999999999999. Total: -0.5479999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['3c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 21, 'total_actions': 132, 'raise_count': 36}
Strategy for state (0, ('3c', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -1.088
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.11199999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.69. Total: -1.238
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3c', 'Kd'], Board Cards=['2c', '2s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.2781954887218045, 'bluff_count': 21, 'total_actions': 133, 'raise_count': 37}
Strategy for state (3, ('3c', 'Kd'), ('2c', '2s', '5d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5715. Total: -0.5715
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0285. Total: -0.0285
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8048333333333334. Total: -0.8048333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27611940298507465, 'bluff_count': 21, 'total_actions': 134, 'raise_count': 37}
Strategy for state (0, ('5s', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.507. Total: -0.507
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.093. Total: -0.093
Regret updated for <class 'skeleton.actions.CallAction'>: -0.657. Total: -0.657
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['As', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2740740740740741, 'bluff_count': 21, 'total_actions': 135, 'raise_count': 37}
Strategy for state (0, ('Ah', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.38049999999999995. Total: -0.38049999999999995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2195. Total: -0.2195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.38049999999999995. Total: -0.38049999999999995
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9d', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27205882352941174, 'bluff_count': 22, 'total_actions': 136, 'raise_count': 37}
Strategy for state (0, ('3h', '9d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6h', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27007299270072993, 'bluff_count': 23, 'total_actions': 137, 'raise_count': 37}
Strategy for state (0, ('6h', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5135. Total: -0.5135
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0865. Total: -0.0865
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5135. Total: -0.5135
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6h', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2753623188405797, 'bluff_count': 24, 'total_actions': 138, 'raise_count': 38}
Strategy for state (0, ('6h', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -1.033
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.16699999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7528333333333334. Total: -1.2663333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['6h', '9s'], Board Cards=['2c', '7d', 'Jh']
Opponent tendencies updated: {'aggression_frequency': 0.2805755395683453, 'bluff_count': 25, 'total_actions': 139, 'raise_count': 39}
Strategy for state (3, ('6h', '9s'), ('2c', '7d', 'Jh')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.576. Total: -0.576
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.024. Total: -0.024
Regret updated for <class 'skeleton.actions.CallAction'>: -0.876. Total: -0.876
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['6h', '9s'], Board Cards=['2c', '7d', 'Jh', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 25, 'total_actions': 140, 'raise_count': 40}
Strategy for state (4, ('6h', '9s'), ('2c', '7d', 'Jh', '8c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2575. Total: -0.2575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34249999999999997. Total: -0.34249999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2575. Total: -0.2575
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9d', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28368794326241137, 'bluff_count': 25, 'total_actions': 141, 'raise_count': 40}
Strategy for state (0, ('9d', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.509. Total: -0.509
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.091. Total: -0.091
Regret updated for <class 'skeleton.actions.CallAction'>: -0.659. Total: -0.659
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', 'Jd'], Board Cards=['Qh', 'As', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.28169014084507044, 'bluff_count': 25, 'total_actions': 142, 'raise_count': 40}
Strategy for state (3, ('9d', 'Jd'), ('Qh', 'As', '4s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.036. Total: -0.036
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.564. Total: -0.564
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.036. Total: -0.036
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['9d', 'Jd'], Board Cards=['Qh', 'As', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2867132867132867, 'bluff_count': 25, 'total_actions': 143, 'raise_count': 41}
Strategy for state (3, ('9d', 'Jd'), ('Qh', 'As', '4s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -1.138
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.062
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8563529411764705. Total: -0.8563529411764705
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ah', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2847222222222222, 'bluff_count': 26, 'total_actions': 144, 'raise_count': 41}
Strategy for state (0, ('4s', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -1.069
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.131
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -1.2189999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9d', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2827586206896552, 'bluff_count': 26, 'total_actions': 145, 'raise_count': 41}
Strategy for state (0, ('9d', 'Ah'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Th', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2808219178082192, 'bluff_count': 26, 'total_actions': 146, 'raise_count': 41}
Strategy for state (0, ('Js', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4905. Total: -0.4905
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1095. Total: -0.1095
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4905. Total: -0.4905
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9d', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2789115646258503, 'bluff_count': 26, 'total_actions': 147, 'raise_count': 41}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5525. Total: -0.5525
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0475. Total: -0.0475
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5525. Total: -0.5525
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['9d', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27702702702702703, 'bluff_count': 26, 'total_actions': 148, 'raise_count': 41}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -1.087
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.113
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6845. Total: -1.237
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['9d', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28187919463087246, 'bluff_count': 27, 'total_actions': 149, 'raise_count': 42}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -1.623
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.177
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8109999999999999. Total: -2.048
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=0, My Cards=['9d', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2866666666666667, 'bluff_count': 28, 'total_actions': 150, 'raise_count': 43}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5405. Total: -2.1635
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0595. Total: -0.2365
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8571666666666666. Total: -2.9051666666666667
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['4c', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2847682119205298, 'bluff_count': 28, 'total_actions': 151, 'raise_count': 43}
Strategy for state (0, ('4c', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5425. Total: -0.5425
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Th', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28289473684210525, 'bluff_count': 28, 'total_actions': 152, 'raise_count': 43}
Strategy for state (0, ('9c', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6525. Total: -0.6525
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9s', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28104575163398693, 'bluff_count': 28, 'total_actions': 153, 'raise_count': 43}
Strategy for state (0, ('9h', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.363. Total: -0.363
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.237. Total: -0.237
Regret updated for <class 'skeleton.actions.CallAction'>: -0.363. Total: -0.363
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['6c', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2792207792207792, 'bluff_count': 28, 'total_actions': 154, 'raise_count': 43}
Strategy for state (0, ('6c', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5435. Total: -0.5435
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['6s', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27741935483870966, 'bluff_count': 28, 'total_actions': 155, 'raise_count': 43}
Strategy for state (0, ('6s', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Regret updated for <class 'skeleton.actions.CallAction'>: -0.54. Total: -0.54
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['6s', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27564102564102566, 'bluff_count': 29, 'total_actions': 156, 'raise_count': 43}
Strategy for state (0, ('6s', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -1.0550000000000002
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.14500000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.665. Total: -1.205
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['2s', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27388535031847133, 'bluff_count': 29, 'total_actions': 157, 'raise_count': 43}
Strategy for state (0, ('2s', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -0.511
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.089
Regret updated for <class 'skeleton.actions.CallAction'>: -0.511. Total: -0.511
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['Qc', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2721518987341772, 'bluff_count': 30, 'total_actions': 158, 'raise_count': 43}
Strategy for state (0, ('Jh', 'Qc'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['2d', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27044025157232704, 'bluff_count': 30, 'total_actions': 159, 'raise_count': 43}
Strategy for state (0, ('2d', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -0.527
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['6c', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26875, 'bluff_count': 30, 'total_actions': 160, 'raise_count': 43}
Strategy for state (0, ('6c', 'Qh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0545. Total: -0.0545
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.0545
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['2s', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2670807453416149, 'bluff_count': 31, 'total_actions': 161, 'raise_count': 43}
Strategy for state (0, ('2s', '7s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.CallAction'>: -0.522. Total: -0.522
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2s', '7s'], Board Cards=['Td', 'Qc', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.2654320987654321, 'bluff_count': 31, 'total_actions': 162, 'raise_count': 43}
Strategy for state (3, ('2s', '7s'), ('Td', 'Qc', 'Th')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5785. Total: -0.5785
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0215. Total: -0.0215
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7285. Total: -0.7285
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['2s', '7s'], Board Cards=['Td', 'Qc', 'Th', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.26993865030674846, 'bluff_count': 31, 'total_actions': 163, 'raise_count': 44}
Strategy for state (4, ('2s', '7s'), ('Td', 'Qc', 'Th', 'Jc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.CallAction'>: -0.851090909090909. Total: -0.851090909090909
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 24
sent answer: RaiseAction(amount=24)
Round State: Street=4, My Cards=['2s', '7s'], Board Cards=['Td', 'Qc', 'Th', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.27439024390243905, 'bluff_count': 31, 'total_actions': 164, 'raise_count': 45}
Strategy for state (4, ('2s', '7s'), ('Td', 'Qc', 'Th', 'Jc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -1.0785
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.1215
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9165. Total: -1.767590909090909
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['6d', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 31, 'total_actions': 165, 'raise_count': 45}
Strategy for state (0, ('6d', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5469999999999999. Total: -0.5469999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['Qc', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2710843373493976, 'bluff_count': 31, 'total_actions': 166, 'raise_count': 45}
Strategy for state (0, ('6d', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5405. Total: -0.5405
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0595. Total: -0.0595
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5405. Total: -0.5405
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Qc', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2694610778443114, 'bluff_count': 31, 'total_actions': 167, 'raise_count': 45}
Strategy for state (0, ('6d', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -1.0745
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.1255
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6839999999999999. Total: -1.2245
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qc', '6d'], Board Cards=['Ac', '9c', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.27380952380952384, 'bluff_count': 31, 'total_actions': 168, 'raise_count': 46}
Strategy for state (3, ('6d', 'Qc'), ('Ac', '9c', 'Kc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.369. Total: -0.369
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.231. Total: -0.231
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6023333333333334. Total: -0.6023333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['Ah', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27218934911242604, 'bluff_count': 32, 'total_actions': 169, 'raise_count': 46}
Strategy for state (0, ('7c', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -0.525
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.075
Regret updated for <class 'skeleton.actions.CallAction'>: -0.525. Total: -0.525
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['Th', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27058823529411763, 'bluff_count': 32, 'total_actions': 170, 'raise_count': 46}
Strategy for state (0, ('Kd', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -0.5295
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.0705
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6795. Total: -0.6795
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['9d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26900584795321636, 'bluff_count': 32, 'total_actions': 171, 'raise_count': 46}
Strategy for state (0, ('4s', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27325581395348836, 'bluff_count': 32, 'total_actions': 172, 'raise_count': 47}
Strategy for state (0, ('4s', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -1.044
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.156
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7488333333333334. Total: -1.2773333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', '4s'], Board Cards=['2h', 'Ah', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.2774566473988439, 'bluff_count': 32, 'total_actions': 173, 'raise_count': 48}
Strategy for state (3, ('4s', '9d'), ('2h', 'Ah', '3s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46699999999999997. Total: -0.46699999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.133. Total: -0.133
Regret updated for <class 'skeleton.actions.CallAction'>: -0.742. Total: -0.742
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['Kh', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27586206896551724, 'bluff_count': 32, 'total_actions': 174, 'raise_count': 48}
Strategy for state (0, ('Kh', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.365. Total: -0.365
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.235. Total: -0.235
Regret updated for <class 'skeleton.actions.CallAction'>: -0.515. Total: -0.515
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kh', 'Ks'], Board Cards=['Qd', '2d', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.2742857142857143, 'bluff_count': 32, 'total_actions': 175, 'raise_count': 48}
Strategy for state (3, ('Kh', 'Ks'), ('Qd', '2d', '9d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.134. Total: -0.134
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46599999999999997. Total: -0.46599999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.134. Total: -0.134
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.5728
sent answer: RaiseAction(amount=2.5728)
Round State: Street=3, My Cards=['Kh', 'Ks'], Board Cards=['Qd', '2d', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.2784090909090909, 'bluff_count': 32, 'total_actions': 176, 'raise_count': 49}
Strategy for state (3, ('Kh', 'Ks'), ('Qd', '2d', '9d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4875. Total: -0.9535
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1125. Total: -0.2465
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7625. Total: -0.7625
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['2c', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2768361581920904, 'bluff_count': 32, 'total_actions': 177, 'raise_count': 49}
Strategy for state (0, ('2c', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.072
Regret updated for <class 'skeleton.actions.CallAction'>: -0.528. Total: -0.528
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['9d', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2752808988764045, 'bluff_count': 32, 'total_actions': 178, 'raise_count': 49}
Strategy for state (0, ('9d', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -1.6309999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.16899999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5479999999999999. Total: -1.6309999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', 'Kc'], Board Cards=['Td', '6c', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2737430167597765, 'bluff_count': 32, 'total_actions': 179, 'raise_count': 49}
Strategy for state (3, ('9d', 'Kc'), ('Td', '6c', '4s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.579. Total: -0.579
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.021. Total: -0.021
Regret updated for <class 'skeleton.actions.CallAction'>: -0.729. Total: -0.729
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['9d', 'Kc'], Board Cards=['Td', '6c', '4s', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.2777777777777778, 'bluff_count': 32, 'total_actions': 180, 'raise_count': 50}
Strategy for state (4, ('9d', 'Kc'), ('Td', '6c', '4s', '6d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.486. Total: -0.486
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.114. Total: -0.114
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7193333333333334. Total: -0.7193333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['3h', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27624309392265195, 'bluff_count': 32, 'total_actions': 181, 'raise_count': 50}
Strategy for state (0, ('3h', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.5305
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.0695
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5305. Total: -0.5305
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: J
Round State: Street=0, My Cards=['5c', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27472527472527475, 'bluff_count': 32, 'total_actions': 182, 'raise_count': 50}
Strategy for state (0, ('2h', '5c'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.062. Total: -0.138
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -1.062
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.138
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Qc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.273224043715847, 'bluff_count': 33, 'total_actions': 183, 'raise_count': 50}
Strategy for state (0, ('Ad', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5255. Total: -1.0615
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0745. Total: -0.1385
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5255. Total: -1.0615
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6c', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2717391304347826, 'bluff_count': 33, 'total_actions': 184, 'raise_count': 50}
Strategy for state (0, ('6c', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Regret updated for <class 'skeleton.actions.CallAction'>: -0.656. Total: -0.656
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6c', 'Qc'], Board Cards=['6d', 'Jc', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2702702702702703, 'bluff_count': 33, 'total_actions': 185, 'raise_count': 50}
Strategy for state (3, ('6c', 'Qc'), ('6d', 'Jc', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.301. Total: -0.301
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.299. Total: -0.299
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.301. Total: -0.301
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 5.7791999999999994
sent answer: RaiseAction(amount=5.7791999999999994)
Round State: Street=4, My Cards=['6c', 'Qc'], Board Cards=['6d', 'Jc', 'Kc', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.27419354838709675, 'bluff_count': 33, 'total_actions': 186, 'raise_count': 51}
Strategy for state (4, ('6c', 'Qc'), ('6d', 'Jc', 'Kc', 'Js')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7305. Total: -0.7305
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.13050000000000006. Total: 0.13050000000000006
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7305. Total: -0.7305
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 27.0
sent answer: RaiseAction(amount=27.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9d', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 33, 'total_actions': 187, 'raise_count': 51}
Strategy for state (0, ('9c', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.356. Total: -0.356
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.244. Total: -0.244
Regret updated for <class 'skeleton.actions.CallAction'>: -0.356. Total: -0.356
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9d', '9c'], Board Cards=['Qd', '8s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.2765957446808511, 'bluff_count': 33, 'total_actions': 188, 'raise_count': 52}
Strategy for state (3, ('9c', '9d'), ('Qd', '8s', 'Kh')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.113. Total: -0.113
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7203333333333334. Total: -0.7203333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['3h', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2751322751322751, 'bluff_count': 33, 'total_actions': 189, 'raise_count': 52}
Strategy for state (0, ('3h', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -0.5275
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.0725
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6775. Total: -0.6775
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kd', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2736842105263158, 'bluff_count': 34, 'total_actions': 190, 'raise_count': 52}
Strategy for state (0, ('7h', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5389999999999999. Total: -0.5389999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Kd', '7h'], Board Cards=['8s', 'Ts', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.27225130890052357, 'bluff_count': 34, 'total_actions': 191, 'raise_count': 52}
Strategy for state (3, ('7h', 'Kd'), ('8s', 'Ts', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Td', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2708333333333333, 'bluff_count': 34, 'total_actions': 192, 'raise_count': 52}
Strategy for state (0, ('Tc', 'Td'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2615. Total: -0.2615
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33849999999999997. Total: -0.33849999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2615. Total: -0.2615
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Td', 'Tc'], Board Cards=['5s', 'Qd', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.2694300518134715, 'bluff_count': 34, 'total_actions': 193, 'raise_count': 52}
Strategy for state (3, ('Tc', 'Td'), ('5s', 'Qd', '9s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.134. Total: -0.134
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46599999999999997. Total: -0.46599999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.134. Total: -0.134
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9d', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26804123711340205, 'bluff_count': 34, 'total_actions': 194, 'raise_count': 52}
Strategy for state (0, ('6h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5205. Total: -0.5205
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6d', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26666666666666666, 'bluff_count': 34, 'total_actions': 195, 'raise_count': 52}
Strategy for state (0, ('6d', '8d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4765. Total: -0.4765
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1235. Total: -0.1235
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4765. Total: -0.4765
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ts', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2653061224489796, 'bluff_count': 34, 'total_actions': 196, 'raise_count': 52}
Strategy for state (0, ('Ac', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5375. Total: -0.5375
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0625. Total: -0.0625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6875. Total: -0.6875
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ad', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2639593908629442, 'bluff_count': 35, 'total_actions': 197, 'raise_count': 52}
Strategy for state (0, ('9h', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.5429999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.057
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5429999999999999. Total: -0.5429999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26262626262626265, 'bluff_count': 36, 'total_actions': 198, 'raise_count': 52}
Strategy for state (0, ('5d', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.5125
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5125. Total: -0.5125
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['2s', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2613065326633166, 'bluff_count': 36, 'total_actions': 199, 'raise_count': 52}
Strategy for state (0, ('2s', '3d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.5235
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.0765
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6735. Total: -0.6735
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kh', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26, 'bluff_count': 36, 'total_actions': 200, 'raise_count': 52}
Strategy for state (0, ('Kh', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.063. Total: -0.063
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5369999999999999. Total: -0.5369999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9h', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25870646766169153, 'bluff_count': 36, 'total_actions': 201, 'raise_count': 52}
Strategy for state (0, ('2s', '9h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0505. Total: -0.0505
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5495. Total: -0.5495
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0505. Total: -0.0505
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['9h', '2s'], Board Cards=['Ks', 'Ad', '4c']
Opponent tendencies updated: {'aggression_frequency': 0.25742574257425743, 'bluff_count': 36, 'total_actions': 202, 'raise_count': 52}
Strategy for state (3, ('2s', '9h'), ('Ks', 'Ad', '4c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.01. Total: -0.01
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.59. Total: -0.59
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.01. Total: -0.01
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Kh', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2561576354679803, 'bluff_count': 37, 'total_actions': 203, 'raise_count': 52}
Strategy for state (0, ('Kd', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.37449999999999994. Total: -0.37449999999999994
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2255. Total: -0.2255
Regret updated for <class 'skeleton.actions.CallAction'>: -0.37449999999999994. Total: -0.37449999999999994
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Kh', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2549019607843137, 'bluff_count': 37, 'total_actions': 204, 'raise_count': 52}
Strategy for state (0, ('Kd', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.38249999999999995. Total: -0.7569999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2175. Total: -0.443
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5325. Total: -0.9069999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kh', 'Kd'], Board Cards=['Jc', '4h', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.25853658536585367, 'bluff_count': 38, 'total_actions': 205, 'raise_count': 53}
Strategy for state (3, ('Kd', 'Kh'), ('Jc', '4h', '7s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.498. Total: -0.498
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.102. Total: -0.102
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7313333333333334. Total: -0.7313333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['7h', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25728155339805825, 'bluff_count': 38, 'total_actions': 206, 'raise_count': 53}
Strategy for state (0, ('2d', '7h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6859999999999999. Total: -0.6859999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['7h', '2d'], Board Cards=['Ac', 'Qh', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2560386473429952, 'bluff_count': 38, 'total_actions': 207, 'raise_count': 53}
Strategy for state (3, ('2d', '7h'), ('Ac', 'Qh', '4s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.018. Total: -0.018
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.582. Total: -0.582
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.018. Total: -0.018
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['7h', '2d'], Board Cards=['Ac', 'Qh', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.25961538461538464, 'bluff_count': 38, 'total_actions': 208, 'raise_count': 54}
Strategy for state (3, ('2d', '7h'), ('Ac', 'Qh', '4s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.584. Total: -1.166
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.016. Total: -0.034
Regret updated for <class 'skeleton.actions.CallAction'>: -0.859. Total: -0.859
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['3h', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2583732057416268, 'bluff_count': 39, 'total_actions': 209, 'raise_count': 54}
Strategy for state (0, ('3h', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5469999999999999. Total: -0.5469999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ts', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2571428571428571, 'bluff_count': 39, 'total_actions': 210, 'raise_count': 54}
Strategy for state (0, ('Ad', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ts', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26066350710900477, 'bluff_count': 40, 'total_actions': 211, 'raise_count': 55}
Strategy for state (0, ('Ad', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5405. Total: -1.063
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0595. Total: -0.137
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7738333333333334. Total: -1.2963333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9s', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25943396226415094, 'bluff_count': 40, 'total_actions': 212, 'raise_count': 55}
Strategy for state (0, ('7h', '9s'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5s', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25821596244131456, 'bluff_count': 40, 'total_actions': 213, 'raise_count': 55}
Strategy for state (0, ('4c', '5s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4935. Total: -0.4935
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1065. Total: -0.1065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4935. Total: -0.4935
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6c', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2570093457943925, 'bluff_count': 40, 'total_actions': 214, 'raise_count': 55}
Strategy for state (0, ('6c', 'Ks'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0655. Total: -0.0655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.5345
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.0655
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['6c', 'Ks'], Board Cards=['9c', '6h', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.2558139534883721, 'bluff_count': 40, 'total_actions': 215, 'raise_count': 55}
Strategy for state (3, ('6c', 'Ks'), ('9c', '6h', '5c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0765. Total: -0.0765
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.5235
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.0765
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Qh', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25462962962962965, 'bluff_count': 40, 'total_actions': 216, 'raise_count': 55}
Strategy for state (0, ('Qh', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.489. Total: -0.489
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.111. Total: -0.111
Regret updated for <class 'skeleton.actions.CallAction'>: -0.489. Total: -0.489
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ad', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2534562211981567, 'bluff_count': 40, 'total_actions': 217, 'raise_count': 55}
Strategy for state (0, ('Ad', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6705. Total: -0.6705
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ad', 'Js'], Board Cards=['7c', 'Ac', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.25229357798165136, 'bluff_count': 40, 'total_actions': 218, 'raise_count': 55}
Strategy for state (3, ('Ad', 'Js'), ('7c', 'Ac', '8d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9h', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2511415525114155, 'bluff_count': 41, 'total_actions': 219, 'raise_count': 55}
Strategy for state (0, ('6s', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.505. Total: -0.505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.095. Total: -0.095
Regret updated for <class 'skeleton.actions.CallAction'>: -0.505. Total: -0.505
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5d', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 41, 'total_actions': 220, 'raise_count': 55}
Strategy for state (0, ('5d', 'Qh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0755. Total: -0.0755
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.5245
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.0755
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['5d', 'Qh'], Board Cards=['9h', 'Th', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.248868778280543, 'bluff_count': 41, 'total_actions': 221, 'raise_count': 55}
Strategy for state (3, ('5d', 'Qh'), ('9h', 'Th', 'Jc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.255. Total: -0.255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.345. Total: -0.345
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.255. Total: -0.255
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.448
sent answer: RaiseAction(amount=2.448)
Round State: Street=4, My Cards=['5d', 'Qh'], Board Cards=['9h', 'Th', 'Jc', 'Kd']
Opponent tendencies updated: {'aggression_frequency': 0.24774774774774774, 'bluff_count': 41, 'total_actions': 222, 'raise_count': 55}
Strategy for state (4, ('5d', 'Qh'), ('9h', 'Th', 'Jc', 'Kd')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.8535. Total: -0.8535
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.25350000000000006. Total: 0.25350000000000006
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.8535. Total: -0.8535
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8s', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24663677130044842, 'bluff_count': 41, 'total_actions': 223, 'raise_count': 55}
Strategy for state (0, ('7c', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4955. Total: -0.4955
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1045. Total: -0.1045
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4955. Total: -0.4955
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6s', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24553571428571427, 'bluff_count': 41, 'total_actions': 224, 'raise_count': 55}
Strategy for state (0, ('6s', '8d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.09. Total: -0.09
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -0.51
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.09
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['6s', '8d'], Board Cards=['Tc', 'Ts', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.24444444444444444, 'bluff_count': 41, 'total_actions': 225, 'raise_count': 55}
Strategy for state (3, ('6s', '8d'), ('Tc', 'Ts', '8c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.193. Total: -0.193
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.407. Total: -0.407
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.193. Total: -0.193
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 3.7056
sent answer: RaiseAction(amount=3.7056)
Round State: Street=3, My Cards=['6s', '8d'], Board Cards=['Tc', 'Ts', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.24778761061946902, 'bluff_count': 41, 'total_actions': 226, 'raise_count': 56}
Strategy for state (3, ('6s', '8d'), ('Tc', 'Ts', '8c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.428. Total: -0.835
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.172. Total: -0.365
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7590344827586206. Total: -0.7590344827586206
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 29
sent answer: RaiseAction(amount=29)
Round State: Street=4, My Cards=['6s', '8d'], Board Cards=['Tc', 'Ts', '8c', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.2511013215859031, 'bluff_count': 41, 'total_actions': 227, 'raise_count': 57}
Strategy for state (4, ('6s', '8d'), ('Tc', 'Ts', '8c', 'Td')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.888. Total: -0.888
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.28800000000000003. Total: 0.28800000000000003
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.888. Total: -0.888
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 99.0
sent answer: RaiseAction(amount=99.0)
Round State: Street=5, My Cards=['6s', '8d'], Board Cards=['Tc', 'Ts', '8c', 'Td', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.2543859649122807, 'bluff_count': 41, 'total_actions': 228, 'raise_count': 58}
Strategy for state (5, ('6s', '8d'), ('Tc', 'Ts', '8c', 'Td', 'Jc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7515. Total: -0.7515
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15149999999999997. Total: 0.15149999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7515. Total: -0.7515
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['6s', '8d'], Board Cards=['Tc', 'Ts', '8c', 'Td', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.2576419213973799, 'bluff_count': 41, 'total_actions': 229, 'raise_count': 59}
Strategy for state (5, ('6s', '8d'), ('Tc', 'Ts', '8c', 'Td', 'Jc')): {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7615. Total: -1.513
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2347546816479401. Total: -0.2347546816479401
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
No valid strategy available. Defaulting to FoldAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2565217391304348, 'bluff_count': 41, 'total_actions': 230, 'raise_count': 59}
Strategy for state (0, ('2c', '9c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -1.0605
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.1395
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5335. Total: -1.2105000000000001
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9c', '2c'], Board Cards=['Ts', '7c', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.2554112554112554, 'bluff_count': 41, 'total_actions': 231, 'raise_count': 59}
Strategy for state (3, ('2c', '9c'), ('Ts', '7c', '7s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.581. Total: -0.581
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.019. Total: -0.019
Regret updated for <class 'skeleton.actions.CallAction'>: -0.731. Total: -0.731
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['2d', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2543103448275862, 'bluff_count': 41, 'total_actions': 232, 'raise_count': 59}
Strategy for state (0, ('2d', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -1.0550000000000002
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.145
Regret updated for <class 'skeleton.actions.CallAction'>: -0.528. Total: -1.0550000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5h', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2532188841201717, 'bluff_count': 41, 'total_actions': 233, 'raise_count': 59}
Strategy for state (0, ('5h', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -0.5409999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['5h', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25213675213675213, 'bluff_count': 41, 'total_actions': 234, 'raise_count': 59}
Strategy for state (0, ('5h', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -1.0719999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.128
Regret updated for <class 'skeleton.actions.CallAction'>: -0.681. Total: -1.222
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9c', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.251063829787234, 'bluff_count': 41, 'total_actions': 235, 'raise_count': 59}
Strategy for state (0, ('9c', 'Tc'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1435. Total: -0.1435
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4565. Total: -0.4565
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1435. Total: -0.1435
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['9c', 'Tc'], Board Cards=['4s', 'Js', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 41, 'total_actions': 236, 'raise_count': 59}
Strategy for state (3, ('9c', 'Tc'), ('4s', 'Js', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.05. Total: -0.05
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -0.5499999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.05
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['9c', 'Tc'], Board Cards=['4s', 'Js', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.25316455696202533, 'bluff_count': 41, 'total_actions': 237, 'raise_count': 60}
Strategy for state (3, ('9c', 'Tc'), ('4s', 'Js', 'Ah')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5569999999999999. Total: -1.1069999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.043. Total: -0.093
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7903333333333333. Total: -0.7903333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['9c', 'Tc'], Board Cards=['4s', 'Js', 'Ah', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.25630252100840334, 'bluff_count': 41, 'total_actions': 238, 'raise_count': 61}
Strategy for state (4, ('9c', 'Tc'), ('4s', 'Js', 'Ah', '7s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.165. Total: -0.165
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.43499999999999994. Total: -0.43499999999999994
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.165. Total: -0.165
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['9c', 'Tc'], Board Cards=['4s', 'Js', 'Ah', '7s', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.2594142259414226, 'bluff_count': 41, 'total_actions': 239, 'raise_count': 62}
Strategy for state (5, ('9c', 'Tc'), ('4s', 'Js', 'Ah', '7s', 'Td')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.6345. Total: -0.6345
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.034499999999999975. Total: 0.034499999999999975
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6345. Total: -0.6345
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 18.0
sent answer: RaiseAction(amount=18.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jd', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25833333333333336, 'bluff_count': 41, 'total_actions': 240, 'raise_count': 62}
Strategy for state (0, ('Jd', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.CallAction'>: -0.532. Total: -0.532
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jd', 'Kc'], Board Cards=['Js', '3d', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.2572614107883817, 'bluff_count': 41, 'total_actions': 241, 'raise_count': 62}
Strategy for state (3, ('Jd', 'Kc'), ('Js', '3d', 'Ks')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.18. Total: -0.18
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.42. Total: -0.42
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.18. Total: -0.18
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Jd', 'Kc'], Board Cards=['Js', '3d', 'Ks', 'Ad']
Opponent tendencies updated: {'aggression_frequency': 0.256198347107438, 'bluff_count': 41, 'total_actions': 242, 'raise_count': 62}
Strategy for state (4, ('Jd', 'Kc'), ('Js', '3d', 'Ks', 'Ad')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.30000000000000004. Total: 0.30000000000000004
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.9. Total: -0.9
Regret updated for <class 'skeleton.actions.CallAction'>: 0.15000000000000002. Total: 0.15000000000000002
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jd', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2551440329218107, 'bluff_count': 41, 'total_actions': 243, 'raise_count': 62}
Strategy for state (0, ('6c', 'Jd'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Jd', '6c'], Board Cards=['Qh', 'Jh', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.2540983606557377, 'bluff_count': 41, 'total_actions': 244, 'raise_count': 62}
Strategy for state (3, ('6c', 'Jd'), ('Qh', 'Jh', 'Qc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1555. Total: -0.1555
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4445. Total: -0.4445
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1555. Total: -0.1555
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ac', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2530612244897959, 'bluff_count': 41, 'total_actions': 245, 'raise_count': 62}
Strategy for state (0, ('9c', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.CallAction'>: -0.514. Total: -0.514
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['4h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25203252032520324, 'bluff_count': 41, 'total_actions': 246, 'raise_count': 62}
Strategy for state (0, ('4h', '9d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0425. Total: -0.0425
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5575. Total: -0.5575
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0425. Total: -0.0425
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['4h', '9d'], Board Cards=['7h', 'Qh', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.25101214574898784, 'bluff_count': 41, 'total_actions': 247, 'raise_count': 62}
Strategy for state (3, ('4h', '9d'), ('7h', 'Qh', '4d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jd', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 41, 'total_actions': 248, 'raise_count': 62}
Strategy for state (0, ('Jd', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5215. Total: -0.5215
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ah', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24899598393574296, 'bluff_count': 41, 'total_actions': 249, 'raise_count': 62}
Strategy for state (0, ('Ah', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -0.527
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Ah', 'Ks'], Board Cards=['Ad', 'Qc', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.248, 'bluff_count': 41, 'total_actions': 250, 'raise_count': 62}
Strategy for state (3, ('Ah', 'Ks'), ('Ad', 'Qc', '8c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5h', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24701195219123506, 'bluff_count': 41, 'total_actions': 251, 'raise_count': 62}
Strategy for state (0, ('2c', '5h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -0.5275
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.0725
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6775. Total: -0.6775
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['5h', '2c'], Board Cards=['6d', '7s', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 41, 'total_actions': 252, 'raise_count': 63}
Strategy for state (3, ('2c', '5h'), ('6d', '7s', 'Qc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.04. Total: -0.04
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -0.5599999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.04
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['2c', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2490118577075099, 'bluff_count': 41, 'total_actions': 253, 'raise_count': 63}
Strategy for state (0, ('2c', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.5439999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.056
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5439999999999999. Total: -0.5439999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Kc', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24803149606299213, 'bluff_count': 41, 'total_actions': 254, 'raise_count': 63}
Strategy for state (0, ('Kc', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.36649999999999994. Total: -0.36649999999999994
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2335. Total: -0.2335
Regret updated for <class 'skeleton.actions.CallAction'>: -0.36649999999999994. Total: -0.36649999999999994
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kc', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25098039215686274, 'bluff_count': 41, 'total_actions': 255, 'raise_count': 64}
Strategy for state (0, ('Kc', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.377. Total: -0.7434999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.223. Total: -0.4565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6103333333333334. Total: -0.9768333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['Kc', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25390625, 'bluff_count': 41, 'total_actions': 256, 'raise_count': 65}
Strategy for state (0, ('Kc', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3655. Total: -1.109
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2345. Total: -0.6910000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6655. Total: -1.6423333333333332
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9s', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2529182879377432, 'bluff_count': 41, 'total_actions': 257, 'raise_count': 65}
Strategy for state (0, ('9s', 'Kh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['9s', 'Kh'], Board Cards=['Qd', '2d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.25193798449612403, 'bluff_count': 41, 'total_actions': 258, 'raise_count': 65}
Strategy for state (3, ('9s', 'Kh'), ('Qd', '2d', '7s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.017. Total: -0.017
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.583
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.017
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['9s', 'Kh'], Board Cards=['Qd', '2d', '7s', 'Qs']
Opponent tendencies updated: {'aggression_frequency': 0.25096525096525096, 'bluff_count': 41, 'total_actions': 259, 'raise_count': 65}
Strategy for state (4, ('9s', 'Kh'), ('Qd', '2d', '7s', 'Qs')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.098. Total: -0.098
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.502. Total: -0.502
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.098. Total: -0.098
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['3h', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 41, 'total_actions': 260, 'raise_count': 65}
Strategy for state (0, ('2h', '3h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4945. Total: -0.4945
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['3h', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24904214559386972, 'bluff_count': 41, 'total_actions': 261, 'raise_count': 65}
Strategy for state (0, ('2h', '3h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -1.0045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.1955
Regret updated for <class 'skeleton.actions.CallAction'>: -0.66. Total: -1.1545
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Td', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2480916030534351, 'bluff_count': 41, 'total_actions': 262, 'raise_count': 65}
Strategy for state (0, ('4h', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6935. Total: -0.6935
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7c', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24714828897338403, 'bluff_count': 41, 'total_actions': 263, 'raise_count': 65}
Strategy for state (0, ('3h', '7c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -0.538
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Th', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24621212121212122, 'bluff_count': 42, 'total_actions': 264, 'raise_count': 65}
Strategy for state (0, ('Td', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3595. Total: -0.3595
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2405. Total: -0.2405
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3595. Total: -0.3595
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6s', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24528301886792453, 'bluff_count': 42, 'total_actions': 265, 'raise_count': 65}
Strategy for state (0, ('3d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5255. Total: -1.5564999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0745. Total: -0.2435
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5255. Total: -1.5564999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8s', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24436090225563908, 'bluff_count': 43, 'total_actions': 266, 'raise_count': 65}
Strategy for state (0, ('3h', '8s'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0425. Total: -0.0425
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5575. Total: -0.5575
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0425. Total: -0.0425
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3c', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24344569288389514, 'bluff_count': 43, 'total_actions': 267, 'raise_count': 65}
Strategy for state (0, ('3c', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5539999999999999. Total: -0.5539999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.046. Total: -0.046
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5539999999999999. Total: -0.5539999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3c', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2462686567164179, 'bluff_count': 43, 'total_actions': 268, 'raise_count': 66}
Strategy for state (0, ('3c', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -1.105
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.095
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7843333333333333. Total: -1.3383333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9h', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24535315985130113, 'bluff_count': 44, 'total_actions': 269, 'raise_count': 66}
Strategy for state (0, ('9h', 'Jc'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.098. Total: -0.098
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.502. Total: -0.502
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.098. Total: -0.098
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9h', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24814814814814815, 'bluff_count': 44, 'total_actions': 270, 'raise_count': 67}
Strategy for state (0, ('9h', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -1.0074999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.1925
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7388333333333333. Total: -0.7388333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9h', 'Jc'], Board Cards=['Jd', '4d', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.25092250922509224, 'bluff_count': 44, 'total_actions': 271, 'raise_count': 68}
Strategy for state (3, ('9h', 'Jc'), ('Jd', '4d', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.044. Total: -0.044
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5559999999999999. Total: -0.5559999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.044. Total: -0.044
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5s', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 44, 'total_actions': 272, 'raise_count': 68}
Strategy for state (0, ('5s', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.063. Total: -0.063
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5369999999999999. Total: -0.5369999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['5s', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2490842490842491, 'bluff_count': 44, 'total_actions': 273, 'raise_count': 68}
Strategy for state (0, ('5s', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -1.064
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.136
Regret updated for <class 'skeleton.actions.CallAction'>: -0.677. Total: -1.214
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['5s', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2518248175182482, 'bluff_count': 44, 'total_actions': 274, 'raise_count': 69}
Strategy for state (0, ('5s', 'Jc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5375. Total: -1.6015000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0625. Total: -0.1985
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8125. Total: -2.0265
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2s', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2509090909090909, 'bluff_count': 44, 'total_actions': 275, 'raise_count': 69}
Strategy for state (0, ('2s', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -0.5155
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.0845
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5155. Total: -0.5155
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2c', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 44, 'total_actions': 276, 'raise_count': 69}
Strategy for state (0, ('2c', '6d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -0.5395
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.0605
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6895. Total: -0.6895
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2c', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2527075812274368, 'bluff_count': 44, 'total_actions': 277, 'raise_count': 70}
Strategy for state (0, ('2c', '6d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -1.0735000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.1265
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8089999999999999. Total: -1.4985
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2517985611510791, 'bluff_count': 44, 'total_actions': 278, 'raise_count': 70}
Strategy for state (0, ('9s', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.113. Total: -0.113
Regret updated for <class 'skeleton.actions.CallAction'>: -0.487. Total: -0.487
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2s', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25089605734767023, 'bluff_count': 44, 'total_actions': 279, 'raise_count': 70}
Strategy for state (0, ('2s', 'Kd'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0455. Total: -0.0455
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5545. Total: -0.5545
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0455. Total: -0.0455
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ts', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 44, 'total_actions': 280, 'raise_count': 70}
Strategy for state (0, ('Ad', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -1.5905
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.20950000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5275. Total: -1.8238333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ts', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2526690391459075, 'bluff_count': 45, 'total_actions': 281, 'raise_count': 71}
Strategy for state (0, ('Ad', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -2.12
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.28
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7628333333333334. Total: -2.586666666666667
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8c', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25177304964539005, 'bluff_count': 45, 'total_actions': 282, 'raise_count': 71}
Strategy for state (0, ('8c', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6705. Total: -0.6705
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8c', 'Kc'], Board Cards=['2c', 'As', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.2508833922261484, 'bluff_count': 45, 'total_actions': 283, 'raise_count': 71}
Strategy for state (3, ('8c', 'Kc'), ('2c', 'As', 'Jd')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.04. Total: -0.04
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -0.5599999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.04
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['8c', 'Kc'], Board Cards=['2c', 'As', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.2535211267605634, 'bluff_count': 45, 'total_actions': 284, 'raise_count': 72}
Strategy for state (3, ('8c', 'Kc'), ('2c', 'As', 'Jd')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.567. Total: -1.1269999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.033. Total: -0.07300000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8003333333333333. Total: -0.8003333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['8c', 'Kc'], Board Cards=['2c', 'As', 'Jd', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.256140350877193, 'bluff_count': 45, 'total_actions': 285, 'raise_count': 73}
Strategy for state (4, ('8c', 'Kc'), ('2c', 'As', 'Jd', '2d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.093. Total: -0.093
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.507. Total: -0.507
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.093. Total: -0.093
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['8c', 'Kc'], Board Cards=['2c', 'As', 'Jd', '2d', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.25874125874125875, 'bluff_count': 45, 'total_actions': 286, 'raise_count': 74}
Strategy for state (5, ('8c', 'Kc'), ('2c', 'As', 'Jd', '2d', '4d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.423. Total: -0.423
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.177. Total: -0.177
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.423. Total: -0.423
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12.182399999999998
sent answer: RaiseAction(amount=12.182399999999998)
Round State: Street=5, My Cards=['8c', 'Kc'], Board Cards=['2c', 'As', 'Jd', '2d', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.2613240418118467, 'bluff_count': 46, 'total_actions': 287, 'raise_count': 75}
Strategy for state (5, ('8c', 'Kc'), ('2c', 'As', 'Jd', '2d', '4d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.191. Total: -0.368
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.409. Total: -0.832
Regret updated for <class 'skeleton.actions.CallAction'>: -0.558741935483871. Total: -0.558741935483871
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['As', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2604166666666667, 'bluff_count': 46, 'total_actions': 288, 'raise_count': 75}
Strategy for state (0, ('8c', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5425. Total: -0.5425
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6d', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25951557093425603, 'bluff_count': 46, 'total_actions': 289, 'raise_count': 75}
Strategy for state (0, ('5c', '6d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.499. Total: -0.499
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.101. Total: -0.101
Regret updated for <class 'skeleton.actions.CallAction'>: -0.499. Total: -0.499
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25862068965517243, 'bluff_count': 46, 'total_actions': 290, 'raise_count': 75}
Strategy for state (0, ('7c', 'Kd'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.051. Total: -0.051
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['7c', 'Kd'], Board Cards=['Jc', '8s', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.25773195876288657, 'bluff_count': 46, 'total_actions': 291, 'raise_count': 75}
Strategy for state (3, ('7c', 'Kd'), ('Jc', '8s', '2c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.051. Total: -0.051
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2568493150684932, 'bluff_count': 46, 'total_actions': 292, 'raise_count': 75}
Strategy for state (0, ('3h', '4s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9d', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25597269624573377, 'bluff_count': 46, 'total_actions': 293, 'raise_count': 75}
Strategy for state (0, ('9d', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2d', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25510204081632654, 'bluff_count': 46, 'total_actions': 294, 'raise_count': 75}
Strategy for state (0, ('2d', '6d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['2d', '6d'], Board Cards=['3h', '5s', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.2542372881355932, 'bluff_count': 46, 'total_actions': 295, 'raise_count': 75}
Strategy for state (3, ('2d', '6d'), ('3h', '5s', 'Ts')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.118. Total: -0.118
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.482. Total: -0.482
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.118. Total: -0.118
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8h', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2533783783783784, 'bluff_count': 47, 'total_actions': 296, 'raise_count': 75}
Strategy for state (0, ('8h', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5375. Total: -0.5375
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0625. Total: -0.0625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5375. Total: -0.5375
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['8d', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25252525252525254, 'bluff_count': 48, 'total_actions': 297, 'raise_count': 75}
Strategy for state (0, ('7d', '8d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.113. Total: -0.113
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.113. Total: -0.113
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['8d', '7d'], Board Cards=['4d', '8c', 'Tc']
Opponent tendencies updated: {'aggression_frequency': 0.2516778523489933, 'bluff_count': 48, 'total_actions': 298, 'raise_count': 75}
Strategy for state (3, ('7d', '8d'), ('4d', '8c', 'Tc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['6d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2508361204013378, 'bluff_count': 49, 'total_actions': 299, 'raise_count': 75}
Strategy for state (0, ('4s', '6d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.493. Total: -0.493
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.107. Total: -0.107
Regret updated for <class 'skeleton.actions.CallAction'>: -0.493. Total: -0.493
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['9h', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 49, 'total_actions': 300, 'raise_count': 75}
Strategy for state (0, ('9h', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9h', 'Kc'], Board Cards=['Ah', 'Jh', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.25249169435215946, 'bluff_count': 49, 'total_actions': 301, 'raise_count': 76}
Strategy for state (3, ('9h', 'Kc'), ('Ah', 'Jh', '7h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.32299999999999995. Total: -0.32299999999999995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.277. Total: -0.277
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5563333333333333. Total: -0.5563333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6.648000000000001
sent answer: RaiseAction(amount=6.648000000000001)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['2c', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25165562913907286, 'bluff_count': 49, 'total_actions': 302, 'raise_count': 76}
Strategy for state (0, ('2c', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.5429999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.057
Regret updated for <class 'skeleton.actions.CallAction'>: -0.693. Total: -0.693
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['6d', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2508250825082508, 'bluff_count': 49, 'total_actions': 303, 'raise_count': 76}
Strategy for state (0, ('6d', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.5125
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5125. Total: -0.5125
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['6d', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 49, 'total_actions': 304, 'raise_count': 76}
Strategy for state (0, ('6d', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5255. Total: -1.0379999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0745. Total: -0.16199999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6755. Total: -1.188
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['4s', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24918032786885247, 'bluff_count': 49, 'total_actions': 305, 'raise_count': 76}
Strategy for state (0, ('4s', '7c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6815. Total: -0.6815
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['As', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24836601307189543, 'bluff_count': 49, 'total_actions': 306, 'raise_count': 76}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -2.7024999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.2975
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5389999999999999. Total: -3.444166666666667
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['4c', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.247557003257329, 'bluff_count': 49, 'total_actions': 307, 'raise_count': 76}
Strategy for state (0, ('4c', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -0.518
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.082
Regret updated for <class 'skeleton.actions.CallAction'>: -0.668. Total: -0.668
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['Jh', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24675324675324675, 'bluff_count': 49, 'total_actions': 308, 'raise_count': 76}
Strategy for state (0, ('Jc', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3565. Total: -0.3565
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2435. Total: -0.2435
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3565. Total: -0.3565
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24919093851132687, 'bluff_count': 49, 'total_actions': 309, 'raise_count': 77}
Strategy for state (0, ('Jc', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.371. Total: -0.7275
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.229. Total: -0.47250000000000003
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6043333333333334. Total: -0.9608333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['Jh', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25161290322580643, 'bluff_count': 49, 'total_actions': 310, 'raise_count': 78}
Strategy for state (0, ('Jc', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34299999999999997. Total: -1.0705
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.257. Total: -0.7295
Regret updated for <class 'skeleton.actions.CallAction'>: -0.643. Total: -1.6038333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jh', 'Jc'], Board Cards=['Js', 'Th', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.2540192926045016, 'bluff_count': 49, 'total_actions': 311, 'raise_count': 79}
Strategy for state (3, ('Jc', 'Jh'), ('Js', 'Th', '2h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -1.0. Total: -1.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.4. Total: 0.4
Regret updated for <class 'skeleton.actions.FoldAction'>: -1.0. Total: -1.0
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['7d', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2532051282051282, 'bluff_count': 49, 'total_actions': 312, 'raise_count': 79}
Strategy for state (0, ('5c', '7d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.0955
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5045. Total: -0.5045
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7d', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25559105431309903, 'bluff_count': 50, 'total_actions': 313, 'raise_count': 80}
Strategy for state (0, ('5c', '7d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -1.007
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.193
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7358333333333333. Total: -1.2403333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['Qc', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25477707006369427, 'bluff_count': 50, 'total_actions': 314, 'raise_count': 80}
Strategy for state (0, ('Ac', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6615. Total: -0.6615
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['3d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25396825396825395, 'bluff_count': 50, 'total_actions': 315, 'raise_count': 80}
Strategy for state (0, ('3d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -2.0759999999999996
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.324
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -2.0759999999999996
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['Jc', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25316455696202533, 'bluff_count': 50, 'total_actions': 316, 'raise_count': 80}
Strategy for state (0, ('Jc', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.5235
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.0765
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6735. Total: -0.6735
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jc', 'Qh'], Board Cards=['3h', 'Qd', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.25236593059936907, 'bluff_count': 50, 'total_actions': 317, 'raise_count': 80}
Strategy for state (3, ('Jc', 'Qh'), ('3h', 'Qd', '7d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.026. Total: -0.026
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -0.574
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.026
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Jc', 'Qh'], Board Cards=['3h', 'Qd', '7d', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.25157232704402516, 'bluff_count': 50, 'total_actions': 318, 'raise_count': 80}
Strategy for state (4, ('Jc', 'Qh'), ('3h', 'Qd', '7d', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.732. Total: -0.732
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.132. Total: 0.132
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.732. Total: -0.732
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['9h', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2507836990595611, 'bluff_count': 50, 'total_actions': 319, 'raise_count': 80}
Strategy for state (0, ('9h', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.526. Total: -0.526
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.074. Total: -0.074
Regret updated for <class 'skeleton.actions.CallAction'>: -0.526. Total: -0.526
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9h', 'Js'], Board Cards=['Th', '8s', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 50, 'total_actions': 320, 'raise_count': 80}
Strategy for state (3, ('9h', 'Js'), ('Th', '8s', '2c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.243. Total: -0.243
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.357. Total: -0.357
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.243. Total: -0.243
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['9h', 'Js'], Board Cards=['Th', '8s', '2c', 'Jh']
Opponent tendencies updated: {'aggression_frequency': 0.24922118380062305, 'bluff_count': 50, 'total_actions': 321, 'raise_count': 80}
Strategy for state (4, ('9h', 'Js'), ('Th', '8s', '2c', 'Jh')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7945. Total: -0.7945
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.1945. Total: 0.1945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7945. Total: -0.7945
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['Th', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2484472049689441, 'bluff_count': 50, 'total_actions': 322, 'raise_count': 80}
Strategy for state (0, ('Kd', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -1.069
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.131
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5395. Total: -1.2189999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Th', 'Kd'], Board Cards=['9c', 'Qs', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.25077399380804954, 'bluff_count': 50, 'total_actions': 323, 'raise_count': 81}
Strategy for state (3, ('Kd', 'Th'), ('9c', 'Qs', '5c')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.485. Total: -0.485
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.115. Total: -0.115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7183333333333334. Total: -0.7183333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Th', 'Kd'], Board Cards=['9c', 'Qs', '5c', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.25308641975308643, 'bluff_count': 50, 'total_actions': 324, 'raise_count': 82}
Strategy for state (4, ('Kd', 'Th'), ('9c', 'Qs', '5c', '6d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.414. Total: -0.414
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.186. Total: -0.186
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7028888888888889. Total: -0.7028888888888889
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['2h', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2523076923076923, 'bluff_count': 50, 'total_actions': 325, 'raise_count': 82}
Strategy for state (0, ('2h', '5c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -1.5870000000000002
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.21300000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.525. Total: -0.525
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['6d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25153374233128833, 'bluff_count': 51, 'total_actions': 326, 'raise_count': 82}
Strategy for state (0, ('6d', '6s'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.245. Total: -0.245
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.355. Total: -0.355
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.245. Total: -0.245
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6d', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25382262996941896, 'bluff_count': 51, 'total_actions': 327, 'raise_count': 83}
Strategy for state (0, ('6d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3555. Total: -0.7104999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2445. Total: -0.4895
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5888333333333333. Total: -0.5888333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', '6s'], Board Cards=['Ts', 'Qs', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.25609756097560976, 'bluff_count': 51, 'total_actions': 328, 'raise_count': 84}
Strategy for state (3, ('6d', '6s'), ('Ts', 'Qs', 'Th')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.179. Total: -0.179
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.421. Total: -0.421
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.179. Total: -0.179
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 5.1552
sent answer: RaiseAction(amount=5.1552)
Round State: Street=3, My Cards=['6d', '6s'], Board Cards=['Ts', 'Qs', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.25835866261398177, 'bluff_count': 51, 'total_actions': 329, 'raise_count': 85}
Strategy for state (3, ('6d', '6s'), ('Ts', 'Qs', 'Th')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4525. Total: -0.8734999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1475. Total: -0.3265
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7835344827586207. Total: -0.7835344827586207
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['6d', '6s'], Board Cards=['Ts', 'Qs', 'Th', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.2606060606060606, 'bluff_count': 51, 'total_actions': 330, 'raise_count': 86}
Strategy for state (4, ('6d', '6s'), ('Ts', 'Qs', 'Th', '7h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.667. Total: -0.667
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.06700000000000006. Total: 0.06700000000000006
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.667. Total: -0.667
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 48.0
sent answer: RaiseAction(amount=48.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['2c', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2598187311178248, 'bluff_count': 51, 'total_actions': 331, 'raise_count': 86}
Strategy for state (0, ('2c', '8c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -0.5095
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.0905
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5095. Total: -0.5095
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2c', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2620481927710843, 'bluff_count': 51, 'total_actions': 332, 'raise_count': 87}
Strategy for state (0, ('2c', '8c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -1.0379999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.16199999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7618333333333334. Total: -1.2713333333333332
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2c', '8c'], Board Cards=['8s', 'Ks', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.26426426426426425, 'bluff_count': 51, 'total_actions': 333, 'raise_count': 88}
Strategy for state (3, ('2c', '8c'), ('8s', 'Ks', '6c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['8h', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2634730538922156, 'bluff_count': 51, 'total_actions': 334, 'raise_count': 88}
Strategy for state (0, ('5d', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -0.521
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.079
Regret updated for <class 'skeleton.actions.CallAction'>: -0.521. Total: -0.521
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8h', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2656716417910448, 'bluff_count': 52, 'total_actions': 335, 'raise_count': 89}
Strategy for state (0, ('5d', '8h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -1.042
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.158
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7543333333333334. Total: -1.2753333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: T
Round State: Street=0, My Cards=['Th', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2648809523809524, 'bluff_count': 52, 'total_actions': 336, 'raise_count': 89}
Strategy for state (0, ('5s', 'Th'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0705. Total: -0.0705
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -0.5295
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.0705
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Js', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26409495548961426, 'bluff_count': 52, 'total_actions': 337, 'raise_count': 89}
Strategy for state (0, ('4s', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.5125
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5125. Total: -0.5125
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['8d', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26331360946745563, 'bluff_count': 52, 'total_actions': 338, 'raise_count': 89}
Strategy for state (0, ('8d', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6525. Total: -0.6525
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Jd', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26253687315634217, 'bluff_count': 52, 'total_actions': 339, 'raise_count': 89}
Strategy for state (0, ('2d', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Jd', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26176470588235295, 'bluff_count': 52, 'total_actions': 340, 'raise_count': 89}
Strategy for state (0, ('2d', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -1.044
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.156
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6745. Total: -1.194
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jd', '2d'], Board Cards=['3h', 'Jc', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.26392961876832843, 'bluff_count': 52, 'total_actions': 341, 'raise_count': 90}
Strategy for state (3, ('2d', 'Jd'), ('3h', 'Jc', '4d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.498. Total: -0.498
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.102. Total: -0.102
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7313333333333334. Total: -0.7313333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['8h', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 53, 'total_actions': 342, 'raise_count': 90}
Strategy for state (0, ('8h', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6859999999999999. Total: -0.6859999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['2c', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26239067055393583, 'bluff_count': 53, 'total_actions': 343, 'raise_count': 90}
Strategy for state (0, ('2c', 'Ah'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5425. Total: -0.5425
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['9h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2616279069767442, 'bluff_count': 53, 'total_actions': 344, 'raise_count': 90}
Strategy for state (0, ('9d', '9h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2685. Total: -0.2685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33149999999999996. Total: -0.33149999999999996
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2685. Total: -0.2685
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['9h', '9d'], Board Cards=['Tc', '3h', '5h']
Opponent tendencies updated: {'aggression_frequency': 0.2608695652173913, 'bluff_count': 53, 'total_actions': 345, 'raise_count': 90}
Strategy for state (3, ('9d', '9h'), ('Tc', '3h', '5h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.137. Total: -0.137
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46299999999999997. Total: -0.46299999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.137. Total: -0.137
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Td', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26011560693641617, 'bluff_count': 53, 'total_actions': 346, 'raise_count': 90}
Strategy for state (0, ('9c', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.495. Total: -0.495
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.105. Total: -0.105
Regret updated for <class 'skeleton.actions.CallAction'>: -0.495. Total: -0.495
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Ad', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25936599423631124, 'bluff_count': 53, 'total_actions': 347, 'raise_count': 90}
Strategy for state (0, ('3d', 'Ad'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.115. Total: -0.115
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.485. Total: -0.485
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.115. Total: -0.115
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['8d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25862068965517243, 'bluff_count': 53, 'total_actions': 348, 'raise_count': 90}
Strategy for state (0, ('8d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -0.5185
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.0815
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5185. Total: -0.5185
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2607449856733524, 'bluff_count': 54, 'total_actions': 349, 'raise_count': 91}
Strategy for state (0, ('8d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -1.0335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.1665
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7483333333333334. Total: -1.2668333333333335
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['5h', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26, 'bluff_count': 54, 'total_actions': 350, 'raise_count': 91}
Strategy for state (0, ('5h', 'Jh'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['4c', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25925925925925924, 'bluff_count': 55, 'total_actions': 351, 'raise_count': 91}
Strategy for state (0, ('3s', '4c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -0.5295
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.0705
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5295. Total: -0.5295
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['8c', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2585227272727273, 'bluff_count': 56, 'total_actions': 352, 'raise_count': 91}
Strategy for state (0, ('8c', 'Ac'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.072. Total: -0.072
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.072
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['8c', 'Ac'], Board Cards=['Kh', 'Ts', '8h']
Opponent tendencies updated: {'aggression_frequency': 0.2577903682719547, 'bluff_count': 56, 'total_actions': 353, 'raise_count': 91}
Strategy for state (3, ('8c', 'Ac'), ('Kh', 'Ts', '8h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.568. Total: -0.568
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.032. Total: -0.032
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['8c', 'Ac'], Board Cards=['Kh', 'Ts', '8h']
Opponent tendencies updated: {'aggression_frequency': 0.2598870056497175, 'bluff_count': 56, 'total_actions': 354, 'raise_count': 92}
Strategy for state (3, ('8c', 'Ac'), ('Kh', 'Ts', '8h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5569999999999999. Total: -1.125
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.043. Total: -0.075
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7903333333333333. Total: -0.7903333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['8c', 'Ac'], Board Cards=['Kh', 'Ts', '8h', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2619718309859155, 'bluff_count': 56, 'total_actions': 355, 'raise_count': 93}
Strategy for state (4, ('8c', 'Ac'), ('Kh', 'Ts', '8h', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.751. Total: -0.751
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15100000000000002. Total: 0.15100000000000002
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.751. Total: -0.751
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['8c', 'Ac'], Board Cards=['Kh', 'Ts', '8h', 'Kc', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.2640449438202247, 'bluff_count': 56, 'total_actions': 356, 'raise_count': 94}
Strategy for state (5, ('8c', 'Ac'), ('Kh', 'Ts', '8h', 'Kc', '9s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.597. Total: -0.597
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.0030000000000000027. Total: -0.0030000000000000027
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.597. Total: -0.597
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Kc', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26330532212885155, 'bluff_count': 56, 'total_actions': 357, 'raise_count': 94}
Strategy for state (0, ('4c', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.CallAction'>: -0.514. Total: -0.514
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kc', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26536312849162014, 'bluff_count': 56, 'total_actions': 358, 'raise_count': 95}
Strategy for state (0, ('4c', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5165. Total: -1.0305
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0835. Total: -0.16949999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7498333333333334. Total: -1.2638333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['3c', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2646239554317549, 'bluff_count': 56, 'total_actions': 359, 'raise_count': 95}
Strategy for state (0, ('3c', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5349999999999999. Total: -0.5349999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['3c', 'Qs'], Board Cards=['7c', '6c', '6s']
Opponent tendencies updated: {'aggression_frequency': 0.26666666666666666, 'bluff_count': 57, 'total_actions': 360, 'raise_count': 96}
Strategy for state (3, ('3c', 'Qs'), ('7c', '6c', '6s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5775. Total: -0.5775
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0225. Total: -0.0225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8108333333333334. Total: -0.8108333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Qc', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2659279778393352, 'bluff_count': 58, 'total_actions': 361, 'raise_count': 96}
Strategy for state (0, ('Ac', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -1.0299999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.16999999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6685. Total: -1.33
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qc', 'Ac'], Board Cards=['Ad', 'Kc', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.26519337016574585, 'bluff_count': 58, 'total_actions': 362, 'raise_count': 96}
Strategy for state (3, ('Ac', 'Qc'), ('Ad', 'Kc', 'Th')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.186. Total: -0.186
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.414. Total: -0.414
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.186. Total: -0.186
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 3.5711999999999997
sent answer: RaiseAction(amount=3.5711999999999997)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Jh', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2644628099173554, 'bluff_count': 59, 'total_actions': 363, 'raise_count': 96}
Strategy for state (0, ('2d', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.0545
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5455. Total: -0.5455
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Ac', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26373626373626374, 'bluff_count': 59, 'total_actions': 364, 'raise_count': 96}
Strategy for state (0, ('3d', 'Ac'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.685. Total: -0.685
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ac', '3d'], Board Cards=['Jh', 'Ah', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.26301369863013696, 'bluff_count': 59, 'total_actions': 365, 'raise_count': 96}
Strategy for state (3, ('3d', 'Ac'), ('Jh', 'Ah', '9d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.026. Total: -0.026
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -0.574
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.026
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['As', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26229508196721313, 'bluff_count': 60, 'total_actions': 366, 'raise_count': 96}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5525. Total: -3.255
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0475. Total: -0.345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5525. Total: -3.996666666666667
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['As', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2615803814713896, 'bluff_count': 61, 'total_actions': 367, 'raise_count': 96}
Strategy for state (0, ('9d', 'As'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5515. Total: -3.8064999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0485. Total: -0.39349999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7015. Total: -4.698166666666667
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Ad', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2608695652173913, 'bluff_count': 61, 'total_actions': 368, 'raise_count': 96}
Strategy for state (0, ('5c', 'Ad'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0655. Total: -0.0655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.5345
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.0655
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ad', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26287262872628725, 'bluff_count': 61, 'total_actions': 369, 'raise_count': 97}
Strategy for state (0, ('5c', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -1.0594999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.1405
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7583333333333334. Total: -0.7583333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['Ad', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2648648648648649, 'bluff_count': 61, 'total_actions': 370, 'raise_count': 98}
Strategy for state (0, ('5c', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -1.5979999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.202
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8385. Total: -1.5968333333333335
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ad', '5c'], Board Cards=['5h', '9d', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.2668463611859838, 'bluff_count': 61, 'total_actions': 371, 'raise_count': 99}
Strategy for state (3, ('5c', 'Ad'), ('5h', '9d', 'Ts')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.021. Total: -0.021
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.579. Total: -0.579
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.021. Total: -0.021
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Ks', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2661290322580645, 'bluff_count': 61, 'total_actions': 372, 'raise_count': 99}
Strategy for state (0, ('9d', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['5d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26541554959785524, 'bluff_count': 61, 'total_actions': 373, 'raise_count': 99}
Strategy for state (0, ('5d', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5075. Total: -1.02
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0925. Total: -0.18
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5075. Total: -1.02
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['5d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26737967914438504, 'bluff_count': 62, 'total_actions': 374, 'raise_count': 100}
Strategy for state (0, ('5d', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -1.538
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.262
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7513333333333334. Total: -1.7713333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['2h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26666666666666666, 'bluff_count': 63, 'total_actions': 375, 'raise_count': 100}
Strategy for state (0, ('2h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.0545
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5455. Total: -0.5455
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['2h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26595744680851063, 'bluff_count': 63, 'total_actions': 376, 'raise_count': 100}
Strategy for state (0, ('2h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -1.0964999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.10350000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.701. Total: -1.2465
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2h', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26790450928381965, 'bluff_count': 63, 'total_actions': 377, 'raise_count': 101}
Strategy for state (0, ('2h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -1.6329999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.167
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8115. Total: -2.058
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['2h', '9d'], Board Cards=['7s', '6h', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.2698412698412698, 'bluff_count': 63, 'total_actions': 378, 'raise_count': 102}
Strategy for state (3, ('2h', '9d'), ('7s', '6h', '2s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0415. Total: -0.0415
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5585. Total: -0.5585
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0415. Total: -0.0415
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ts', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2691292875989446, 'bluff_count': 63, 'total_actions': 379, 'raise_count': 102}
Strategy for state (0, ('Kh', 'Ts'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5135. Total: -0.5135
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0865. Total: -0.0865
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6635. Total: -0.6635
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Kh', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26842105263157895, 'bluff_count': 63, 'total_actions': 380, 'raise_count': 102}
Strategy for state (0, ('7d', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -0.538
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kh', '7d'], Board Cards=['Ah', '3c', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.2677165354330709, 'bluff_count': 63, 'total_actions': 381, 'raise_count': 102}
Strategy for state (3, ('7d', 'Kh'), ('Ah', '3c', '2s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5895. Total: -0.5895
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0105. Total: -0.0105
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7395. Total: -0.7395
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Kh', '7d'], Board Cards=['Ah', '3c', '2s', 'Qs']
Opponent tendencies updated: {'aggression_frequency': 0.2696335078534031, 'bluff_count': 63, 'total_actions': 382, 'raise_count': 103}
Strategy for state (4, ('7d', 'Kh'), ('Ah', '3c', '2s', 'Qs')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.096
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7373333333333334. Total: -0.7373333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qh', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2689295039164491, 'bluff_count': 63, 'total_actions': 383, 'raise_count': 103}
Strategy for state (0, ('2d', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.CallAction'>: -0.692. Total: -0.692
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qh', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2682291666666667, 'bluff_count': 63, 'total_actions': 384, 'raise_count': 103}
Strategy for state (0, ('8h', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Regret updated for <class 'skeleton.actions.CallAction'>: -0.506. Total: -0.506
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['As', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2675324675324675, 'bluff_count': 63, 'total_actions': 385, 'raise_count': 103}
Strategy for state (0, ('4h', 'As'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.063. Total: -0.063
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.063. Total: -0.063
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qc', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.266839378238342, 'bluff_count': 63, 'total_actions': 386, 'raise_count': 103}
Strategy for state (0, ('Ad', 'Qc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -1.5945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.20550000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -1.5945
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3s', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2661498708010336, 'bluff_count': 63, 'total_actions': 387, 'raise_count': 103}
Strategy for state (0, ('3h', '3s'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.235. Total: -0.235
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.365. Total: -0.365
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.235. Total: -0.235
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3s', '3h'], Board Cards=['6h', '4d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.2654639175257732, 'bluff_count': 63, 'total_actions': 388, 'raise_count': 103}
Strategy for state (3, ('3h', '3s'), ('6h', '4d', '7s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.203. Total: -0.203
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.39699999999999996. Total: -0.39699999999999996
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.203. Total: -0.203
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2h', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2647814910025707, 'bluff_count': 64, 'total_actions': 389, 'raise_count': 103}
Strategy for state (0, ('2h', '4h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -0.521
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.079
Regret updated for <class 'skeleton.actions.CallAction'>: -0.521. Total: -0.521
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6s', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2641025641025641, 'bluff_count': 65, 'total_actions': 390, 'raise_count': 103}
Strategy for state (0, ('6s', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -0.5499999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.05
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7. Total: -0.7
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['6s', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2659846547314578, 'bluff_count': 65, 'total_actions': 391, 'raise_count': 104}
Strategy for state (0, ('6s', 'Ad'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5445. Total: -1.0945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0555. Total: -0.10550000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8195. Total: -1.5194999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jh', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2653061224489796, 'bluff_count': 65, 'total_actions': 392, 'raise_count': 104}
Strategy for state (0, ('Jh', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26717557251908397, 'bluff_count': 65, 'total_actions': 393, 'raise_count': 105}
Strategy for state (0, ('Jh', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -1.061
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.139
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7718333333333334. Total: -1.2943333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ts', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26649746192893403, 'bluff_count': 65, 'total_actions': 394, 'raise_count': 105}
Strategy for state (0, ('7s', 'Ts'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.102. Total: -0.102
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.498. Total: -0.498
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.102. Total: -0.102
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ts', '7s'], Board Cards=['Ad', 'Kc', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.26582278481012656, 'bluff_count': 65, 'total_actions': 395, 'raise_count': 105}
Strategy for state (3, ('7s', 'Ts'), ('Ad', 'Kc', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0185. Total: -0.0185
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5815. Total: -0.5815
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0185. Total: -0.0185
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9s', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26515151515151514, 'bluff_count': 65, 'total_actions': 396, 'raise_count': 105}
Strategy for state (0, ('8d', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4905. Total: -0.4905
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1095. Total: -0.1095
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4905. Total: -0.4905
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['5d', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26448362720403024, 'bluff_count': 65, 'total_actions': 397, 'raise_count': 105}
Strategy for state (0, ('5d', '8h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -1.5545
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.2455
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['5d', '8h'], Board Cards=['Js', 'Kh', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.2638190954773869, 'bluff_count': 65, 'total_actions': 398, 'raise_count': 105}
Strategy for state (3, ('5d', '8h'), ('Js', 'Kh', '5c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.03. Total: -0.03
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.57. Total: -0.57
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.03. Total: -0.03
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6s', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 66, 'total_actions': 399, 'raise_count': 105}
Strategy for state (0, ('6s', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['6s', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2625, 'bluff_count': 66, 'total_actions': 400, 'raise_count': 105}
Strategy for state (0, ('6s', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5255. Total: -1.0539999999999998
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0745. Total: -0.146
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6755. Total: -1.204
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Kc', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26184538653366585, 'bluff_count': 66, 'total_actions': 401, 'raise_count': 105}
Strategy for state (0, ('6h', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qd', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26119402985074625, 'bluff_count': 66, 'total_actions': 402, 'raise_count': 105}
Strategy for state (0, ('8s', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.685. Total: -0.685
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Kd', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26054590570719605, 'bluff_count': 66, 'total_actions': 403, 'raise_count': 105}
Strategy for state (0, ('9h', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5435. Total: -0.5435
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2599009900990099, 'bluff_count': 66, 'total_actions': 404, 'raise_count': 105}
Strategy for state (0, ('3d', 'Td'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.07. Total: -0.07
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.07
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6s', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25925925925925924, 'bluff_count': 67, 'total_actions': 405, 'raise_count': 105}
Strategy for state (0, ('4c', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.517
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.083
Regret updated for <class 'skeleton.actions.CallAction'>: -0.517. Total: -0.517
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2s', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25862068965517243, 'bluff_count': 67, 'total_actions': 406, 'raise_count': 105}
Strategy for state (0, ('2s', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5485. Total: -0.5485
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0515. Total: -0.0515
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5485. Total: -0.5485
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['2s', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.257985257985258, 'bluff_count': 67, 'total_actions': 407, 'raise_count': 105}
Strategy for state (0, ('2s', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5595. Total: -1.108
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0405. Total: -0.092
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7095. Total: -1.258
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jd', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25735294117647056, 'bluff_count': 67, 'total_actions': 408, 'raise_count': 105}
Strategy for state (0, ('7h', 'Jd'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jd', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2591687041564792, 'bluff_count': 67, 'total_actions': 409, 'raise_count': 106}
Strategy for state (0, ('7h', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5145. Total: -1.036
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0855. Total: -0.164
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7478333333333333. Total: -0.7478333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['Jd', '7h'], Board Cards=['9d', '7s', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.26097560975609757, 'bluff_count': 67, 'total_actions': 410, 'raise_count': 107}
Strategy for state (3, ('7h', 'Jd'), ('9d', '7s', 'Ts')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1645. Total: -0.1645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4355. Total: -0.4355
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1645. Total: -0.1645
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Jd', '7h'], Board Cards=['9d', '7s', 'Ts', 'Tc']
Opponent tendencies updated: {'aggression_frequency': 0.26277372262773724, 'bluff_count': 67, 'total_actions': 411, 'raise_count': 108}
Strategy for state (4, ('7h', 'Jd'), ('9d', '7s', 'Ts', 'Tc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.727. Total: -0.727
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.127. Total: 0.127
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.727. Total: -0.727
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['Jd', '7h'], Board Cards=['9d', '7s', 'Ts', 'Tc', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2645631067961165, 'bluff_count': 67, 'total_actions': 412, 'raise_count': 109}
Strategy for state (5, ('7h', 'Jd'), ('9d', '7s', 'Ts', 'Tc', 'Kc')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.593. Total: -0.593
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.007000000000000006. Total: -0.007000000000000006
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.593. Total: -0.593
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 22.771199999999997
sent answer: RaiseAction(amount=22.771199999999997)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Js', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2639225181598063, 'bluff_count': 67, 'total_actions': 413, 'raise_count': 109}
Strategy for state (0, ('9s', 'Js'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4855. Total: -0.4855
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1145. Total: -0.1145
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4855. Total: -0.4855
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9s', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2632850241545894, 'bluff_count': 67, 'total_actions': 414, 'raise_count': 109}
Strategy for state (0, ('8c', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.492. Total: -0.492
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.108. Total: -0.108
Regret updated for <class 'skeleton.actions.CallAction'>: -0.642. Total: -0.642
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['9s', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26506024096385544, 'bluff_count': 68, 'total_actions': 415, 'raise_count': 110}
Strategy for state (0, ('8c', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49. Total: -0.982
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.11. Total: -0.218
Regret updated for <class 'skeleton.actions.CallAction'>: -0.765. Total: -1.407
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9s', '8c'], Board Cards=['Ac', '5d', '5h']
Opponent tendencies updated: {'aggression_frequency': 0.2668269230769231, 'bluff_count': 68, 'total_actions': 416, 'raise_count': 111}
Strategy for state (3, ('8c', '9s'), ('Ac', '5d', '5h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0255. Total: -0.0255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5745. Total: -0.5745
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0255. Total: -0.0255
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['5s', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26618705035971224, 'bluff_count': 69, 'total_actions': 417, 'raise_count': 111}
Strategy for state (0, ('3s', '5s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.485. Total: -0.485
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.115. Total: -0.115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.485. Total: -0.485
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['5s', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2679425837320574, 'bluff_count': 70, 'total_actions': 418, 'raise_count': 112}
Strategy for state (0, ('3s', '5s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.486. Total: -0.971
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.114. Total: -0.229
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7193333333333334. Total: -1.2043333333333335
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5s', '3s'], Board Cards=['8s', '5d', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.26968973747016706, 'bluff_count': 70, 'total_actions': 419, 'raise_count': 113}
Strategy for state (3, ('3s', '5s'), ('8s', '5d', '9d')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.CallAction'>: -0.802. Total: -0.802
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['7h', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26904761904761904, 'bluff_count': 70, 'total_actions': 420, 'raise_count': 113}
Strategy for state (0, ('3d', '7h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.CallAction'>: -0.672. Total: -0.672
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['7h', '3d'], Board Cards=['7c', '9c', '8h']
Opponent tendencies updated: {'aggression_frequency': 0.27078384798099764, 'bluff_count': 70, 'total_actions': 421, 'raise_count': 114}
Strategy for state (3, ('3d', '7h'), ('7c', '9c', '8h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.04. Total: -0.04
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -0.5599999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.04
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['7h', '3d'], Board Cards=['7c', '9c', '8h']
Opponent tendencies updated: {'aggression_frequency': 0.2725118483412322, 'bluff_count': 70, 'total_actions': 422, 'raise_count': 115}
Strategy for state (3, ('3d', '7h'), ('7c', '9c', '8h')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -1.1059999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.094
Regret updated for <class 'skeleton.actions.CallAction'>: -0.846. Total: -0.846
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['7h', '3d'], Board Cards=['7c', '9c', '8h', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.27423167848699764, 'bluff_count': 70, 'total_actions': 423, 'raise_count': 116}
Strategy for state (4, ('3d', '7h'), ('7c', '9c', '8h', 'Ks')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.683. Total: -0.683
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.08300000000000007. Total: 0.08300000000000007
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.683. Total: -0.683
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 30.0
sent answer: RaiseAction(amount=30.0)
Round State: Street=5, My Cards=['7h', '3d'], Board Cards=['7c', '9c', '8h', 'Ks', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.2759433962264151, 'bluff_count': 70, 'total_actions': 424, 'raise_count': 117}
Strategy for state (5, ('3d', '7h'), ('7c', '9c', '8h', 'Ks', '3c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.8255. Total: -0.8255
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.22550000000000003. Total: 0.22550000000000003
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.8255. Total: -0.8255
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['6c', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2752941176470588, 'bluff_count': 71, 'total_actions': 425, 'raise_count': 117}
Strategy for state (0, ('5h', '6c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5135. Total: -0.5135
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0865. Total: -0.0865
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5135. Total: -0.5135
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['9d', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2746478873239437, 'bluff_count': 71, 'total_actions': 426, 'raise_count': 117}
Strategy for state (0, ('7h', '9d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.503. Total: -0.503
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.097. Total: -0.097
Regret updated for <class 'skeleton.actions.CallAction'>: -0.503. Total: -0.503
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['5h', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27400468384074944, 'bluff_count': 71, 'total_actions': 427, 'raise_count': 117}
Strategy for state (0, ('5h', 'Ah'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0835. Total: -0.0835
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5165. Total: -0.5165
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0835. Total: -0.0835
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['6d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2733644859813084, 'bluff_count': 71, 'total_actions': 428, 'raise_count': 117}
Strategy for state (0, ('6d', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -0.5155
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.0845
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5155. Total: -0.5155
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27505827505827507, 'bluff_count': 71, 'total_actions': 429, 'raise_count': 118}
Strategy for state (0, ('6d', 'Tc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -1.045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.155
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7628333333333334. Total: -1.2783333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Js', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2744186046511628, 'bluff_count': 71, 'total_actions': 430, 'raise_count': 118}
Strategy for state (0, ('9h', 'Js'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0905. Total: -0.0905
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -1.0354999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.16449999999999998
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Js', '9h'], Board Cards=['Qd', '3s', '7c']
Opponent tendencies updated: {'aggression_frequency': 0.2737819025522042, 'bluff_count': 71, 'total_actions': 431, 'raise_count': 118}
Strategy for state (3, ('9h', 'Js'), ('Qd', '3s', '7c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.031. Total: -0.031
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.569. Total: -0.569
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.031. Total: -0.031
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['4h', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27314814814814814, 'bluff_count': 71, 'total_actions': 432, 'raise_count': 118}
Strategy for state (0, ('4h', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.499. Total: -0.499
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.101. Total: -0.101
Regret updated for <class 'skeleton.actions.CallAction'>: -0.499. Total: -0.499
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['4c', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27251732101616627, 'bluff_count': 72, 'total_actions': 433, 'raise_count': 118}
Strategy for state (0, ('2s', '4c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5315. Total: -0.5315
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['7c', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.271889400921659, 'bluff_count': 72, 'total_actions': 434, 'raise_count': 118}
Strategy for state (0, ('3h', '7c'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0525. Total: -0.0525
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5475. Total: -1.0855000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0525. Total: -0.11449999999999999
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Jh', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.271264367816092, 'bluff_count': 72, 'total_actions': 435, 'raise_count': 118}
Strategy for state (0, ('6s', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -1.586
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.21400000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5309999999999999. Total: -1.736
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ac', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2706422018348624, 'bluff_count': 72, 'total_actions': 436, 'raise_count': 118}
Strategy for state (0, ('Ac', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['8s', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2700228832951945, 'bluff_count': 72, 'total_actions': 437, 'raise_count': 118}
Strategy for state (0, ('7s', '8s'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1135. Total: -0.1135
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4865. Total: -0.4865
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1135. Total: -0.1135
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['8s', '7s'], Board Cards=['Td', '3s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.2694063926940639, 'bluff_count': 72, 'total_actions': 438, 'raise_count': 118}
Strategy for state (3, ('7s', '8s'), ('Td', '3s', '5d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['8s', '7s'], Board Cards=['Td', '3s', '5d', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.27107061503416857, 'bluff_count': 72, 'total_actions': 439, 'raise_count': 119}
Strategy for state (4, ('7s', '8s'), ('Td', '3s', '5d', '4s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.349. Total: -0.349
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.251. Total: -0.251
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.349. Total: -0.349
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Kd', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27045454545454545, 'bluff_count': 72, 'total_actions': 440, 'raise_count': 119}
Strategy for state (0, ('6h', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -0.5409999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['2h', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2698412698412698, 'bluff_count': 72, 'total_actions': 441, 'raise_count': 119}
Strategy for state (0, ('2h', 'Qd'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['2h', 'Qd'], Board Cards=['Jc', '9d', 'Ad']
Opponent tendencies updated: {'aggression_frequency': 0.2692307692307692, 'bluff_count': 72, 'total_actions': 442, 'raise_count': 119}
Strategy for state (3, ('2h', 'Qd'), ('Jc', '9d', 'Ad')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.07. Total: -0.07
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.07
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['3c', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2686230248306998, 'bluff_count': 72, 'total_actions': 443, 'raise_count': 119}
Strategy for state (0, ('3c', '4c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4865. Total: -0.4865
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1135. Total: -0.1135
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4865. Total: -0.4865
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['4h', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.268018018018018, 'bluff_count': 73, 'total_actions': 444, 'raise_count': 119}
Strategy for state (0, ('4h', '6h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4935. Total: -0.4935
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1065. Total: -0.1065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4935. Total: -0.4935
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Qs', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26741573033707866, 'bluff_count': 74, 'total_actions': 445, 'raise_count': 119}
Strategy for state (0, ('2s', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6765. Total: -0.6765
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['8d', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26681614349775784, 'bluff_count': 75, 'total_actions': 446, 'raise_count': 119}
Strategy for state (0, ('8d', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['8d', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2662192393736018, 'bluff_count': 76, 'total_actions': 447, 'raise_count': 119}
Strategy for state (0, ('8d', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4955. Total: -1.001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1045. Total: -0.199
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6455. Total: -1.1509999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['7h', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.265625, 'bluff_count': 76, 'total_actions': 448, 'raise_count': 119}
Strategy for state (0, ('6c', '7h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -0.5155
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.0845
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5155. Total: -0.5155
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Kh', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2650334075723831, 'bluff_count': 76, 'total_actions': 449, 'raise_count': 119}
Strategy for state (0, ('Jc', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.CallAction'>: -0.524. Total: -0.524
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kh', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26666666666666666, 'bluff_count': 77, 'total_actions': 450, 'raise_count': 120}
Strategy for state (0, ('Jc', 'Kh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -1.053
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.147
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7623333333333334. Total: -1.2863333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Qd', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2660753880266075, 'bluff_count': 77, 'total_actions': 451, 'raise_count': 120}
Strategy for state (0, ('9s', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qd', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2676991150442478, 'bluff_count': 78, 'total_actions': 452, 'raise_count': 121}
Strategy for state (0, ('9s', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -1.071
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.129
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7713333333333334. Total: -1.3043333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['Qd', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2693156732891832, 'bluff_count': 78, 'total_actions': 453, 'raise_count': 122}
Strategy for state (0, ('9s', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -1.5985
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.2015
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8275. Total: -2.1318333333333332
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12
sent answer: RaiseAction(amount=12)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Ad', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2687224669603524, 'bluff_count': 78, 'total_actions': 454, 'raise_count': 122}
Strategy for state (0, ('6c', 'Ad'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0585. Total: -0.0585
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5415. Total: -0.5415
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0585. Total: -0.0585
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ad', '6c'], Board Cards=['2s', 'Jc', '4h']
Opponent tendencies updated: {'aggression_frequency': 0.2681318681318681, 'bluff_count': 78, 'total_actions': 455, 'raise_count': 122}
Strategy for state (3, ('6c', 'Ad'), ('2s', 'Jc', '4h')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.014. Total: -0.014
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.586. Total: -0.586
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.014. Total: -0.014
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Jc', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2675438596491228, 'bluff_count': 78, 'total_actions': 456, 'raise_count': 122}
Strategy for state (0, ('Jc', 'Jd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33949999999999997. Total: -0.33949999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2605. Total: -0.2605
Regret updated for <class 'skeleton.actions.CallAction'>: -0.33949999999999997. Total: -0.33949999999999997
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jc', 'Jd'], Board Cards=['4s', 'Ac', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.26695842450765866, 'bluff_count': 78, 'total_actions': 457, 'raise_count': 122}
Strategy for state (3, ('Jc', 'Jd'), ('4s', 'Ac', 'Js')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.4. Total: 0.4
Regret updated for <class 'skeleton.actions.FoldAction'>: -1.0. Total: -1.0
Regret updated for <class 'skeleton.actions.CallAction'>: 0.25. Total: 0.25
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 9.0
sent answer: RaiseAction(amount=9.0)
Round State: Street=3, My Cards=['Jc', 'Jd'], Board Cards=['4s', 'Ac', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.2685589519650655, 'bluff_count': 78, 'total_actions': 458, 'raise_count': 123}
Strategy for state (3, ('Jc', 'Jd'), ('4s', 'Ac', 'Js')): {<class 'skeleton.actions.RaiseAction'>: 0.6153846153846154, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.3846153846153846}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.4. Total: 0.8
Regret updated for <class 'skeleton.actions.FoldAction'>: -1.0. Total: -2.0
Regret updated for <class 'skeleton.actions.CallAction'>: 0.06451612903225812. Total: 0.3145161290322581
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.6153846153846154, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.3846153846153846}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 43.5
sent answer: RaiseAction(amount=43.5)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['6h', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2679738562091503, 'bluff_count': 78, 'total_actions': 459, 'raise_count': 123}
Strategy for state (0, ('2d', '6h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['6s', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2673913043478261, 'bluff_count': 78, 'total_actions': 460, 'raise_count': 123}
Strategy for state (0, ('6s', '8c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4915. Total: -0.4915
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1085. Total: -0.1085
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4915. Total: -0.4915
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Ts', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2668112798264642, 'bluff_count': 78, 'total_actions': 461, 'raise_count': 123}
Strategy for state (0, ('8d', 'Ts'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.09. Total: -0.09
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -1.0125
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.1875
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ts', '8d'], Board Cards=['5s', '4s', '9c']
Opponent tendencies updated: {'aggression_frequency': 0.2662337662337662, 'bluff_count': 78, 'total_actions': 462, 'raise_count': 123}
Strategy for state (3, ('8d', 'Ts'), ('5s', '4s', '9c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.071. Total: -0.071
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.529
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.071
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['6s', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.265658747300216, 'bluff_count': 78, 'total_actions': 463, 'raise_count': 123}
Strategy for state (0, ('5d', '6s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['4d', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2650862068965517, 'bluff_count': 78, 'total_actions': 464, 'raise_count': 123}
Strategy for state (0, ('4d', '9h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -0.534
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['4s', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2645161290322581, 'bluff_count': 78, 'total_actions': 465, 'raise_count': 123}
Strategy for state (0, ('4s', '5d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0885. Total: -0.0885
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['4s', '5d'], Board Cards=['8d', '7h', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.26394849785407726, 'bluff_count': 78, 'total_actions': 466, 'raise_count': 123}
Strategy for state (3, ('4s', '5d'), ('8d', '7h', '3s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.139. Total: -0.139
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46099999999999997. Total: -0.46099999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.139. Total: -0.139
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['4s', '5d'], Board Cards=['8d', '7h', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.26552462526766596, 'bluff_count': 78, 'total_actions': 467, 'raise_count': 124}
Strategy for state (3, ('4s', '5d'), ('8d', '7h', '3s')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.48. Total: -0.941
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.12. Total: -0.259
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7133333333333334. Total: -0.7133333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['4s', '5d'], Board Cards=['8d', '7h', '3s', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.2670940170940171, 'bluff_count': 78, 'total_actions': 468, 'raise_count': 125}
Strategy for state (4, ('4s', '5d'), ('8d', '7h', '3s', '7d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.196. Total: -0.196
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.40399999999999997. Total: -0.40399999999999997
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.196. Total: -0.196
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 5.6448
sent answer: RaiseAction(amount=5.6448)
Round State: Street=5, My Cards=['4s', '5d'], Board Cards=['8d', '7h', '3s', '7d', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.26865671641791045, 'bluff_count': 78, 'total_actions': 469, 'raise_count': 126}
Strategy for state (5, ('4s', '5d'), ('8d', '7h', '3s', '7d', '8c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['5c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2680851063829787, 'bluff_count': 78, 'total_actions': 470, 'raise_count': 126}
Strategy for state (0, ('2c', '5c'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.5125
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5125. Total: -0.5125
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Qh', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.267515923566879, 'bluff_count': 78, 'total_actions': 471, 'raise_count': 126}
Strategy for state (0, ('2h', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['5h', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2669491525423729, 'bluff_count': 78, 'total_actions': 472, 'raise_count': 126}
Strategy for state (0, ('5d', '5h'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.38149999999999995. Total: -0.38149999999999995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2185. Total: -0.2185
Regret updated for <class 'skeleton.actions.CallAction'>: -0.38149999999999995. Total: -0.38149999999999995
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Kd', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.266384778012685, 'bluff_count': 78, 'total_actions': 473, 'raise_count': 126}
Strategy for state (0, ('Jd', 'Kd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4945. Total: -0.4945
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Qs', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26582278481012656, 'bluff_count': 78, 'total_actions': 474, 'raise_count': 126}
Strategy for state (0, ('8d', 'Qs'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Th', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26526315789473687, 'bluff_count': 78, 'total_actions': 475, 'raise_count': 126}
Strategy for state (0, ('9h', 'Th'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1. Total: -0.1
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -0.5
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.1
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Th', '9h'], Board Cards=['Ad', 'Qd', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.2647058823529412, 'bluff_count': 78, 'total_actions': 476, 'raise_count': 126}
Strategy for state (3, ('9h', 'Th'), ('Ad', 'Qd', 'Ks')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1255. Total: -0.1255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4745. Total: -0.4745
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1255. Total: -0.1255
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['6s', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2641509433962264, 'bluff_count': 78, 'total_actions': 477, 'raise_count': 126}
Strategy for state (0, ('6s', 'Jh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -2.124
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.276
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -2.274
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 3
Round State: Street=0, My Cards=['Kc', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26359832635983266, 'bluff_count': 78, 'total_actions': 478, 'raise_count': 126}
Strategy for state (0, ('9d', 'Kc'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5445. Total: -2.1754999999999995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0555. Total: -0.22449999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6945. Total: -2.3255
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8d', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2630480167014614, 'bluff_count': 78, 'total_actions': 479, 'raise_count': 126}
Strategy for state (0, ('2s', '8d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5475. Total: -0.5475
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0525. Total: -0.0525
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5475. Total: -0.5475
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['8d', '2s'], Board Cards=['8c', 'Jd', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.26458333333333334, 'bluff_count': 78, 'total_actions': 480, 'raise_count': 127}
Strategy for state (3, ('2s', '8d'), ('8c', 'Jd', 'Td')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.519
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.081
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7523333333333334. Total: -0.7523333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Kd', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26403326403326405, 'bluff_count': 78, 'total_actions': 481, 'raise_count': 127}
Strategy for state (0, ('7d', 'Kd'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.104. Total: -0.104
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.496. Total: -0.496
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.104. Total: -0.104
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Kd', '7d'], Board Cards=['5s', '8s', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.26348547717842324, 'bluff_count': 78, 'total_actions': 482, 'raise_count': 127}
Strategy for state (3, ('7d', 'Kd'), ('5s', '8s', '9s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1495. Total: -0.1495
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4505. Total: -0.4505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1495. Total: -0.1495
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.8703999999999996
sent answer: RaiseAction(amount=2.8703999999999996)
Round State: Street=4, My Cards=['Kd', '7d'], Board Cards=['5s', '8s', '9s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.2650103519668737, 'bluff_count': 78, 'total_actions': 483, 'raise_count': 128}
Strategy for state (4, ('7d', 'Kd'), ('5s', '8s', '9s', 'Kh')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.684. Total: -0.684
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.08400000000000007. Total: 0.08400000000000007
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.684. Total: -0.684
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 18.0
sent answer: RaiseAction(amount=18.0)
Round State: Street=4, My Cards=['Kd', '7d'], Board Cards=['5s', '8s', '9s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.2665289256198347, 'bluff_count': 78, 'total_actions': 484, 'raise_count': 129}
Strategy for state (4, ('7d', 'Kd'), ('5s', '8s', '9s', 'Kh')): {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.11450000000000005. Total: 0.19850000000000012
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7145. Total: -1.3985
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2560882352941176. Total: -0.2560882352941176
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 99.0
sent answer: RaiseAction(amount=99.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6d', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26597938144329897, 'bluff_count': 78, 'total_actions': 485, 'raise_count': 129}
Strategy for state (0, ('3h', '6d'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.0535
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5465. Total: -0.5465
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', '3h'], Board Cards=['Ah', '2c', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2654320987654321, 'bluff_count': 78, 'total_actions': 486, 'raise_count': 129}
Strategy for state (3, ('3h', '6d'), ('Ah', '2c', 'Kc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.583
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.017
Regret updated for <class 'skeleton.actions.CallAction'>: -0.733. Total: -0.733
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Kh', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2648870636550308, 'bluff_count': 79, 'total_actions': 487, 'raise_count': 129}
Strategy for state (0, ('Kh', 'Th'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.097. Total: -0.097
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.503. Total: -0.503
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.097. Total: -0.097
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Kh', 'Th'], Board Cards=['Ah', '4d', '6s']
Opponent tendencies updated: {'aggression_frequency': 0.26434426229508196, 'bluff_count': 79, 'total_actions': 488, 'raise_count': 129}
Strategy for state (3, ('Kh', 'Th'), ('Ah', '4d', '6s')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.568. Total: -0.568
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.032. Total: -0.032
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Kh', 'Th'], Board Cards=['Ah', '4d', '6s', 'Qs']
Opponent tendencies updated: {'aggression_frequency': 0.26380368098159507, 'bluff_count': 79, 'total_actions': 489, 'raise_count': 129}
Strategy for state (4, ('Kh', 'Th'), ('Ah', '4d', '6s', 'Qs')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.191. Total: -0.191
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.409. Total: -0.409
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.191. Total: -0.191
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['4d', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26326530612244897, 'bluff_count': 80, 'total_actions': 490, 'raise_count': 129}
Strategy for state (0, ('4d', 'Qh'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5509999999999999. Total: -0.5509999999999999
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['4d', 'Qh'], Board Cards=['3d', '8d', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.26476578411405294, 'bluff_count': 80, 'total_actions': 491, 'raise_count': 130}
Strategy for state (3, ('4d', 'Qh'), ('3d', '8d', 'Js')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5569999999999999. Total: -0.5569999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.043. Total: -0.043
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7903333333333333. Total: -0.7903333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5c', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26422764227642276, 'bluff_count': 80, 'total_actions': 492, 'raise_count': 130}
Strategy for state (0, ('5c', 'Ks'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Regret updated for <class 'skeleton.actions.CallAction'>: -0.69. Total: -0.69
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5c', 'Ks'], Board Cards=['4s', '3s', '7c']
Opponent tendencies updated: {'aggression_frequency': 0.26369168356997974, 'bluff_count': 80, 'total_actions': 493, 'raise_count': 130}
Strategy for state (3, ('5c', 'Ks'), ('4s', '3s', '7c')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.156. Total: -0.156
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44399999999999995. Total: -0.44399999999999995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.156. Total: -0.156
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9s', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 80, 'total_actions': 494, 'raise_count': 130}
Strategy for state (0, ('7c', '9s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -0.518
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.082
Regret updated for <class 'skeleton.actions.CallAction'>: -0.518. Total: -0.518
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Td', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26262626262626265, 'bluff_count': 80, 'total_actions': 495, 'raise_count': 130}
Strategy for state (0, ('8h', 'Td'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49849999999999994. Total: -0.49849999999999994
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1015. Total: -0.1015
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6485. Total: -0.6485
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Td', '8h'], Board Cards=['3s', '3h', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.26411290322580644, 'bluff_count': 80, 'total_actions': 496, 'raise_count': 131}
Strategy for state (3, ('8h', 'Td'), ('3s', '3h', '4d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.024. Total: -0.024
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.576. Total: -0.576
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.024. Total: -0.024
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Qs', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2635814889336016, 'bluff_count': 80, 'total_actions': 497, 'raise_count': 131}
Strategy for state (0, ('Qs', 'Th'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8h', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26305220883534136, 'bluff_count': 80, 'total_actions': 498, 'raise_count': 131}
Strategy for state (0, ('8h', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.358. Total: -0.358
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.242. Total: -0.242
Regret updated for <class 'skeleton.actions.CallAction'>: -0.358. Total: -0.358
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8h', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26452905811623245, 'bluff_count': 80, 'total_actions': 499, 'raise_count': 132}
Strategy for state (0, ('8h', '8s'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3565. Total: -0.7144999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2435. Total: -0.4855
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5898333333333334. Total: -0.9478333333333334
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['3d', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.264, 'bluff_count': 80, 'total_actions': 500, 'raise_count': 132}
Strategy for state (0, ('3d', '4d'), ()): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1115. Total: -0.1115
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4885. Total: -0.4885
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1115. Total: -0.1115
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3d', '4d'], Board Cards=['7s', 'Kh', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.2634730538922156, 'bluff_count': 80, 'total_actions': 501, 'raise_count': 132}
Strategy for state (3, ('3d', '4d'), ('7s', 'Kh', '8d')): {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.03. Total: -0.03
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.57. Total: -0.57
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.03. Total: -0.03
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8d', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26294820717131473, 'bluff_count': 81, 'total_actions': 502, 'raise_count': 132}
Strategy for state (0, ('8d', 'Qd'), ()): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -1.511
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.28900000000000003
Regret updated for <class 'skeleton.actions.CallAction'>: -0.51. Total: -1.6609999999999998
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['8d', 'Qd'], Board Cards=['Tc', 'As', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2644135188866799, 'bluff_count': 81, 'total_actions': 503, 'raise_count': 133}
Strategy for state (3, ('8d', 'Qd'), ('Tc', 'As', 'Kc')): {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7278333333333333. Total: -0.7278333333333333
Legal strategy: {<class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
