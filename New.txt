CFR data loaded successfully.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2d', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 0, 'total_actions': 1, 'raise_count': 0}
Strategy for state (0, ('2d', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.CallAction'>: -0.512. Total: -0.512
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4h', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 0, 'total_actions': 2, 'raise_count': 0}
Strategy for state (0, ('4h', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.CallAction'>: -0.672. Total: -0.672
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 0, 'total_actions': 3, 'raise_count': 0}
Strategy for state (0, ('3d', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.074. Total: -0.074
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.526. Total: -0.526
Regret updated for <class 'skeleton.actions.CallAction'>: -0.526. Total: -0.526
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jd', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 4, 'raise_count': 0}
Strategy for state (0, ('6d', 'Jd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.086. Total: -0.086
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Jd', '6d'], Board Cards=['7c', 'Th', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 5, 'raise_count': 0}
Strategy for state (3, ('6d', 'Jd'), ('7c', 'Th', 'Ts')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.027. Total: -0.027
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.573. Total: -0.573
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.027. Total: -0.027
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6c', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 6, 'raise_count': 0}
Strategy for state (0, ('6c', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5115. Total: -0.5115
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2s', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 7, 'raise_count': 0}
Strategy for state (0, ('2s', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0795. Total: -0.0795
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6s', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 1, 'total_actions': 8, 'raise_count': 0}
Strategy for state (0, ('3h', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.074. Total: -0.074
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.526. Total: -0.526
Regret updated for <class 'skeleton.actions.CallAction'>: -0.526. Total: -0.526
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6s', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.1111111111111111, 'bluff_count': 1, 'total_actions': 9, 'raise_count': 1}
Strategy for state (0, ('3h', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.1545
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -1.0455
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7528333333333334. Total: -1.2788333333333335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6s', '3h'], Board Cards=['9h', '5d', 'Ad']
Opponent tendencies updated: {'aggression_frequency': 0.2, 'bluff_count': 1, 'total_actions': 10, 'raise_count': 2}
Strategy for state (3, ('3h', '6s'), ('9h', '5d', 'Ad')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.038. Total: -0.038
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5619999999999999. Total: -0.5619999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.837. Total: -0.837
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['6s', '3h'], Board Cards=['9h', '5d', 'Ad', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 1, 'total_actions': 11, 'raise_count': 3}
Strategy for state (4, ('3h', '6s'), ('9h', '5d', 'Ad', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8672195121951219. Total: -0.8672195121951219
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 46
sent answer: RaiseAction(amount=46)
Round State: Street=4, My Cards=['6s', '3h'], Board Cards=['9h', '5d', 'Ad', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 1, 'total_actions': 12, 'raise_count': 4}
Strategy for state (4, ('3h', '6s'), ('9h', '5d', 'Ad', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.112. Total: -0.196
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.488. Total: -1.004
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8775287958115183. Total: -1.7447483080066402
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 208
sent answer: RaiseAction(amount=208)
Round State: Street=4, My Cards=['6s', '3h'], Board Cards=['9h', '5d', 'Ad', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.38461538461538464, 'bluff_count': 2, 'total_actions': 13, 'raise_count': 5}
Strategy for state (4, ('3h', '6s'), ('9h', '5d', 'Ad', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.5, <class 'skeleton.actions.CallAction'>: 0.5}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.112. Total: -0.308
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8847637540453075. Total: -2.6295120620519477
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.5, <class 'skeleton.actions.CallAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qd', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.35714285714285715, 'bluff_count': 2, 'total_actions': 14, 'raise_count': 5}
Strategy for state (0, ('8c', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0645. Total: -0.0645
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Qd', '8c'], Board Cards=['5s', '9h', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 2, 'total_actions': 15, 'raise_count': 5}
Strategy for state (3, ('8c', 'Qd'), ('5s', '9h', 'Ks')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.029. Total: -0.029
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.571. Total: -0.571
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.029. Total: -0.029
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['Qd', '8c'], Board Cards=['5s', '9h', 'Ks', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.3125, 'bluff_count': 2, 'total_actions': 16, 'raise_count': 5}
Strategy for state (4, ('8c', 'Qd'), ('5s', '9h', 'Ks', '9s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.086. Total: -0.086
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=5, My Cards=['Qd', '8c'], Board Cards=['5s', '9h', 'Ks', '9s', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.35294117647058826, 'bluff_count': 2, 'total_actions': 17, 'raise_count': 6}
Strategy for state (5, ('8c', 'Qd'), ('5s', '9h', 'Ks', '9s', '4d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.3215. Total: -0.3215
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.27849999999999997. Total: -0.27849999999999997
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.3215. Total: -0.3215
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['8d', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 2, 'total_actions': 18, 'raise_count': 6}
Strategy for state (0, ('8d', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1105. Total: -0.1105
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4895. Total: -0.4895
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4895. Total: -0.4895
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8d', '9s'], Board Cards=['Qc', '8s', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.3157894736842105, 'bluff_count': 2, 'total_actions': 19, 'raise_count': 6}
Strategy for state (3, ('8d', '9s'), ('Qc', '8s', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.068. Total: -0.068
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ks', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3, 'bluff_count': 2, 'total_actions': 20, 'raise_count': 6}
Strategy for state (0, ('7h', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6925. Total: -0.6925
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ad', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 2, 'total_actions': 21, 'raise_count': 6}
Strategy for state (0, ('Ad', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2245. Total: -0.2245
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.37549999999999994. Total: -0.37549999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.37549999999999994. Total: -0.37549999999999994
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Ad', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 2, 'total_actions': 22, 'raise_count': 6}
Strategy for state (0, ('Ad', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.237. Total: -0.4615
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.363. Total: -0.7384999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.513. Total: -0.8885
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ad', 'As'], Board Cards=['9d', 'Jd', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.30434782608695654, 'bluff_count': 2, 'total_actions': 23, 'raise_count': 7}
Strategy for state (3, ('Ad', 'As'), ('9d', 'Jd', 'Qc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.152. Total: -0.152
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44799999999999995. Total: -0.44799999999999995
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6813333333333333. Total: -0.6813333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['As', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2916666666666667, 'bluff_count': 2, 'total_actions': 24, 'raise_count': 7}
Strategy for state (0, ('4d', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.0535
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5465. Total: -0.5465
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9c', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28, 'bluff_count': 2, 'total_actions': 25, 'raise_count': 7}
Strategy for state (0, ('9c', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.09
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -0.51
Regret updated for <class 'skeleton.actions.CallAction'>: -0.51. Total: -0.51
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9c', 'Jh'], Board Cards=['9h', 'Jd', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.2692307692307692, 'bluff_count': 2, 'total_actions': 26, 'raise_count': 7}
Strategy for state (3, ('9c', 'Jh'), ('9h', 'Jd', 'Th')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2375. Total: -0.2375
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3625. Total: -0.3625
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2375. Total: -0.2375
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 3.8
sent answer: RaiseAction(amount=3.8)
Round State: Street=4, My Cards=['9c', 'Jh'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.2962962962962963, 'bluff_count': 2, 'total_actions': 27, 'raise_count': 8}
Strategy for state (4, ('9c', 'Jh'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.822. Total: -0.822
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.22199999999999998. Total: 0.22199999999999998
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.822. Total: -0.822
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 21.0
sent answer: RaiseAction(amount=21.0)
Round State: Street=4, My Cards=['9c', 'Jh'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.32142857142857145, 'bluff_count': 2, 'total_actions': 28, 'raise_count': 9}
Strategy for state (4, ('9c', 'Jh'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.801. Total: -1.623
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.20100000000000007. Total: 0.42300000000000004
Regret updated for <class 'skeleton.actions.CallAction'>: -0.1746097560975609. Total: -0.1746097560975609
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 120.0
sent answer: RaiseAction(amount=120.0)
Round State: Street=4, My Cards=['9c', 'Jh'], Board Cards=['9h', 'Jd', 'Th', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.3448275862068966, 'bluff_count': 2, 'total_actions': 29, 'raise_count': 10}
Strategy for state (4, ('9c', 'Jh'), ('9h', 'Jd', 'Th', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.8305. Total: -2.4535
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.23050000000000004. Total: 0.6535000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.16407994579945795. Total: -0.33868970189701886
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 393
sent answer: RaiseAction(amount=393)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jc', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 2, 'total_actions': 30, 'raise_count': 10}
Strategy for state (0, ('7s', 'Jc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.061. Total: -0.061
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4s', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3225806451612903, 'bluff_count': 2, 'total_actions': 31, 'raise_count': 10}
Strategy for state (0, ('4s', '8d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5215. Total: -0.5215
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['As', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3125, 'bluff_count': 2, 'total_actions': 32, 'raise_count': 10}
Strategy for state (0, ('As', 'Js'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.097. Total: -0.097
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.503. Total: -0.503
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.097. Total: -0.097
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['As', 'Js'], Board Cards=['Th', 'Qh', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.30303030303030304, 'bluff_count': 2, 'total_actions': 33, 'raise_count': 10}
Strategy for state (3, ('As', 'Js'), ('Th', 'Qh', 'Td')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0255. Total: -0.0255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5745. Total: -0.5745
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0255. Total: -0.0255
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Kc', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29411764705882354, 'bluff_count': 2, 'total_actions': 34, 'raise_count': 10}
Strategy for state (0, ('Ac', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4d', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 2, 'total_actions': 35, 'raise_count': 10}
Strategy for state (0, ('4d', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.11499999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -1.085
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5385. Total: -1.085
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qs', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2777777777777778, 'bluff_count': 2, 'total_actions': 36, 'raise_count': 10}
Strategy for state (0, ('3s', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.075
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -0.525
Regret updated for <class 'skeleton.actions.CallAction'>: -0.675. Total: -0.675
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qs', '3s'], Board Cards=['6s', '9s', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.2702702702702703, 'bluff_count': 2, 'total_actions': 37, 'raise_count': 10}
Strategy for state (3, ('3s', 'Qs'), ('6s', '9s', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2365. Total: -0.2365
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3635. Total: -0.3635
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2365. Total: -0.2365
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['7s', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 3, 'total_actions': 38, 'raise_count': 10}
Strategy for state (0, ('7s', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.095. Total: -0.095
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.505. Total: -0.505
Regret updated for <class 'skeleton.actions.CallAction'>: -0.505. Total: -0.505
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4s', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2564102564102564, 'bluff_count': 3, 'total_actions': 39, 'raise_count': 10}
Strategy for state (0, ('4s', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0595. Total: -0.0595
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5405. Total: -0.5405
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0595. Total: -0.0595
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6c', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 3, 'total_actions': 40, 'raise_count': 10}
Strategy for state (0, ('6c', '7s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Regret updated for <class 'skeleton.actions.CallAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6c', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2682926829268293, 'bluff_count': 3, 'total_actions': 41, 'raise_count': 11}
Strategy for state (0, ('6c', '7s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.163
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -1.037
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7543333333333334. Total: -1.2703333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ts', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2619047619047619, 'bluff_count': 4, 'total_actions': 42, 'raise_count': 11}
Strategy for state (0, ('5c', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.0655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.5345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6845. Total: -0.6845
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ts', '5c'], Board Cards=['2h', 'Ks', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.27906976744186046, 'bluff_count': 4, 'total_actions': 43, 'raise_count': 12}
Strategy for state (3, ('5c', 'Ts'), ('2h', 'Ks', '9d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.018. Total: -0.018
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.582. Total: -0.582
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.018. Total: -0.018
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5c', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 4, 'total_actions': 44, 'raise_count': 12}
Strategy for state (0, ('2s', '5c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5175. Total: -0.5175
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qh', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26666666666666666, 'bluff_count': 4, 'total_actions': 45, 'raise_count': 12}
Strategy for state (0, ('6h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.CallAction'>: -0.514. Total: -0.514
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qh', '6h'], Board Cards=['3d', 'Jd', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.2608695652173913, 'bluff_count': 5, 'total_actions': 46, 'raise_count': 12}
Strategy for state (3, ('6h', 'Qh'), ('3d', 'Jd', '3h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.023. Total: -0.023
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.577. Total: -0.577
Regret updated for <class 'skeleton.actions.CallAction'>: -0.727. Total: -0.727
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Tc', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2553191489361702, 'bluff_count': 5, 'total_actions': 47, 'raise_count': 12}
Strategy for state (0, ('Kd', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.CallAction'>: -0.672. Total: -0.672
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3h', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 5, 'total_actions': 48, 'raise_count': 12}
Strategy for state (0, ('3h', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Regret updated for <class 'skeleton.actions.CallAction'>: -0.506. Total: -0.506
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7s', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24489795918367346, 'bluff_count': 6, 'total_actions': 49, 'raise_count': 12}
Strategy for state (0, ('7s', 'Jc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.1305
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -1.0695
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5305. Total: -0.5305
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['7s', 'Jc'], Board Cards=['9d', 'Qs', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.24, 'bluff_count': 6, 'total_actions': 50, 'raise_count': 12}
Strategy for state (3, ('7s', 'Jc'), ('9d', 'Qs', '2c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.568. Total: -0.568
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.032. Total: -0.032
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['7s', 'Jc'], Board Cards=['9d', 'Qs', '2c', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.23529411764705882, 'bluff_count': 6, 'total_actions': 51, 'raise_count': 12}
Strategy for state (4, ('7s', 'Jc'), ('9d', 'Qs', '2c', '4s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.112. Total: -0.112
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.488. Total: -0.488
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.112. Total: -0.112
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['7s', 'Jc'], Board Cards=['9d', 'Qs', '2c', '4s', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.23076923076923078, 'bluff_count': 6, 'total_actions': 52, 'raise_count': 12}
Strategy for state (5, ('7s', 'Jc'), ('9d', 'Qs', '2c', '4s', '4d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2665. Total: -0.2665
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33349999999999996. Total: -0.33349999999999996
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2665. Total: -0.2665
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.22641509433962265, 'bluff_count': 6, 'total_actions': 53, 'raise_count': 12}
Strategy for state (0, ('4s', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24074074074074073, 'bluff_count': 6, 'total_actions': 54, 'raise_count': 13}
Strategy for state (0, ('4s', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.1335
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -1.0665
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7638333333333334. Total: -1.2998333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ah', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.23636363636363636, 'bluff_count': 7, 'total_actions': 55, 'raise_count': 13}
Strategy for state (0, ('Ah', 'Jd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.054
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -0.5459999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.696. Total: -0.696
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ah', 'Jd'], Board Cards=['Kd', '4s', '8s']
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 7, 'total_actions': 56, 'raise_count': 14}
Strategy for state (3, ('Ah', 'Jd'), ('Kd', '4s', '8s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.017
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.583
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.017. Total: -0.017
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Th', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24561403508771928, 'bluff_count': 7, 'total_actions': 57, 'raise_count': 14}
Strategy for state (0, ('4c', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5309999999999999. Total: -0.5309999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5h', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2413793103448276, 'bluff_count': 7, 'total_actions': 58, 'raise_count': 14}
Strategy for state (0, ('2h', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0915. Total: -0.0915
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5085. Total: -0.5085
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6585. Total: -0.6585
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5h', '2h'], Board Cards=['Qc', '7d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.23728813559322035, 'bluff_count': 7, 'total_actions': 59, 'raise_count': 14}
Strategy for state (3, ('2h', '5h'), ('Qc', '7d', '7s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.017
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.583
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.017. Total: -0.017
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['5h', '2h'], Board Cards=['Qc', '7d', '7s', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 7, 'total_actions': 60, 'raise_count': 15}
Strategy for state (4, ('2h', '5h'), ('Qc', '7d', '7s', 'Jc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.071
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.529
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.071. Total: -0.071
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6c', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2459016393442623, 'bluff_count': 8, 'total_actions': 61, 'raise_count': 15}
Strategy for state (0, ('6c', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5315. Total: -0.5315
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kc', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24193548387096775, 'bluff_count': 8, 'total_actions': 62, 'raise_count': 15}
Strategy for state (0, ('4h', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5419999999999999. Total: -0.5419999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Kc', '4h'], Board Cards=['Jh', '7s', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.25396825396825395, 'bluff_count': 8, 'total_actions': 63, 'raise_count': 16}
Strategy for state (3, ('4h', 'Kc'), ('Jh', '7s', 'Th')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7648333333333334. Total: -0.7648333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Kc', '4h'], Board Cards=['Jh', '7s', 'Th', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.265625, 'bluff_count': 8, 'total_actions': 64, 'raise_count': 17}
Strategy for state (4, ('4h', 'Kc'), ('Jh', '7s', 'Th', '6h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.255. Total: -0.255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.345. Total: -0.345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6338888888888888. Total: -0.6338888888888888
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 9.792
sent answer: RaiseAction(amount=9.792)
Round State: Street=5, My Cards=['Kc', '4h'], Board Cards=['Jh', '7s', 'Th', '6h', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.27692307692307694, 'bluff_count': 8, 'total_actions': 65, 'raise_count': 18}
Strategy for state (5, ('4h', 'Kc'), ('Jh', '7s', 'Th', '6h', '8d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.141. Total: -0.141
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.45899999999999996. Total: -0.45899999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.819. Total: -0.819
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 36
sent answer: RaiseAction(amount=36)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3h', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 8, 'total_actions': 66, 'raise_count': 18}
Strategy for state (0, ('3h', 'Jd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.05
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -0.5499999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7. Total: -0.7
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3h', 'Jd'], Board Cards=['Qh', '4s', '4c']
Opponent tendencies updated: {'aggression_frequency': 0.26865671641791045, 'bluff_count': 8, 'total_actions': 67, 'raise_count': 18}
Strategy for state (3, ('3h', 'Jd'), ('Qh', '4s', '4c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0155. Total: -0.0155
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5845. Total: -0.5845
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0155. Total: -0.0155
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ts', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2647058823529412, 'bluff_count': 8, 'total_actions': 68, 'raise_count': 18}
Strategy for state (0, ('Th', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2415. Total: -0.2415
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3585. Total: -0.3585
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3585. Total: -0.3585
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qc', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2608695652173913, 'bluff_count': 8, 'total_actions': 69, 'raise_count': 18}
Strategy for state (0, ('5s', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6d', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2571428571428571, 'bluff_count': 9, 'total_actions': 70, 'raise_count': 18}
Strategy for state (0, ('6d', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.CallAction'>: -0.672. Total: -0.672
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', 'Ad'], Board Cards=['Jc', '9s', 'Qd']
Opponent tendencies updated: {'aggression_frequency': 0.2535211267605634, 'bluff_count': 9, 'total_actions': 71, 'raise_count': 18}
Strategy for state (3, ('6d', 'Ad'), ('Jc', '9s', 'Qd')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.048. Total: -0.048
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4h', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 10, 'total_actions': 72, 'raise_count': 18}
Strategy for state (0, ('4h', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0435. Total: -0.1015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5565. Total: -1.0985
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5565. Total: -1.0985
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4s', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2465753424657534, 'bluff_count': 10, 'total_actions': 73, 'raise_count': 18}
Strategy for state (0, ('4d', '4s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2465. Total: -0.2465
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3535. Total: -0.3535
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2465. Total: -0.2465
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9d', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24324324324324326, 'bluff_count': 10, 'total_actions': 74, 'raise_count': 18}
Strategy for state (0, ('2h', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5509999999999999. Total: -0.5509999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ad', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24, 'bluff_count': 11, 'total_actions': 75, 'raise_count': 18}
Strategy for state (0, ('6d', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.16649999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -1.0335
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0885. Total: -0.0885
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Th', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.23684210526315788, 'bluff_count': 11, 'total_actions': 76, 'raise_count': 18}
Strategy for state (0, ('5h', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.077
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.523
Regret updated for <class 'skeleton.actions.CallAction'>: -0.523. Total: -0.523
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['9h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.23376623376623376, 'bluff_count': 11, 'total_actions': 77, 'raise_count': 18}
Strategy for state (0, ('3c', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5419999999999999. Total: -0.5419999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24358974358974358, 'bluff_count': 11, 'total_actions': 78, 'raise_count': 19}
Strategy for state (0, ('3c', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.123
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -1.077
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7683333333333333. Total: -1.3103333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4c', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24050632911392406, 'bluff_count': 11, 'total_actions': 79, 'raise_count': 19}
Strategy for state (0, ('4c', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5355. Total: -0.5355
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4c', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 11, 'total_actions': 80, 'raise_count': 20}
Strategy for state (0, ('4c', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.131
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -1.069
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7668333333333334. Total: -1.3023333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['8s', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24691358024691357, 'bluff_count': 11, 'total_actions': 81, 'raise_count': 20}
Strategy for state (0, ('8d', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.26. Total: -0.26
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33999999999999997. Total: -0.33999999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.33999999999999997. Total: -0.33999999999999997
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7c', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24390243902439024, 'bluff_count': 11, 'total_actions': 82, 'raise_count': 20}
Strategy for state (0, ('5h', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.094. Total: -0.094
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['7c', '5h'], Board Cards=['8c', 'Kd', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.24096385542168675, 'bluff_count': 11, 'total_actions': 83, 'raise_count': 20}
Strategy for state (3, ('5h', '7c'), ('8c', 'Kd', '8d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0255. Total: -0.0255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5745. Total: -0.5745
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0255. Total: -0.0255
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Th', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.23809523809523808, 'bluff_count': 12, 'total_actions': 84, 'raise_count': 20}
Strategy for state (0, ('8s', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5355. Total: -0.5355
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Th', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24705882352941178, 'bluff_count': 12, 'total_actions': 85, 'raise_count': 21}
Strategy for state (0, ('8s', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.14900000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -1.051
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7488333333333334. Total: -1.2843333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['6d', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2441860465116279, 'bluff_count': 12, 'total_actions': 86, 'raise_count': 21}
Strategy for state (0, ('2d', '6d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.CallAction'>: -0.677. Total: -0.677
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', '2d'], Board Cards=['4c', '4s', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.2413793103448276, 'bluff_count': 12, 'total_actions': 87, 'raise_count': 21}
Strategy for state (3, ('2d', '6d'), ('4c', '4s', 'Ks')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0185. Total: -0.0185
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5815. Total: -0.5815
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0185. Total: -0.0185
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['6d', '2d'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.23863636363636365, 'bluff_count': 12, 'total_actions': 88, 'raise_count': 21}
Strategy for state (4, ('2d', '6d'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0635. Total: -0.0635
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['6d', '2d'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.24719101123595505, 'bluff_count': 12, 'total_actions': 89, 'raise_count': 22}
Strategy for state (4, ('2d', '6d'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.1315
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -1.0685
Regret updated for <class 'skeleton.actions.CallAction'>: -0.857925925925926. Total: -0.857925925925926
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 28
sent answer: RaiseAction(amount=28)
Round State: Street=4, My Cards=['6d', '2d'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.25555555555555554, 'bluff_count': 12, 'total_actions': 90, 'raise_count': 23}
Strategy for state (4, ('2d', '6d'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.193
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -1.607
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9209561403508771. Total: -1.778882066276803
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 124
sent answer: RaiseAction(amount=124)
Round State: Street=4, My Cards=['6d', '2d'], Board Cards=['4c', '4s', 'Ks', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.26373626373626374, 'bluff_count': 12, 'total_actions': 91, 'raise_count': 24}
Strategy for state (4, ('2d', '6d'), ('4c', '4s', 'Ks', 'Qc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.261
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -2.1390000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9275156950672645. Total: -2.7063977613440677
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['6d', '2d'], Board Cards=['4c', '4s', 'Ks', 'Qc', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.2717391304347826, 'bluff_count': 12, 'total_actions': 92, 'raise_count': 25}
Strategy for state (5, ('2d', '6d'), ('4c', '4s', 'Ks', 'Qc', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.253. Total: -0.253
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.347. Total: -0.347
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.253. Total: -0.253
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 84
sent answer: RaiseAction(amount=84)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Qh', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26881720430107525, 'bluff_count': 12, 'total_actions': 93, 'raise_count': 25}
Strategy for state (0, ('9h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.099. Total: -0.099
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.501. Total: -0.501
Regret updated for <class 'skeleton.actions.CallAction'>: -0.501. Total: -0.501
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['8c', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26595744680851063, 'bluff_count': 12, 'total_actions': 94, 'raise_count': 25}
Strategy for state (0, ('5c', '8c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.107. Total: -0.107
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.493. Total: -0.493
Regret updated for <class 'skeleton.actions.CallAction'>: -0.493. Total: -0.493
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['6h', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 12, 'total_actions': 95, 'raise_count': 25}
Strategy for state (0, ('6h', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.CallAction'>: -0.532. Total: -0.532
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6h', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2708333333333333, 'bluff_count': 12, 'total_actions': 96, 'raise_count': 26}
Strategy for state (0, ('6h', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.14
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -1.06
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7613333333333334. Total: -1.2933333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jc', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26804123711340205, 'bluff_count': 12, 'total_actions': 97, 'raise_count': 26}
Strategy for state (0, ('7d', 'Jc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.0755
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.5245
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6745. Total: -0.6745
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Jc', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2755102040816326, 'bluff_count': 13, 'total_actions': 98, 'raise_count': 27}
Strategy for state (0, ('7d', 'Jc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.14300000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -1.057
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8075. Total: -1.482
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4h', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 13, 'total_actions': 99, 'raise_count': 27}
Strategy for state (0, ('4h', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.CallAction'>: -0.54. Total: -0.54
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['4h', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27, 'bluff_count': 13, 'total_actions': 100, 'raise_count': 27}
Strategy for state (0, ('4h', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.11349999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -1.0865
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6965. Total: -1.2365
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['4h', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27722772277227725, 'bluff_count': 13, 'total_actions': 101, 'raise_count': 28}
Strategy for state (0, ('4h', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.175
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -1.625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8135. Total: -2.05
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['4h', 'Qc'], Board Cards=['2s', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.28431372549019607, 'bluff_count': 13, 'total_actions': 102, 'raise_count': 29}
Strategy for state (3, ('4h', 'Qc'), ('2s', '3c', '8d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.029. Total: -0.029
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.571. Total: -0.571
Regret updated for <class 'skeleton.actions.CallAction'>: -0.871. Total: -0.871
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['4h', 'Qc'], Board Cards=['2s', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.2912621359223301, 'bluff_count': 13, 'total_actions': 103, 'raise_count': 30}
Strategy for state (3, ('4h', 'Qc'), ('2s', '3c', '8d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -1.145
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9025714285714286. Total: -1.7735714285714286
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['4h', 'Qc'], Board Cards=['2s', '3c', '8d', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.2980769230769231, 'bluff_count': 13, 'total_actions': 104, 'raise_count': 31}
Strategy for state (4, ('4h', 'Qc'), ('2s', '3c', '8d', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1655. Total: -0.1655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4345. Total: -0.4345
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1655. Total: -0.1655
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 11.1216
sent answer: RaiseAction(amount=11.1216)
Round State: Street=4, My Cards=['4h', 'Qc'], Board Cards=['2s', '3c', '8d', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.3047619047619048, 'bluff_count': 13, 'total_actions': 105, 'raise_count': 32}
Strategy for state (4, ('4h', 'Qc'), ('2s', '3c', '8d', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.177. Total: -0.3425
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.423. Total: -0.8574999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7912539682539683. Total: -0.7912539682539683
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7s', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3018867924528302, 'bluff_count': 13, 'total_actions': 106, 'raise_count': 32}
Strategy for state (0, ('7s', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0525. Total: -0.0525
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5475. Total: -0.5475
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0525. Total: -0.0525
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4s', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29906542056074764, 'bluff_count': 13, 'total_actions': 107, 'raise_count': 32}
Strategy for state (0, ('4s', '6d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.114. Total: -0.114
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.486. Total: -0.486
Regret updated for <class 'skeleton.actions.CallAction'>: -0.486. Total: -0.486
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ts', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2962962962962963, 'bluff_count': 13, 'total_actions': 108, 'raise_count': 32}
Strategy for state (0, ('2h', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.042. Total: -0.042
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5579999999999999. Total: -0.5579999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5579999999999999. Total: -0.5579999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ts', '2h'], Board Cards=['8h', 'Kc', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.29357798165137616, 'bluff_count': 13, 'total_actions': 109, 'raise_count': 32}
Strategy for state (3, ('2h', 'Ts'), ('8h', 'Kc', '2s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0175. Total: -0.0175
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5825. Total: -0.5825
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0175. Total: -0.0175
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7c', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2909090909090909, 'bluff_count': 13, 'total_actions': 110, 'raise_count': 32}
Strategy for state (0, ('7c', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6445. Total: -0.6445
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['7c', '9s'], Board Cards=['Ts', '5c', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.2972972972972973, 'bluff_count': 13, 'total_actions': 111, 'raise_count': 33}
Strategy for state (3, ('7c', '9s'), ('Ts', '5c', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.024. Total: -0.024
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.576. Total: -0.576
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.024. Total: -0.024
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ad', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29464285714285715, 'bluff_count': 13, 'total_actions': 112, 'raise_count': 33}
Strategy for state (0, ('9c', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -0.5409999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ad', '9c'], Board Cards=['7c', '8c', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.2920353982300885, 'bluff_count': 13, 'total_actions': 113, 'raise_count': 33}
Strategy for state (3, ('9c', 'Ad'), ('7c', '8c', '2h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.074. Total: -0.074
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.526. Total: -0.526
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.074. Total: -0.074
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['Ad', '9c'], Board Cards=['7c', '8c', '2h', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2982456140350877, 'bluff_count': 13, 'total_actions': 114, 'raise_count': 34}
Strategy for state (4, ('9c', 'Ad'), ('7c', '8c', '2h', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.261. Total: -0.261
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33899999999999997. Total: -0.33899999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5723333333333334. Total: -0.5723333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['8h', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2956521739130435, 'bluff_count': 13, 'total_actions': 115, 'raise_count': 34}
Strategy for state (0, ('7c', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6445. Total: -0.6445
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8h', '7c'], Board Cards=['2h', '8d', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.29310344827586204, 'bluff_count': 13, 'total_actions': 116, 'raise_count': 34}
Strategy for state (3, ('7c', '8h'), ('2h', '8d', '3c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.024. Total: -0.024
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.576. Total: -0.576
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.024. Total: -0.024
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['8h', '7c'], Board Cards=['2h', '8d', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.29914529914529914, 'bluff_count': 13, 'total_actions': 117, 'raise_count': 35}
Strategy for state (3, ('7c', '8h'), ('2h', '8d', '3c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.022. Total: -0.046
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.578. Total: -1.154
Regret updated for <class 'skeleton.actions.CallAction'>: -0.853. Total: -0.853
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Qd', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2966101694915254, 'bluff_count': 13, 'total_actions': 118, 'raise_count': 35}
Strategy for state (0, ('Qd', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.232. Total: -0.232
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.368. Total: -0.368
Regret updated for <class 'skeleton.actions.CallAction'>: -0.368. Total: -0.368
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Qd', 'Qs'], Board Cards=['2c', 'Qc', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.29411764705882354, 'bluff_count': 13, 'total_actions': 119, 'raise_count': 35}
Strategy for state (3, ('Qd', 'Qs'), ('2c', 'Qc', '5d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -1.0. Total: -1.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.4. Total: 0.4
Regret updated for <class 'skeleton.actions.CheckAction'>: -1.0. Total: -1.0
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['7h', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2916666666666667, 'bluff_count': 13, 'total_actions': 120, 'raise_count': 35}
Strategy for state (0, ('6d', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.1
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -0.5
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5. Total: -0.5
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6s', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2892561983471074, 'bluff_count': 14, 'total_actions': 121, 'raise_count': 35}
Strategy for state (0, ('6s', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.11. Total: -0.11
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49. Total: -0.49
Regret updated for <class 'skeleton.actions.CallAction'>: -0.64. Total: -0.64
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Td', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28688524590163933, 'bluff_count': 15, 'total_actions': 122, 'raise_count': 35}
Strategy for state (0, ('8h', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5025. Total: -0.5025
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Td', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2926829268292683, 'bluff_count': 15, 'total_actions': 123, 'raise_count': 36}
Strategy for state (0, ('8h', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.1865
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -1.0135
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7443333333333334. Total: -1.2468333333333335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2903225806451613, 'bluff_count': 15, 'total_actions': 124, 'raise_count': 36}
Strategy for state (0, ('6h', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6h', 'Kh'], Board Cards=['9h', 'Qs', '6s']
Opponent tendencies updated: {'aggression_frequency': 0.288, 'bluff_count': 15, 'total_actions': 125, 'raise_count': 36}
Strategy for state (3, ('6h', 'Kh'), ('9h', 'Qs', '6s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.069. Total: -0.069
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ac', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 15, 'total_actions': 126, 'raise_count': 36}
Strategy for state (0, ('3s', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5h', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28346456692913385, 'bluff_count': 15, 'total_actions': 127, 'raise_count': 36}
Strategy for state (0, ('2c', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5309999999999999. Total: -0.5309999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['5h', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28125, 'bluff_count': 15, 'total_actions': 128, 'raise_count': 36}
Strategy for state (0, ('2c', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.15100000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -1.049
Regret updated for <class 'skeleton.actions.CallAction'>: -0.668. Total: -1.1989999999999998
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8s', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27906976744186046, 'bluff_count': 16, 'total_actions': 129, 'raise_count': 36}
Strategy for state (0, ('7s', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.136. Total: -0.136
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46399999999999997. Total: -0.46399999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.46399999999999997. Total: -0.46399999999999997
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8s', '7s'], Board Cards=['Th', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.27692307692307694, 'bluff_count': 17, 'total_actions': 130, 'raise_count': 36}
Strategy for state (3, ('7s', '8s'), ('Th', '9h', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2395. Total: -0.2395
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3605. Total: -0.3605
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5105. Total: -0.5105
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6h', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2748091603053435, 'bluff_count': 17, 'total_actions': 131, 'raise_count': 36}
Strategy for state (0, ('3s', '6h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0735. Total: -0.0735
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['6h', '3s'], Board Cards=['2c', '2s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 17, 'total_actions': 132, 'raise_count': 36}
Strategy for state (3, ('3s', '6h'), ('2c', '2s', '5d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0155. Total: -0.0155
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5845. Total: -0.5845
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0155. Total: -0.0155
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['6h', '3s'], Board Cards=['2c', '2s', '5d', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.2781954887218045, 'bluff_count': 17, 'total_actions': 133, 'raise_count': 37}
Strategy for state (4, ('3s', '6h'), ('2c', '2s', '5d', '2h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1415. Total: -0.1415
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4585. Total: -0.4585
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1415. Total: -0.1415
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6s', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27611940298507465, 'bluff_count': 17, 'total_actions': 134, 'raise_count': 37}
Strategy for state (0, ('6s', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6s', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2814814814814815, 'bluff_count': 17, 'total_actions': 135, 'raise_count': 38}
Strategy for state (0, ('6s', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.097. Total: -0.1915
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.503. Total: -1.0085
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7363333333333334. Total: -1.2418333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6c', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27941176470588236, 'bluff_count': 17, 'total_actions': 136, 'raise_count': 38}
Strategy for state (0, ('6c', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.0705
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -0.5295
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0705. Total: -0.0705
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['5s', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2773722627737226, 'bluff_count': 17, 'total_actions': 137, 'raise_count': 38}
Strategy for state (0, ('5s', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1315. Total: -0.1315
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46849999999999997. Total: -0.46849999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.46849999999999997. Total: -0.46849999999999997
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Kc', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2753623188405797, 'bluff_count': 18, 'total_actions': 138, 'raise_count': 38}
Strategy for state (0, ('2d', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0445. Total: -0.0445
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5555. Total: -0.5555
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7055. Total: -0.7055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Kc', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2805755395683453, 'bluff_count': 18, 'total_actions': 139, 'raise_count': 39}
Strategy for state (0, ('2d', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.0965
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -1.1035
Regret updated for <class 'skeleton.actions.CallAction'>: -0.823. Total: -1.5285
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kc', '2d'], Board Cards=['2c', '7d', 'Jh']
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 18, 'total_actions': 140, 'raise_count': 40}
Strategy for state (3, ('2d', 'Kc'), ('2c', '7d', 'Jh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0205. Total: -0.0205
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5795. Total: -0.5795
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0205. Total: -0.0205
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['Kc', '2d'], Board Cards=['2c', '7d', 'Jh', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.2907801418439716, 'bluff_count': 18, 'total_actions': 141, 'raise_count': 41}
Strategy for state (4, ('2d', 'Kc'), ('2c', '7d', 'Jh', '8c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.62. Total: -0.62
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.020000000000000018. Total: 0.020000000000000018
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.62. Total: -0.62
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Ts', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2887323943661972, 'bluff_count': 18, 'total_actions': 142, 'raise_count': 41}
Strategy for state (0, ('6s', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1005. Total: -0.1005
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49949999999999994. Total: -0.49949999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.49949999999999994. Total: -0.49949999999999994
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Ts', '6s'], Board Cards=['Qh', 'As', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2937062937062937, 'bluff_count': 18, 'total_actions': 143, 'raise_count': 42}
Strategy for state (3, ('6s', 'Ts'), ('Qh', 'As', '4s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.229. Total: -0.229
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.371. Total: -0.371
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6043333333333334. Total: -0.6043333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 5.4959999999999996
sent answer: RaiseAction(amount=5.4959999999999996)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Qh', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2916666666666667, 'bluff_count': 18, 'total_actions': 144, 'raise_count': 42}
Strategy for state (0, ('Kd', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5315. Total: -0.5315
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['4h', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2896551724137931, 'bluff_count': 19, 'total_actions': 145, 'raise_count': 42}
Strategy for state (0, ('4h', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.0615
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -0.5385
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0615. Total: -0.0615
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Qd', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2876712328767123, 'bluff_count': 19, 'total_actions': 146, 'raise_count': 42}
Strategy for state (0, ('3h', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5389999999999999. Total: -0.5389999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['2h', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 19, 'total_actions': 147, 'raise_count': 42}
Strategy for state (0, ('2h', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1105. Total: -0.202
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4895. Total: -0.998
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1105. Total: -0.1105
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2h', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2905405405405405, 'bluff_count': 19, 'total_actions': 148, 'raise_count': 43}
Strategy for state (0, ('2h', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1155. Total: -0.3175
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4845. Total: -1.4825
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7178333333333333. Total: -1.3763333333333332
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['2h', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2953020134228188, 'bluff_count': 20, 'total_actions': 149, 'raise_count': 44}
Strategy for state (0, ('2h', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.4135
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -1.9865
Regret updated for <class 'skeleton.actions.CallAction'>: -0.804. Total: -2.1803333333333335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12
sent answer: RaiseAction(amount=12)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['Jh', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29333333333333333, 'bluff_count': 20, 'total_actions': 150, 'raise_count': 44}
Strategy for state (0, ('2c', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5519999999999999. Total: -0.5519999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['9c', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2913907284768212, 'bluff_count': 20, 'total_actions': 151, 'raise_count': 44}
Strategy for state (0, ('8h', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1075. Total: -0.1075
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4925. Total: -0.4925
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6425. Total: -0.6425
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['6c', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2894736842105263, 'bluff_count': 20, 'total_actions': 152, 'raise_count': 44}
Strategy for state (0, ('6c', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.0615
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -0.5385
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5385. Total: -0.5385
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6c', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.29411764705882354, 'bluff_count': 20, 'total_actions': 153, 'raise_count': 45}
Strategy for state (0, ('6c', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.138
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -1.0619999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7568333333333334. Total: -1.2953333333333332
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: K
Round State: Street=0, My Cards=['8d', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2922077922077922, 'bluff_count': 20, 'total_actions': 154, 'raise_count': 45}
Strategy for state (0, ('8d', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.0905
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -0.5095
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0905. Total: -0.0905
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2903225806451613, 'bluff_count': 20, 'total_actions': 155, 'raise_count': 45}
Strategy for state (0, ('3d', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5489999999999999. Total: -0.5489999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5s', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28846153846153844, 'bluff_count': 21, 'total_actions': 156, 'raise_count': 45}
Strategy for state (0, ('5s', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.07
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.07. Total: -0.07
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Td', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28662420382165604, 'bluff_count': 21, 'total_actions': 157, 'raise_count': 45}
Strategy for state (0, ('8d', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.113. Total: -0.113
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.CallAction'>: -0.487. Total: -0.487
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qh', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2848101265822785, 'bluff_count': 21, 'total_actions': 158, 'raise_count': 45}
Strategy for state (0, ('3h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.086. Total: -0.086
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qh', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2893081761006289, 'bluff_count': 22, 'total_actions': 159, 'raise_count': 46}
Strategy for state (0, ('3h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.093. Total: -0.179
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.507. Total: -1.021
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7403333333333334. Total: -0.7403333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9d', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2875, 'bluff_count': 22, 'total_actions': 160, 'raise_count': 46}
Strategy for state (0, ('3s', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.071
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.529
Regret updated for <class 'skeleton.actions.CallAction'>: -0.529. Total: -0.529
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6h', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 22, 'total_actions': 161, 'raise_count': 46}
Strategy for state (0, ('6h', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5265. Total: -0.5265
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8s', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2839506172839506, 'bluff_count': 22, 'total_actions': 162, 'raise_count': 46}
Strategy for state (0, ('2h', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5529999999999999. Total: -0.5529999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['As', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2822085889570552, 'bluff_count': 22, 'total_actions': 163, 'raise_count': 46}
Strategy for state (0, ('As', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.06. Total: -0.06
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['As', 'Jh'], Board Cards=['Td', 'Qc', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.2804878048780488, 'bluff_count': 22, 'total_actions': 164, 'raise_count': 46}
Strategy for state (3, ('As', 'Jh'), ('Td', 'Qc', 'Th')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0205. Total: -0.0205
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5795. Total: -0.5795
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0205. Total: -0.0205
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['As', 'Jh'], Board Cards=['Td', 'Qc', 'Th', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.2787878787878788, 'bluff_count': 22, 'total_actions': 165, 'raise_count': 46}
Strategy for state (4, ('As', 'Jh'), ('Td', 'Qc', 'Th', 'Jc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7255. Total: -0.7255
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.12550000000000006. Total: 0.12550000000000006
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7255. Total: -0.7255
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12.0
sent answer: RaiseAction(amount=12.0)
Round State: Street=4, My Cards=['As', 'Jh'], Board Cards=['Td', 'Qc', 'Th', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.28313253012048195, 'bluff_count': 22, 'total_actions': 166, 'raise_count': 47}
Strategy for state (4, ('As', 'Jh'), ('Td', 'Qc', 'Th', 'Jc')): {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7245. Total: -1.4500000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.12450000000000006. Total: 0.2500000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.23202173913043478. Total: -0.23202173913043478
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0, <class 'skeleton.actions.CallAction'>: 0.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 66.0
sent answer: RaiseAction(amount=66.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4c', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.281437125748503, 'bluff_count': 22, 'total_actions': 167, 'raise_count': 47}
Strategy for state (0, ('4c', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9s', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27976190476190477, 'bluff_count': 23, 'total_actions': 168, 'raise_count': 47}
Strategy for state (0, ('9s', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.083
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.517
Regret updated for <class 'skeleton.actions.CallAction'>: -0.517. Total: -0.517
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3s', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2781065088757396, 'bluff_count': 23, 'total_actions': 169, 'raise_count': 47}
Strategy for state (0, ('3s', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0645. Total: -0.0645
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['3s', 'Qd'], Board Cards=['Ac', '9c', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.27647058823529413, 'bluff_count': 23, 'total_actions': 170, 'raise_count': 47}
Strategy for state (3, ('3s', 'Qd'), ('Ac', '9c', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0355. Total: -0.0355
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5645. Total: -0.5645
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0355. Total: -0.0355
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9h', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27485380116959063, 'bluff_count': 23, 'total_actions': 171, 'raise_count': 47}
Strategy for state (0, ('9h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1085. Total: -0.20750000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4915. Total: -0.9924999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4915. Total: -0.9924999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qs', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27325581395348836, 'bluff_count': 23, 'total_actions': 172, 'raise_count': 47}
Strategy for state (0, ('5c', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6855. Total: -0.6855
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qs', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27167630057803466, 'bluff_count': 24, 'total_actions': 173, 'raise_count': 47}
Strategy for state (0, ('2s', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.0725
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -0.5275
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5275. Total: -0.5275
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qs', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27586206896551724, 'bluff_count': 25, 'total_actions': 174, 'raise_count': 48}
Strategy for state (0, ('2s', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.14150000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -1.0585
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7643333333333333. Total: -1.2918333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6d', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2742857142857143, 'bluff_count': 25, 'total_actions': 175, 'raise_count': 48}
Strategy for state (0, ('6d', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.0545
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6955. Total: -0.6955
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6d', 'As'], Board Cards=['2h', 'Ah', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.2784090909090909, 'bluff_count': 25, 'total_actions': 176, 'raise_count': 49}
Strategy for state (3, ('6d', 'As'), ('2h', 'Ah', '3s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.568. Total: -0.568
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.032. Total: -0.032
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['6d', 'As'], Board Cards=['2h', 'Ah', '3s', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.2824858757062147, 'bluff_count': 25, 'total_actions': 177, 'raise_count': 50}
Strategy for state (4, ('6d', 'As'), ('2h', 'Ah', '3s', '2s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7075. Total: -0.7075
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.10750000000000004. Total: 0.10750000000000004
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7075. Total: -0.7075
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7s', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2808988764044944, 'bluff_count': 25, 'total_actions': 178, 'raise_count': 50}
Strategy for state (0, ('2h', '7s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5519999999999999. Total: -0.5519999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['7s', '2h'], Board Cards=['Qd', '2d', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.2849162011173184, 'bluff_count': 25, 'total_actions': 179, 'raise_count': 51}
Strategy for state (3, ('2h', '7s'), ('Qd', '2d', '9d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.041. Total: -0.041
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5589999999999999. Total: -0.5589999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7923333333333333. Total: -0.7923333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['7s', '2h'], Board Cards=['Qd', '2d', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.28888888888888886, 'bluff_count': 26, 'total_actions': 180, 'raise_count': 52}
Strategy for state (3, ('2h', '7s'), ('Qd', '2d', '9d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.034. Total: -0.07500000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.566. Total: -1.125
Regret updated for <class 'skeleton.actions.CallAction'>: -0.866. Total: -1.6583333333333332
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9s', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.287292817679558, 'bluff_count': 27, 'total_actions': 181, 'raise_count': 52}
Strategy for state (0, ('9s', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.074. Total: -0.074
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.526. Total: -0.526
Regret updated for <class 'skeleton.actions.CallAction'>: -0.676. Total: -0.676
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4c', '7d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2857142857142857, 'bluff_count': 27, 'total_actions': 182, 'raise_count': 52}
Strategy for state (0, ('4c', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0865. Total: -0.0865
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5135. Total: -0.5135
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5135. Total: -0.5135
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qs', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28415300546448086, 'bluff_count': 27, 'total_actions': 183, 'raise_count': 52}
Strategy for state (0, ('2h', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.0535
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0535. Total: -0.0535
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Qs', '2h'], Board Cards=['Td', '6c', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2826086956521739, 'bluff_count': 27, 'total_actions': 184, 'raise_count': 52}
Strategy for state (3, ('2h', 'Qs'), ('Td', '6c', '4s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.012. Total: -0.012
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.588. Total: -0.588
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.012. Total: -0.012
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['Qs', '2h'], Board Cards=['Td', '6c', '4s', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.2810810810810811, 'bluff_count': 27, 'total_actions': 185, 'raise_count': 52}
Strategy for state (4, ('2h', 'Qs'), ('Td', '6c', '4s', '6d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.102. Total: -0.102
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.498. Total: -0.498
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.102. Total: -0.102
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Th', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27956989247311825, 'bluff_count': 28, 'total_actions': 186, 'raise_count': 52}
Strategy for state (0, ('Ks', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -0.5409999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4c', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27807486631016043, 'bluff_count': 28, 'total_actions': 187, 'raise_count': 52}
Strategy for state (0, ('4c', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.092
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.508
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.092. Total: -0.092
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['4c', 'Qc'], Board Cards=['8d', '5h', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.2765957446808511, 'bluff_count': 28, 'total_actions': 188, 'raise_count': 52}
Strategy for state (3, ('4c', 'Qc'), ('8d', '5h', '3d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.044. Total: -0.044
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5559999999999999. Total: -0.5559999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.044. Total: -0.044
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9c', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2751322751322751, 'bluff_count': 28, 'total_actions': 189, 'raise_count': 52}
Strategy for state (0, ('9c', 'Js'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.107. Total: -0.107
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.493. Total: -0.493
Regret updated for <class 'skeleton.actions.CallAction'>: -0.493. Total: -0.493
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['7d', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2736842105263158, 'bluff_count': 28, 'total_actions': 190, 'raise_count': 52}
Strategy for state (0, ('2h', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.0605
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -0.5395
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5395. Total: -0.5395
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['7d', '2h'], Board Cards=['6d', 'Jc', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2774869109947644, 'bluff_count': 28, 'total_actions': 191, 'raise_count': 53}
Strategy for state (3, ('2h', '7d'), ('6d', 'Jc', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0. Total: 0.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.6. Total: -0.6
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8666666666666667. Total: -0.8666666666666667
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['7d', '2h'], Board Cards=['6d', 'Jc', 'Kc', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.28125, 'bluff_count': 28, 'total_actions': 192, 'raise_count': 54}
Strategy for state (4, ('2h', '7d'), ('6d', 'Jc', 'Kc', 'Js')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.0605
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -0.5395
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8969468085106383. Total: -0.8969468085106383
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['6s', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27979274611398963, 'bluff_count': 28, 'total_actions': 193, 'raise_count': 54}
Strategy for state (0, ('6c', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2315. Total: -0.2315
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.36849999999999994. Total: -0.36849999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5185. Total: -0.5185
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6s', '6c'], Board Cards=['Qd', '8s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.27835051546391754, 'bluff_count': 28, 'total_actions': 194, 'raise_count': 54}
Strategy for state (3, ('6c', '6s'), ('Qd', '8s', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.096
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.096. Total: -0.096
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['6s', '6c'], Board Cards=['Qd', '8s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.28205128205128205, 'bluff_count': 29, 'total_actions': 195, 'raise_count': 55}
Strategy for state (3, ('6c', '6s'), ('Qd', '8s', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.16899999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -1.0310000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.802. Total: -0.802
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Tc', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28061224489795916, 'bluff_count': 29, 'total_actions': 196, 'raise_count': 55}
Strategy for state (0, ('6s', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Tc', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28426395939086296, 'bluff_count': 29, 'total_actions': 197, 'raise_count': 56}
Strategy for state (0, ('6s', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.089. Total: -0.16949999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.511. Total: -1.0305
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7443333333333334. Total: -1.2638333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ks', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2828282828282828, 'bluff_count': 29, 'total_actions': 198, 'raise_count': 56}
Strategy for state (0, ('Ks', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6675. Total: -0.6675
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ks', 'Qc'], Board Cards=['8s', 'Ts', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2814070351758794, 'bluff_count': 29, 'total_actions': 199, 'raise_count': 56}
Strategy for state (3, ('Ks', 'Qc'), ('8s', 'Ts', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.101. Total: -0.101
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.499. Total: -0.499
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.101. Total: -0.101
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['2c', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.28, 'bluff_count': 29, 'total_actions': 200, 'raise_count': 56}
Strategy for state (0, ('2c', '2s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.134. Total: -0.134
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46599999999999997. Total: -0.46599999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.46599999999999997. Total: -0.46599999999999997
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2c', '2s'], Board Cards=['5s', 'Qd', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.27860696517412936, 'bluff_count': 29, 'total_actions': 201, 'raise_count': 56}
Strategy for state (3, ('2c', '2s'), ('5s', 'Qd', '9s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.08. Total: -0.08
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['7c', 'Jd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27722772277227725, 'bluff_count': 29, 'total_actions': 202, 'raise_count': 56}
Strategy for state (0, ('7c', 'Jd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.0845
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -0.5155
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5155. Total: -0.5155
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5s', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27586206896551724, 'bluff_count': 30, 'total_actions': 203, 'raise_count': 56}
Strategy for state (0, ('5s', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9c', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27450980392156865, 'bluff_count': 30, 'total_actions': 204, 'raise_count': 56}
Strategy for state (0, ('3h', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.072
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.CallAction'>: -0.528. Total: -0.528
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['Ad', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2731707317073171, 'bluff_count': 30, 'total_actions': 205, 'raise_count': 56}
Strategy for state (0, ('7h', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5435. Total: -0.5435
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9c', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27184466019417475, 'bluff_count': 30, 'total_actions': 206, 'raise_count': 56}
Strategy for state (0, ('3d', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.CallAction'>: -0.532. Total: -0.532
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['9h', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27053140096618356, 'bluff_count': 30, 'total_actions': 207, 'raise_count': 56}
Strategy for state (0, ('7h', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1155. Total: -0.1155
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4845. Total: -0.4845
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1155. Total: -0.1155
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9h', '7h'], Board Cards=['Jc', '4h', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.2692307692307692, 'bluff_count': 30, 'total_actions': 208, 'raise_count': 56}
Strategy for state (3, ('7h', '9h'), ('Jc', '4h', '7s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.08. Total: -0.08
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['9h', '7h'], Board Cards=['Jc', '4h', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 30, 'total_actions': 209, 'raise_count': 57}
Strategy for state (3, ('7h', '9h'), ('Jc', '4h', '7s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.091. Total: -0.17099999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.509. Total: -1.029
Regret updated for <class 'skeleton.actions.CallAction'>: -0.784. Total: -0.784
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['9h', '7h'], Board Cards=['Jc', '4h', '7s', '8s']
Opponent tendencies updated: {'aggression_frequency': 0.2761904761904762, 'bluff_count': 30, 'total_actions': 210, 'raise_count': 58}
Strategy for state (4, ('7h', '9h'), ('Jc', '4h', '7s', '8s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7495. Total: -0.7495
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.14950000000000008. Total: 0.14950000000000008
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7495. Total: -0.7495
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['2h', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27488151658767773, 'bluff_count': 30, 'total_actions': 211, 'raise_count': 58}
Strategy for state (0, ('2h', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.085
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -0.515
Regret updated for <class 'skeleton.actions.CallAction'>: -0.515. Total: -0.515
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['2h', 'Th'], Board Cards=['Ac', 'Qh', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.2783018867924528, 'bluff_count': 30, 'total_actions': 212, 'raise_count': 59}
Strategy for state (3, ('2h', 'Th'), ('Ac', 'Qh', '4s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7733333333333334. Total: -0.7733333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['8c', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27699530516431925, 'bluff_count': 30, 'total_actions': 213, 'raise_count': 59}
Strategy for state (0, ('8c', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1245. Total: -0.1245
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4755. Total: -0.4755
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6255. Total: -0.6255
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2757009345794392, 'bluff_count': 30, 'total_actions': 214, 'raise_count': 59}
Strategy for state (0, ('5d', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5435. Total: -0.5435
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5h', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2744186046511628, 'bluff_count': 30, 'total_actions': 215, 'raise_count': 59}
Strategy for state (0, ('5h', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6890000000000001. Total: -0.6890000000000001
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['5s', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27314814814814814, 'bluff_count': 30, 'total_actions': 216, 'raise_count': 59}
Strategy for state (0, ('5s', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.075
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -0.525
Regret updated for <class 'skeleton.actions.CallAction'>: -0.525. Total: -0.525
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['8c', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.271889400921659, 'bluff_count': 30, 'total_actions': 217, 'raise_count': 59}
Strategy for state (0, ('8c', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.681. Total: -0.681
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
Round State: Street=0, My Cards=['4s', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2706422018348624, 'bluff_count': 30, 'total_actions': 218, 'raise_count': 59}
Strategy for state (0, ('4s', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5315. Total: -0.5315
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: Q
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6s', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2694063926940639, 'bluff_count': 31, 'total_actions': 219, 'raise_count': 59}
Strategy for state (0, ('3c', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['7h', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2681818181818182, 'bluff_count': 31, 'total_actions': 220, 'raise_count': 59}
Strategy for state (0, ('5h', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.114. Total: -0.114
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.486. Total: -0.486
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.114. Total: -0.114
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Kh', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2669683257918552, 'bluff_count': 31, 'total_actions': 221, 'raise_count': 59}
Strategy for state (0, ('Kc', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2375. Total: -0.2375
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3625. Total: -0.3625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3625. Total: -0.3625
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kh', 'Kc'], Board Cards=['9h', 'Th', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.26576576576576577, 'bluff_count': 31, 'total_actions': 222, 'raise_count': 59}
Strategy for state (3, ('Kc', 'Kh'), ('9h', 'Th', 'Jc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2305. Total: -0.2305
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.36949999999999994. Total: -0.36949999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Kh', 'Kc'], Board Cards=['9h', 'Th', 'Jc', 'Kd']
Opponent tendencies updated: {'aggression_frequency': 0.2645739910313901, 'bluff_count': 31, 'total_actions': 223, 'raise_count': 59}
Strategy for state (4, ('Kc', 'Kh'), ('9h', 'Th', 'Jc', 'Kd')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.8825. Total: -0.8825
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.2825. Total: 0.2825
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.8825. Total: -0.8825
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['8s', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26339285714285715, 'bluff_count': 31, 'total_actions': 224, 'raise_count': 59}
Strategy for state (0, ('8h', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.242. Total: -0.242
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.358. Total: -0.358
Regret updated for <class 'skeleton.actions.CallAction'>: -0.358. Total: -0.358
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['8s', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26222222222222225, 'bluff_count': 32, 'total_actions': 225, 'raise_count': 59}
Strategy for state (0, ('8h', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2415. Total: -0.4835
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3585. Total: -0.7164999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5085. Total: -0.8664999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8s', '8h'], Board Cards=['Tc', 'Ts', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.26548672566371684, 'bluff_count': 32, 'total_actions': 226, 'raise_count': 60}
Strategy for state (3, ('8h', '8s'), ('Tc', 'Ts', '8c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -1.0. Total: -1.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.4. Total: 0.4
Regret updated for <class 'skeleton.actions.CallAction'>: 0.15384615384615385. Total: 0.15384615384615385
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 16.5
sent answer: RaiseAction(amount=16.5)
Round State: Street=3, My Cards=['8s', '8h'], Board Cards=['Tc', 'Ts', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.2687224669603524, 'bluff_count': 32, 'total_actions': 227, 'raise_count': 61}
Strategy for state (3, ('8h', '8s'), ('Tc', 'Ts', '8c')): {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 0.7222222222222222, <class 'skeleton.actions.CallAction'>: 0.2777777777777778}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.9995. Total: -1.9995
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.3995000000000001. Total: 0.7995000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: 0.03586363636363643. Total: 0.18970979020979029
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 0.7222222222222222, <class 'skeleton.actions.CallAction'>: 0.2777777777777778}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['8s', '8h'], Board Cards=['Tc', 'Ts', '8c', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.2719298245614035, 'bluff_count': 32, 'total_actions': 228, 'raise_count': 62}
Strategy for state (4, ('8h', '8s'), ('Tc', 'Ts', '8c', 'Td')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.9175. Total: -0.9175
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.3175. Total: 0.3175
Regret updated for <class 'skeleton.actions.CallAction'>: -0.07052395209580842. Total: -0.07052395209580842
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['8s', '8h'], Board Cards=['Tc', 'Ts', '8c', 'Td', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.27510917030567683, 'bluff_count': 32, 'total_actions': 229, 'raise_count': 63}
Strategy for state (5, ('8h', '8s'), ('Tc', 'Ts', '8c', 'Td', 'Jc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.766. Total: -0.766
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.16600000000000004. Total: 0.16600000000000004
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.766. Total: -0.766
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 268
sent answer: RaiseAction(amount=268)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['8h', 'Qd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27391304347826084, 'bluff_count': 32, 'total_actions': 230, 'raise_count': 63}
Strategy for state (0, ('8h', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.07
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -0.53
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.07. Total: -0.07
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['8h', 'Qd'], Board Cards=['Ts', '7c', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.2727272727272727, 'bluff_count': 32, 'total_actions': 231, 'raise_count': 63}
Strategy for state (3, ('8h', 'Qd'), ('Ts', '7c', '7s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0275. Total: -0.0275
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5725. Total: -0.5725
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0275. Total: -0.0275
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jc', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.27155172413793105, 'bluff_count': 33, 'total_actions': 232, 'raise_count': 63}
Strategy for state (0, ('4d', 'Jc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5355. Total: -0.5355
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4c', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2703862660944206, 'bluff_count': 33, 'total_actions': 233, 'raise_count': 63}
Strategy for state (0, ('4c', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6910000000000001. Total: -0.6910000000000001
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['5c', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2692307692307692, 'bluff_count': 33, 'total_actions': 234, 'raise_count': 63}
Strategy for state (0, ('5c', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.0955
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5045. Total: -0.5045
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2680851063829787, 'bluff_count': 33, 'total_actions': 235, 'raise_count': 63}
Strategy for state (0, ('9c', 'Kd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.067. Total: -0.067
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9h', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2669491525423729, 'bluff_count': 34, 'total_actions': 236, 'raise_count': 63}
Strategy for state (0, ('8h', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.141. Total: -0.141
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.45899999999999996. Total: -0.45899999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.45899999999999996. Total: -0.45899999999999996
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9h', '8h'], Board Cards=['4s', 'Js', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.26582278481012656, 'bluff_count': 34, 'total_actions': 237, 'raise_count': 63}
Strategy for state (3, ('8h', '9h'), ('4s', 'Js', 'Ah')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -0.5449999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.695. Total: -0.695
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=4, My Cards=['9h', '8h'], Board Cards=['4s', 'Js', 'Ah', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.2689075630252101, 'bluff_count': 34, 'total_actions': 238, 'raise_count': 64}
Strategy for state (4, ('8h', '9h'), ('4s', 'Js', 'Ah', '7s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.166. Total: -0.166
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.43399999999999994. Total: -0.43399999999999994
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.166. Total: -0.166
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['9h', '8h'], Board Cards=['4s', 'Js', 'Ah', '7s', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.2719665271966527, 'bluff_count': 35, 'total_actions': 239, 'raise_count': 65}
Strategy for state (5, ('8h', '9h'), ('4s', 'Js', 'Ah', '7s', 'Td')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.94. Total: -0.94
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.33999999999999997. Total: 0.33999999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: 0.0024999999999999467. Total: 0.0024999999999999467
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6d', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2708333333333333, 'bluff_count': 35, 'total_actions': 240, 'raise_count': 65}
Strategy for state (0, ('5s', '6d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.104. Total: -0.104
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.496. Total: -0.496
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.104. Total: -0.104
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['6d', '5s'], Board Cards=['Js', '3d', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.2697095435684647, 'bluff_count': 35, 'total_actions': 241, 'raise_count': 65}
Strategy for state (3, ('5s', '6d'), ('Js', '3d', 'Ks')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.064. Total: -0.064
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['6d', '5s'], Board Cards=['Js', '3d', 'Ks', 'Ad']
Opponent tendencies updated: {'aggression_frequency': 0.26859504132231404, 'bluff_count': 35, 'total_actions': 242, 'raise_count': 65}
Strategy for state (4, ('5s', '6d'), ('Js', '3d', 'Ks', 'Ad')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.086. Total: -0.086
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9s', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2674897119341564, 'bluff_count': 35, 'total_actions': 243, 'raise_count': 65}
Strategy for state (0, ('9s', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0895. Total: -0.0895
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5105. Total: -0.5105
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5105. Total: -0.5105
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3c', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26639344262295084, 'bluff_count': 35, 'total_actions': 244, 'raise_count': 65}
Strategy for state (0, ('3c', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0785. Total: -0.0785
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3c', '7c'], Board Cards=['6d', 'Qc', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.2653061224489796, 'bluff_count': 35, 'total_actions': 245, 'raise_count': 65}
Strategy for state (3, ('3c', '7c'), ('6d', 'Qc', '3s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.066. Total: -0.066
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9h', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26422764227642276, 'bluff_count': 35, 'total_actions': 246, 'raise_count': 65}
Strategy for state (0, ('3d', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.063. Total: -0.063
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5369999999999999. Total: -0.5369999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5369999999999999. Total: -0.5369999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9h', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2631578947368421, 'bluff_count': 35, 'total_actions': 247, 'raise_count': 65}
Strategy for state (0, ('7s', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0795. Total: -0.0795
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2620967741935484, 'bluff_count': 35, 'total_actions': 248, 'raise_count': 65}
Strategy for state (0, ('3c', '4c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3h', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26104417670682734, 'bluff_count': 36, 'total_actions': 249, 'raise_count': 65}
Strategy for state (0, ('3h', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.0605
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -0.5395
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6895. Total: -0.6895
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3h', 'As'], Board Cards=['Ad', 'Qc', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.26, 'bluff_count': 36, 'total_actions': 250, 'raise_count': 65}
Strategy for state (3, ('3h', 'As'), ('Ad', 'Qc', '8c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.026. Total: -0.026
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.574. Total: -0.574
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.026. Total: -0.026
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3h', 'As'], Board Cards=['Ad', 'Qc', '8c']
Opponent tendencies updated: {'aggression_frequency': 0.26294820717131473, 'bluff_count': 37, 'total_actions': 251, 'raise_count': 66}
Strategy for state (3, ('3h', 'As'), ('Ad', 'Qc', '8c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.027. Total: -0.053
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.573. Total: -1.1469999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8063333333333333. Total: -0.8063333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['3h', 'As'], Board Cards=['Ad', 'Qc', '8c', '4h']
Opponent tendencies updated: {'aggression_frequency': 0.26587301587301587, 'bluff_count': 37, 'total_actions': 252, 'raise_count': 67}
Strategy for state (4, ('3h', 'As'), ('Ad', 'Qc', '8c', '4h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.756. Total: -0.756
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15600000000000003. Total: 0.15600000000000003
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.756. Total: -0.756
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['7h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2648221343873518, 'bluff_count': 37, 'total_actions': 253, 'raise_count': 67}
Strategy for state (0, ('3c', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2677165354330709, 'bluff_count': 38, 'total_actions': 254, 'raise_count': 68}
Strategy for state (0, ('3c', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.131
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -1.069
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7798333333333334. Total: -1.3023333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26666666666666666, 'bluff_count': 38, 'total_actions': 255, 'raise_count': 68}
Strategy for state (0, ('2d', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.061
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -0.5389999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6890000000000001. Total: -0.6890000000000001
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2d', 'Kh'], Board Cards=['6d', '3s', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.265625, 'bluff_count': 38, 'total_actions': 256, 'raise_count': 68}
Strategy for state (3, ('2d', 'Kh'), ('6d', '3s', '2s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0215. Total: -0.0215
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5785. Total: -0.5785
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0215. Total: -0.0215
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qs', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26459143968871596, 'bluff_count': 38, 'total_actions': 257, 'raise_count': 68}
Strategy for state (0, ('6d', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.052
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.5479999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5479999999999999. Total: -0.5479999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3d', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26356589147286824, 'bluff_count': 39, 'total_actions': 258, 'raise_count': 68}
Strategy for state (0, ('3c', '3d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.258. Total: -0.258
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34199999999999997. Total: -0.34199999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.492. Total: -0.492
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['3d', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26640926640926643, 'bluff_count': 39, 'total_actions': 259, 'raise_count': 69}
Strategy for state (0, ('3c', '3d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.232. Total: -0.49
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.368. Total: -0.71
Regret updated for <class 'skeleton.actions.CallAction'>: -0.643. Total: -1.135
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qc', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2653846153846154, 'bluff_count': 39, 'total_actions': 260, 'raise_count': 69}
Strategy for state (0, ('2s', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0555. Total: -0.0555
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5445. Total: -0.5445
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5445. Total: -0.5445
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qc', '2s'], Board Cards=['Qd', '2d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.26436781609195403, 'bluff_count': 39, 'total_actions': 261, 'raise_count': 69}
Strategy for state (3, ('2s', 'Qc'), ('Qd', '2d', '7s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.143. Total: -0.143
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.45699999999999996. Total: -0.45699999999999996
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.143. Total: -0.143
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ac', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2633587786259542, 'bluff_count': 39, 'total_actions': 262, 'raise_count': 69}
Strategy for state (0, ('4c', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1055. Total: -0.1055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4945. Total: -0.4945
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1055. Total: -0.1055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2623574144486692, 'bluff_count': 39, 'total_actions': 263, 'raise_count': 69}
Strategy for state (0, ('3c', '4c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.093. Total: -0.1875
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.507. Total: -1.0125
Regret updated for <class 'skeleton.actions.CallAction'>: -0.507. Total: -1.0125
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Kh', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26136363636363635, 'bluff_count': 39, 'total_actions': 264, 'raise_count': 69}
Strategy for state (0, ('Kh', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.226. Total: -0.226
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.374. Total: -0.374
Regret updated for <class 'skeleton.actions.CallAction'>: -0.374. Total: -0.374
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['7h', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.26037735849056604, 'bluff_count': 39, 'total_actions': 265, 'raise_count': 69}
Strategy for state (0, ('7h', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6715. Total: -0.6715
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['6h', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2593984962406015, 'bluff_count': 39, 'total_actions': 266, 'raise_count': 69}
Strategy for state (0, ('6h', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5425. Total: -0.5425
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['3h', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25842696629213485, 'bluff_count': 40, 'total_actions': 267, 'raise_count': 69}
Strategy for state (0, ('3h', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0835. Total: -0.0835
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5165. Total: -0.5165
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0835. Total: -0.0835
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3h', '9h'], Board Cards=['7h', 'Kc', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.2574626865671642, 'bluff_count': 40, 'total_actions': 268, 'raise_count': 69}
Strategy for state (3, ('3h', '9h'), ('7h', 'Kc', '6d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.058. Total: -0.058
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['7d', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25650557620817843, 'bluff_count': 40, 'total_actions': 269, 'raise_count': 69}
Strategy for state (0, ('7d', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.091. Total: -0.091
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.509. Total: -0.509
Regret updated for <class 'skeleton.actions.CallAction'>: -0.509. Total: -0.509
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Th', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25555555555555554, 'bluff_count': 40, 'total_actions': 270, 'raise_count': 69}
Strategy for state (0, ('8c', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1125. Total: -0.1125
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4875. Total: -0.4875
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6375. Total: -0.6375
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['9d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25461254612546125, 'bluff_count': 40, 'total_actions': 271, 'raise_count': 69}
Strategy for state (0, ('9d', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1095. Total: -0.1095
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4905. Total: -0.4905
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4905. Total: -0.4905
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['9d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2536764705882353, 'bluff_count': 41, 'total_actions': 272, 'raise_count': 69}
Strategy for state (0, ('9d', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1045. Total: -0.214
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4955. Total: -0.986
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6455. Total: -1.136
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['9d', 'Tc'], Board Cards=['Jd', '4d', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2564102564102564, 'bluff_count': 41, 'total_actions': 273, 'raise_count': 70}
Strategy for state (3, ('9d', 'Tc'), ('Jd', '4d', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.154. Total: -0.154
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44599999999999995. Total: -0.44599999999999995
Regret updated for <class 'skeleton.actions.CallAction'>: -0.721. Total: -0.721
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['6c', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25547445255474455, 'bluff_count': 41, 'total_actions': 274, 'raise_count': 70}
Strategy for state (0, ('5c', '6c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.117. Total: -0.117
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.483. Total: -0.483
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.117. Total: -0.117
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6c', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2581818181818182, 'bluff_count': 41, 'total_actions': 275, 'raise_count': 71}
Strategy for state (0, ('5c', '6c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1385. Total: -0.2555
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46149999999999997. Total: -0.9444999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6948333333333334. Total: -0.6948333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Qs', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2572463768115942, 'bluff_count': 41, 'total_actions': 276, 'raise_count': 71}
Strategy for state (0, ('5c', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.1195
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -1.0804999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5449999999999999. Total: -1.2305
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['9h', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2563176895306859, 'bluff_count': 41, 'total_actions': 277, 'raise_count': 71}
Strategy for state (0, ('8c', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1115. Total: -0.1115
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4885. Total: -0.4885
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1115. Total: -0.1115
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['9h', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25539568345323743, 'bluff_count': 42, 'total_actions': 278, 'raise_count': 71}
Strategy for state (0, ('6s', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0735. Total: -0.0735
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5265. Total: -0.5265
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5265. Total: -0.5265
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9h', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25806451612903225, 'bluff_count': 42, 'total_actions': 279, 'raise_count': 72}
Strategy for state (0, ('6s', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.158
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -1.0419999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7488333333333334. Total: -1.2753333333333332
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Qh', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2571428571428571, 'bluff_count': 42, 'total_actions': 280, 'raise_count': 72}
Strategy for state (0, ('8c', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6815. Total: -0.6815
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Js', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25622775800711745, 'bluff_count': 42, 'total_actions': 281, 'raise_count': 72}
Strategy for state (0, ('5s', 'Js'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0855. Total: -0.0855
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5145. Total: -0.5145
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5145. Total: -0.5145
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['6h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2553191489361702, 'bluff_count': 43, 'total_actions': 282, 'raise_count': 72}
Strategy for state (0, ('4s', '6h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6695. Total: -0.6695
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6h', '4s'], Board Cards=['3h', '5s', 'Kd']
Opponent tendencies updated: {'aggression_frequency': 0.2579505300353357, 'bluff_count': 43, 'total_actions': 283, 'raise_count': 73}
Strategy for state (3, ('4s', '6h'), ('3h', '5s', 'Kd')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.232. Total: -0.232
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.368. Total: -0.368
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.232. Total: -0.232
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['5c', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25704225352112675, 'bluff_count': 43, 'total_actions': 284, 'raise_count': 73}
Strategy for state (0, ('5c', 'Jc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0895. Total: -0.0895
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5105. Total: -0.5105
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5105. Total: -0.5105
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['5c', 'Jc'], Board Cards=['2c', 'As', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.256140350877193, 'bluff_count': 43, 'total_actions': 285, 'raise_count': 73}
Strategy for state (3, ('5c', 'Jc'), ('2c', 'As', 'Jd')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.074. Total: -0.074
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.526. Total: -0.526
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.074. Total: -0.074
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['5c', 'Jc'], Board Cards=['2c', 'As', 'Jd', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.25874125874125875, 'bluff_count': 43, 'total_actions': 286, 'raise_count': 74}
Strategy for state (4, ('5c', 'Jc'), ('2c', 'As', 'Jd', '2d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.73. Total: -0.73
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.13. Total: 0.13
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.73. Total: -0.73
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['5c', 'Jc'], Board Cards=['2c', 'As', 'Jd', '2d', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.2613240418118467, 'bluff_count': 43, 'total_actions': 287, 'raise_count': 75}
Strategy for state (5, ('5c', 'Jc'), ('2c', 'As', 'Jd', '2d', '4d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6705. Total: -0.6705
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.07050000000000001. Total: 0.07050000000000001
Regret updated for <class 'skeleton.actions.CallAction'>: -0.25257692307692314. Total: -0.25257692307692314
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 36.0
sent answer: RaiseAction(amount=36.0)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Qc', '6d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2604166666666667, 'bluff_count': 43, 'total_actions': 288, 'raise_count': 75}
Strategy for state (0, ('6d', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Ks', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25951557093425603, 'bluff_count': 43, 'total_actions': 289, 'raise_count': 75}
Strategy for state (0, ('9s', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.159
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -1.041
Regret updated for <class 'skeleton.actions.CallAction'>: -0.524. Total: -1.041
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Jd', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25862068965517243, 'bluff_count': 43, 'total_actions': 290, 'raise_count': 75}
Strategy for state (0, ('Ah', 'Jd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.137
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -1.063
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.083. Total: -0.083
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Ks', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25773195876288657, 'bluff_count': 43, 'total_actions': 291, 'raise_count': 75}
Strategy for state (0, ('3s', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.083
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.517
Regret updated for <class 'skeleton.actions.CallAction'>: -0.517. Total: -0.517
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Qs', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2568493150684932, 'bluff_count': 43, 'total_actions': 292, 'raise_count': 75}
Strategy for state (0, ('9d', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CallAction'>: -0.52. Total: -0.52
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qs', '9d'], Board Cards=['3h', '5s', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.25597269624573377, 'bluff_count': 43, 'total_actions': 293, 'raise_count': 75}
Strategy for state (3, ('9d', 'Qs'), ('3h', '5s', 'Ts')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6819999999999999. Total: -0.6819999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Ad', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25510204081632654, 'bluff_count': 44, 'total_actions': 294, 'raise_count': 75}
Strategy for state (0, ('Ad', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0525. Total: -0.0525
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5475. Total: -0.5475
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5475. Total: -0.5475
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Qh', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2542372881355932, 'bluff_count': 44, 'total_actions': 295, 'raise_count': 75}
Strategy for state (0, ('Kd', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.122
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -1.0779999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6965. Total: -1.228
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Kc', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2533783783783784, 'bluff_count': 45, 'total_actions': 296, 'raise_count': 75}
Strategy for state (0, ('4s', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.056
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.5439999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5439999999999999. Total: -0.5439999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['6d', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25252525252525254, 'bluff_count': 45, 'total_actions': 297, 'raise_count': 75}
Strategy for state (0, ('6d', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6825. Total: -0.6825
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', '9s'], Board Cards=['Ah', 'Jh', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.2516778523489933, 'bluff_count': 45, 'total_actions': 298, 'raise_count': 75}
Strategy for state (3, ('6d', '9s'), ('Ah', 'Jh', '7h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.036. Total: -0.036
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.564. Total: -0.564
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.036. Total: -0.036
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['6d', '9s'], Board Cards=['Ah', 'Jh', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.25418060200668896, 'bluff_count': 45, 'total_actions': 299, 'raise_count': 76}
Strategy for state (3, ('6d', '9s'), ('Ah', 'Jh', '7h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.086
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -1.1139999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8388888888888888. Total: -0.8388888888888888
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['6d', '9s'], Board Cards=['Ah', 'Jh', '7h', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.25666666666666665, 'bluff_count': 45, 'total_actions': 300, 'raise_count': 77}
Strategy for state (4, ('6d', '9s'), ('Ah', 'Jh', '7h', 'Qc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.08. Total: -0.08
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['9c', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2558139534883721, 'bluff_count': 45, 'total_actions': 301, 'raise_count': 77}
Strategy for state (0, ('9c', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.071
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.529
Regret updated for <class 'skeleton.actions.CallAction'>: -0.529. Total: -0.529
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Kh', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25496688741721857, 'bluff_count': 46, 'total_actions': 302, 'raise_count': 77}
Strategy for state (0, ('Kh', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.5125
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0875. Total: -0.0875
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Qs', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25412541254125415, 'bluff_count': 46, 'total_actions': 303, 'raise_count': 77}
Strategy for state (0, ('Qs', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1005. Total: -0.1005
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49949999999999994. Total: -0.49949999999999994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.49949999999999994. Total: -0.49949999999999994
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qs', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2565789473684211, 'bluff_count': 46, 'total_actions': 304, 'raise_count': 78}
Strategy for state (0, ('Qs', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.173
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -1.027
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7608333333333334. Total: -1.2603333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['5d', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25573770491803277, 'bluff_count': 47, 'total_actions': 305, 'raise_count': 78}
Strategy for state (0, ('3d', '5d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.113. Total: -0.113
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.487. Total: -0.487
Regret updated for <class 'skeleton.actions.CallAction'>: -0.487. Total: -0.487
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['2c', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2549019607843137, 'bluff_count': 47, 'total_actions': 306, 'raise_count': 78}
Strategy for state (0, ('2c', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.08. Total: -0.08
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.52. Total: -0.52
Regret updated for <class 'skeleton.actions.CallAction'>: -0.67. Total: -0.67
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2c', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25732899022801303, 'bluff_count': 47, 'total_actions': 307, 'raise_count': 79}
Strategy for state (0, ('2c', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.14350000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -1.0565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8115. Total: -1.4815
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['2c', '7c'], Board Cards=['Js', 'Th', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.2597402597402597, 'bluff_count': 47, 'total_actions': 308, 'raise_count': 80}
Strategy for state (3, ('2c', '7c'), ('Js', 'Th', '2h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.033. Total: -0.033
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.567. Total: -0.567
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.033. Total: -0.033
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Ac', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2588996763754045, 'bluff_count': 47, 'total_actions': 309, 'raise_count': 80}
Strategy for state (0, ('Ac', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['9s', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25806451612903225, 'bluff_count': 47, 'total_actions': 310, 'raise_count': 80}
Strategy for state (0, ('9s', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0905. Total: -0.0905
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5095. Total: -0.5095
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6595. Total: -0.6595
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Qd', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2572347266881029, 'bluff_count': 48, 'total_actions': 311, 'raise_count': 80}
Strategy for state (0, ('9d', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.0815
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -0.5185
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5185. Total: -0.5185
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['7c', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2564102564102564, 'bluff_count': 49, 'total_actions': 312, 'raise_count': 80}
Strategy for state (0, ('3d', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['7c', '3d'], Board Cards=['3h', 'Qd', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.25559105431309903, 'bluff_count': 49, 'total_actions': 313, 'raise_count': 80}
Strategy for state (3, ('3d', '7c'), ('3h', 'Qd', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.213. Total: -0.213
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.387. Total: -0.387
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.213. Total: -0.213
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['2d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25477707006369427, 'bluff_count': 50, 'total_actions': 314, 'raise_count': 80}
Strategy for state (0, ('2d', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.697. Total: -0.697
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2d', 'Qs'], Board Cards=['Th', '8s', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.25396825396825395, 'bluff_count': 50, 'total_actions': 315, 'raise_count': 80}
Strategy for state (3, ('2d', 'Qs'), ('Th', '8s', '2c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.03. Total: -0.03
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.57. Total: -0.57
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.03. Total: -0.03
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['2d', 'Qs'], Board Cards=['Th', '8s', '2c', 'Jh']
Opponent tendencies updated: {'aggression_frequency': 0.25316455696202533, 'bluff_count': 50, 'total_actions': 316, 'raise_count': 80}
Strategy for state (4, ('2d', 'Qs'), ('Th', '8s', '2c', 'Jh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6. Total: -0.6
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.0. Total: 0.0
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.6. Total: -0.6
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['8c', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25236593059936907, 'bluff_count': 51, 'total_actions': 317, 'raise_count': 80}
Strategy for state (0, ('8c', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0435. Total: -0.0435
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5565. Total: -0.5565
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5565. Total: -0.5565
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['8h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25157232704402516, 'bluff_count': 51, 'total_actions': 318, 'raise_count': 80}
Strategy for state (0, ('8h', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.0885
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.5115
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6615. Total: -0.6615
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8h', 'Kh'], Board Cards=['9c', 'Qs', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.2507836990595611, 'bluff_count': 51, 'total_actions': 319, 'raise_count': 80}
Strategy for state (3, ('8h', 'Kh'), ('9c', 'Qs', '5c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.568. Total: -0.568
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.032. Total: -0.032
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['8h', 'Kh'], Board Cards=['9c', 'Qs', '5c', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.253125, 'bluff_count': 51, 'total_actions': 320, 'raise_count': 81}
Strategy for state (4, ('8h', 'Kh'), ('9c', 'Qs', '5c', '6d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1635. Total: -0.1635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4365. Total: -0.4365
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1635. Total: -0.1635
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4.7088
sent answer: RaiseAction(amount=4.7088)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Qh', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2523364485981308, 'bluff_count': 52, 'total_actions': 321, 'raise_count': 81}
Strategy for state (0, ('7c', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5509999999999999. Total: -0.5509999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Ks', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2515527950310559, 'bluff_count': 52, 'total_actions': 322, 'raise_count': 81}
Strategy for state (0, ('Ah', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0465. Total: -0.0465
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5535. Total: -0.5535
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7035. Total: -0.7035
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ks', 'Ah'], Board Cards=['6h', 'Td', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.25077399380804954, 'bluff_count': 52, 'total_actions': 323, 'raise_count': 81}
Strategy for state (3, ('Ah', 'Ks'), ('6h', 'Td', '2d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.014. Total: -0.014
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.586. Total: -0.586
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.014. Total: -0.014
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['6c', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 52, 'total_actions': 324, 'raise_count': 81}
Strategy for state (0, ('6c', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0995. Total: -0.0995
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5005. Total: -0.5005
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5005. Total: -0.5005
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['6c', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24923076923076923, 'bluff_count': 52, 'total_actions': 325, 'raise_count': 81}
Strategy for state (0, ('6c', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.106. Total: -0.20550000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.494. Total: -0.9944999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.644. Total: -1.1444999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6c', '9c'], Board Cards=['Ts', 'Qs', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.25153374233128833, 'bluff_count': 52, 'total_actions': 326, 'raise_count': 82}
Strategy for state (3, ('6c', '9c'), ('Ts', 'Qs', 'Th')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.02. Total: -0.02
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.58. Total: -0.58
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8747368421052631. Total: -0.8747368421052631
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=4, My Cards=['6c', '9c'], Board Cards=['Ts', 'Qs', 'Th', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.25382262996941896, 'bluff_count': 52, 'total_actions': 327, 'raise_count': 83}
Strategy for state (4, ('6c', '9c'), ('Ts', 'Qs', 'Th', '7h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.177. Total: -0.177
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.423. Total: -0.423
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7986097560975609. Total: -0.7986097560975609
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['6d', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2530487804878049, 'bluff_count': 53, 'total_actions': 328, 'raise_count': 83}
Strategy for state (0, ('6d', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.0655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.5345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6845. Total: -0.6845
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['6d', 'Th'], Board Cards=['8s', 'Ks', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.2553191489361702, 'bluff_count': 53, 'total_actions': 329, 'raise_count': 84}
Strategy for state (3, ('6d', 'Th'), ('8s', 'Ks', '6c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.043. Total: -0.043
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5569999999999999. Total: -0.5569999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.043. Total: -0.043
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['Tc', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2545454545454545, 'bluff_count': 53, 'total_actions': 330, 'raise_count': 84}
Strategy for state (0, ('Tc', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2365. Total: -0.2365
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3635. Total: -0.3635
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3635. Total: -0.3635
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['3c', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2537764350453172, 'bluff_count': 54, 'total_actions': 331, 'raise_count': 84}
Strategy for state (0, ('3c', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.683. Total: -0.683
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 2
Round State: Street=0, My Cards=['5d', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25301204819277107, 'bluff_count': 54, 'total_actions': 332, 'raise_count': 84}
Strategy for state (0, ('5d', '7s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3c', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25225225225225223, 'bluff_count': 55, 'total_actions': 333, 'raise_count': 84}
Strategy for state (0, ('3c', '8c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ad', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25149700598802394, 'bluff_count': 55, 'total_actions': 334, 'raise_count': 84}
Strategy for state (0, ('Ad', 'As'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.238. Total: -0.6995
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.362. Total: -1.1004999999999998
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.238. Total: -0.238
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Ad', 'As'], Board Cards=['3h', 'Jc', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.2507462686567164, 'bluff_count': 55, 'total_actions': 335, 'raise_count': 84}
Strategy for state (3, ('Ad', 'As'), ('3h', 'Jc', '4d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.096
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.096. Total: -0.096
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['Ad', 'As'], Board Cards=['3h', 'Jc', '4d', 'Ac']
Opponent tendencies updated: {'aggression_frequency': 0.25297619047619047, 'bluff_count': 55, 'total_actions': 336, 'raise_count': 85}
Strategy for state (4, ('Ad', 'As'), ('3h', 'Jc', '4d', 'Ac')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.982. Total: -0.982
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.382. Total: 0.382
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.982. Total: -0.982
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['5h', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2522255192878338, 'bluff_count': 55, 'total_actions': 337, 'raise_count': 85}
Strategy for state (0, ('4h', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.124. Total: -0.124
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.476. Total: -0.476
Regret updated for <class 'skeleton.actions.CallAction'>: -0.476. Total: -0.476
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['7d', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2514792899408284, 'bluff_count': 55, 'total_actions': 338, 'raise_count': 85}
Strategy for state (0, ('2h', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0415. Total: -0.10200000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5585. Total: -1.0979999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5585. Total: -1.0979999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ks', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25073746312684364, 'bluff_count': 55, 'total_actions': 339, 'raise_count': 85}
Strategy for state (0, ('4d', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6925. Total: -0.6925
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3h', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 56, 'total_actions': 340, 'raise_count': 85}
Strategy for state (0, ('2c', '3h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['3h', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24926686217008798, 'bluff_count': 57, 'total_actions': 341, 'raise_count': 85}
Strategy for state (0, ('2c', '3h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.1345
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -1.0655
Regret updated for <class 'skeleton.actions.CallAction'>: -0.693. Total: -1.2155
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['5s', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24853801169590642, 'bluff_count': 58, 'total_actions': 342, 'raise_count': 85}
Strategy for state (0, ('5s', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0935. Total: -0.0935
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5065. Total: -0.5065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6565. Total: -0.6565
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ts', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2478134110787172, 'bluff_count': 58, 'total_actions': 343, 'raise_count': 85}
Strategy for state (0, ('3d', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.0655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.5345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5345. Total: -0.5345
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['7c', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24709302325581395, 'bluff_count': 58, 'total_actions': 344, 'raise_count': 85}
Strategy for state (0, ('7c', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0845. Total: -0.0845
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5155. Total: -0.5155
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0845. Total: -0.0845
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['5h', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2463768115942029, 'bluff_count': 58, 'total_actions': 345, 'raise_count': 85}
Strategy for state (0, ('5h', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.099. Total: -0.099
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.501. Total: -0.501
Regret updated for <class 'skeleton.actions.CallAction'>: -0.501. Total: -0.501
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5h', 'Jh'], Board Cards=['Kh', 'Ts', '8h']
Opponent tendencies updated: {'aggression_frequency': 0.24566473988439305, 'bluff_count': 59, 'total_actions': 346, 'raise_count': 85}
Strategy for state (3, ('5h', 'Jh'), ('Kh', 'Ts', '8h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.24. Total: -0.24
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.36. Total: -0.36
Regret updated for <class 'skeleton.actions.CallAction'>: -0.51. Total: -0.51
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=4, My Cards=['5h', 'Jh'], Board Cards=['Kh', 'Ts', '8h', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2478386167146974, 'bluff_count': 59, 'total_actions': 347, 'raise_count': 86}
Strategy for state (4, ('5h', 'Jh'), ('Kh', 'Ts', '8h', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.209. Total: -0.209
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.391. Total: -0.391
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.209. Total: -0.209
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['6h', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2471264367816092, 'bluff_count': 60, 'total_actions': 348, 'raise_count': 86}
Strategy for state (0, ('6h', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.083
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.517
Regret updated for <class 'skeleton.actions.CallAction'>: -0.667. Total: -0.667
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['6h', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2492836676217765, 'bluff_count': 60, 'total_actions': 349, 'raise_count': 87}
Strategy for state (0, ('6h', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.1605
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -1.0394999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7975. Total: -1.4645000000000001
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6h', 'Ts'], Board Cards=['Tc', 'Qc', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.25142857142857145, 'bluff_count': 60, 'total_actions': 350, 'raise_count': 88}
Strategy for state (3, ('6h', 'Ts'), ('Tc', 'Qc', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0405. Total: -0.0405
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5595. Total: -0.5595
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0405. Total: -0.0405
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2s', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25071225071225073, 'bluff_count': 61, 'total_actions': 351, 'raise_count': 88}
Strategy for state (0, ('2s', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5175. Total: -0.5175
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3h', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 61, 'total_actions': 352, 'raise_count': 88}
Strategy for state (0, ('3h', '8c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.069
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -0.5309999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.681. Total: -0.681
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3h', '8c'], Board Cards=['7c', '6c', '6s']
Opponent tendencies updated: {'aggression_frequency': 0.24929178470254956, 'bluff_count': 61, 'total_actions': 353, 'raise_count': 88}
Strategy for state (3, ('3h', '8c'), ('7c', '6c', '6s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0225. Total: -0.0225
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5775. Total: -0.5775
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0225. Total: -0.0225
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jh', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24858757062146894, 'bluff_count': 61, 'total_actions': 354, 'raise_count': 88}
Strategy for state (0, ('9h', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0985. Total: -0.0985
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5015. Total: -0.5015
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5015. Total: -0.5015
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Jh', '9h'], Board Cards=['Ad', 'Kc', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.2507042253521127, 'bluff_count': 61, 'total_actions': 355, 'raise_count': 89}
Strategy for state (3, ('9h', 'Jh'), ('Ad', 'Kc', 'Th')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.149. Total: -0.149
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.45099999999999996. Total: -0.45099999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6971538461538461. Total: -0.6971538461538461
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['4s', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 62, 'total_actions': 356, 'raise_count': 89}
Strategy for state (0, ('4s', 'Js'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.082
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -0.518
Regret updated for <class 'skeleton.actions.CallAction'>: -0.668. Total: -0.668
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qd', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24929971988795518, 'bluff_count': 63, 'total_actions': 357, 'raise_count': 89}
Strategy for state (0, ('3c', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.04. Total: -0.04
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5599999999999999. Total: -0.5599999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5599999999999999. Total: -0.5599999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Qd', '3c'], Board Cards=['Jh', 'Ah', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.24860335195530725, 'bluff_count': 63, 'total_actions': 358, 'raise_count': 89}
Strategy for state (3, ('3c', 'Qd'), ('Jh', 'Ah', '9d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.025. Total: -0.025
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.575. Total: -0.575
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.025. Total: -0.025
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['9h', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2479108635097493, 'bluff_count': 63, 'total_actions': 359, 'raise_count': 89}
Strategy for state (0, ('7c', '9h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1015. Total: -0.1015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49849999999999994. Total: -0.49849999999999994
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1015. Total: -0.1015
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['2d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24722222222222223, 'bluff_count': 63, 'total_actions': 360, 'raise_count': 89}
Strategy for state (0, ('2d', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0505. Total: -0.0505
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5495. Total: -0.5495
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5495. Total: -0.5495
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['2d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24653739612188366, 'bluff_count': 63, 'total_actions': 361, 'raise_count': 89}
Strategy for state (0, ('2d', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.1165
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -1.0835
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6839999999999999. Total: -1.2334999999999998
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2d', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24861878453038674, 'bluff_count': 63, 'total_actions': 362, 'raise_count': 90}
Strategy for state (0, ('2d', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.061. Total: -0.1775
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5389999999999999. Total: -1.6224999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8140000000000001. Total: -2.0475
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Ah', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24793388429752067, 'bluff_count': 63, 'total_actions': 363, 'raise_count': 90}
Strategy for state (0, ('5s', 'Ah'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.0695
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.5305
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0695. Total: -0.0695
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ah', '5s'], Board Cards=['8c', '7h', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.24725274725274726, 'bluff_count': 63, 'total_actions': 364, 'raise_count': 90}
Strategy for state (3, ('5s', 'Ah'), ('8c', '7h', '2c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.051. Total: -0.051
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Qc', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2465753424657534, 'bluff_count': 63, 'total_actions': 365, 'raise_count': 90}
Strategy for state (0, ('Kh', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5325. Total: -0.5325
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Th', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2459016393442623, 'bluff_count': 64, 'total_actions': 366, 'raise_count': 90}
Strategy for state (0, ('Ac', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.CallAction'>: -0.672. Total: -0.672
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['Jc', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2452316076294278, 'bluff_count': 64, 'total_actions': 367, 'raise_count': 90}
Strategy for state (0, ('Jc', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.249. Total: -0.249
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.351. Total: -0.351
Regret updated for <class 'skeleton.actions.CallAction'>: -0.351. Total: -0.351
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 4
Round State: Street=0, My Cards=['3s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24456521739130435, 'bluff_count': 64, 'total_actions': 368, 'raise_count': 90}
Strategy for state (0, ('3s', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.081
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.519
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.081. Total: -0.081
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24661246612466126, 'bluff_count': 64, 'total_actions': 369, 'raise_count': 91}
Strategy for state (0, ('3s', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.069. Total: -0.15000000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5309999999999999. Total: -1.0499999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7643333333333333. Total: -0.7643333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['3s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24864864864864866, 'bluff_count': 64, 'total_actions': 370, 'raise_count': 92}
Strategy for state (0, ('3s', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.22950000000000004
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -1.5704999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8205. Total: -1.5848333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3s', 'Ts'], Board Cards=['7s', '6h', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.25067385444743934, 'bluff_count': 64, 'total_actions': 371, 'raise_count': 93}
Strategy for state (3, ('3s', 'Ts'), ('7s', '6h', '2s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.228. Total: -0.228
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.372. Total: -0.372
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.228. Total: -0.228
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['3s', 'Ts'], Board Cards=['7s', '6h', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.25268817204301075, 'bluff_count': 64, 'total_actions': 372, 'raise_count': 94}
Strategy for state (3, ('3s', 'Ts'), ('7s', '6h', '2s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.228. Total: -0.456
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.372. Total: -0.744
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6886666666666666. Total: -0.6886666666666666
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['8h', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2520107238605898, 'bluff_count': 64, 'total_actions': 373, 'raise_count': 94}
Strategy for state (0, ('5d', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5205. Total: -0.5205
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8h', '5d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2540106951871658, 'bluff_count': 64, 'total_actions': 374, 'raise_count': 95}
Strategy for state (0, ('5d', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.161
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -1.039
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7518333333333334. Total: -1.2723333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['6d', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25333333333333335, 'bluff_count': 64, 'total_actions': 375, 'raise_count': 95}
Strategy for state (0, ('6d', '8h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.078. Total: -0.078
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['6d', '8h'], Board Cards=['Ah', '3c', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.2526595744680851, 'bluff_count': 64, 'total_actions': 376, 'raise_count': 95}
Strategy for state (3, ('6d', '8h'), ('Ah', '3c', '2s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.017
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.583
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.017. Total: -0.017
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['6d', '8h'], Board Cards=['Ah', '3c', '2s', 'Qs']
Opponent tendencies updated: {'aggression_frequency': 0.2519893899204244, 'bluff_count': 64, 'total_actions': 377, 'raise_count': 95}
Strategy for state (4, ('6d', '8h'), ('Ah', '3c', '2s', 'Qs')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.072
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.072. Total: -0.072
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['5s', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25132275132275134, 'bluff_count': 64, 'total_actions': 378, 'raise_count': 95}
Strategy for state (0, ('3h', '5s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0985. Total: -0.0985
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5015. Total: -0.5015
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5015. Total: -0.5015
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['6c', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25065963060686014, 'bluff_count': 64, 'total_actions': 379, 'raise_count': 95}
Strategy for state (0, ('6c', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1025. Total: -0.1025
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4975. Total: -0.4975
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6475. Total: -0.6475
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['7d', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 64, 'total_actions': 380, 'raise_count': 95}
Strategy for state (0, ('4d', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5025. Total: -0.5025
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['7d', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24934383202099739, 'bluff_count': 65, 'total_actions': 381, 'raise_count': 95}
Strategy for state (0, ('4d', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.1875
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -1.0125
Regret updated for <class 'skeleton.actions.CallAction'>: -0.66. Total: -1.1625
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Js', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2486910994764398, 'bluff_count': 65, 'total_actions': 382, 'raise_count': 95}
Strategy for state (0, ('9c', 'Js'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0995. Total: -0.20650000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5005. Total: -0.9934999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0995. Total: -0.0995
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['3d', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24804177545691905, 'bluff_count': 65, 'total_actions': 383, 'raise_count': 95}
Strategy for state (0, ('3d', '8c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0565. Total: -0.0565
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5435. Total: -0.5435
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5435. Total: -0.5435
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['9d', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24739583333333334, 'bluff_count': 65, 'total_actions': 384, 'raise_count': 95}
Strategy for state (0, ('4h', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.059
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -0.5409999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -0.5409999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9d', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24935064935064935, 'bluff_count': 65, 'total_actions': 385, 'raise_count': 96}
Strategy for state (0, ('4h', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.1235
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -1.0764999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7688333333333334. Total: -1.3098333333333332
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['7c', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24870466321243523, 'bluff_count': 66, 'total_actions': 386, 'raise_count': 96}
Strategy for state (0, ('5h', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.112. Total: -0.20600000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.488. Total: -0.994
Regret updated for <class 'skeleton.actions.CallAction'>: -0.638. Total: -0.638
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['7c', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25064599483204136, 'bluff_count': 66, 'total_actions': 387, 'raise_count': 97}
Strategy for state (0, ('5h', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0935. Total: -0.2995
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5065. Total: -1.5005
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7815. Total: -1.4195
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Ks', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 66, 'total_actions': 388, 'raise_count': 97}
Strategy for state (0, ('4d', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.1235
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -1.0765
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -1.2265000000000001
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Qd', '9h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2493573264781491, 'bluff_count': 66, 'total_actions': 389, 'raise_count': 97}
Strategy for state (0, ('9h', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.0815
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -0.5185
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6685. Total: -0.6685
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Qd', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24871794871794872, 'bluff_count': 66, 'total_actions': 390, 'raise_count': 97}
Strategy for state (0, ('8c', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.135
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -1.065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5295. Total: -0.5295
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qd', '8c'], Board Cards=['Js', 'Kh', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.24808184143222506, 'bluff_count': 66, 'total_actions': 391, 'raise_count': 97}
Strategy for state (3, ('8c', 'Qd'), ('Js', 'Kh', '5c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.029. Total: -0.029
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.571. Total: -0.571
Regret updated for <class 'skeleton.actions.CallAction'>: -0.721. Total: -0.721
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['9c', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24744897959183673, 'bluff_count': 66, 'total_actions': 392, 'raise_count': 97}
Strategy for state (0, ('2d', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0515. Total: -0.0515
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5485. Total: -0.5485
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0515. Total: -0.0515
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['5h', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24681933842239187, 'bluff_count': 66, 'total_actions': 393, 'raise_count': 97}
Strategy for state (0, ('5h', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0655. Total: -0.0655
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5345. Total: -0.5345
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5345. Total: -0.5345
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['9s', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24619289340101522, 'bluff_count': 66, 'total_actions': 394, 'raise_count': 97}
Strategy for state (0, ('2h', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0535. Total: -0.0535
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5465. Total: -0.5465
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5465. Total: -0.5465
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9s', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2481012658227848, 'bluff_count': 66, 'total_actions': 395, 'raise_count': 98}
Strategy for state (0, ('2h', '9s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0585. Total: -0.112
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5415. Total: -1.088
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7748333333333334. Total: -1.3213333333333335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Kc', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2474747474747475, 'bluff_count': 67, 'total_actions': 396, 'raise_count': 98}
Strategy for state (0, ('5c', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.076. Total: -0.076
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Kc', '5c'], Board Cards=['8s', 'Qd', 'Qs']
Opponent tendencies updated: {'aggression_frequency': 0.24685138539042822, 'bluff_count': 67, 'total_actions': 397, 'raise_count': 98}
Strategy for state (3, ('5c', 'Kc'), ('8s', 'Qd', 'Qs')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0305. Total: -0.0305
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5695. Total: -0.5695
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0305. Total: -0.0305
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['5c', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24623115577889448, 'bluff_count': 67, 'total_actions': 398, 'raise_count': 98}
Strategy for state (0, ('5c', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.1575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -1.0425
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5185. Total: -0.5185
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['5c', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24561403508771928, 'bluff_count': 67, 'total_actions': 399, 'raise_count': 98}
Strategy for state (0, ('5c', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.087. Total: -0.2445
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.513. Total: -1.5554999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.663. Total: -1.1815
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Kc', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.245, 'bluff_count': 67, 'total_actions': 400, 'raise_count': 98}
Strategy for state (0, ('3s', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5529999999999999. Total: -0.5529999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['Ac', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24438902743142144, 'bluff_count': 67, 'total_actions': 401, 'raise_count': 98}
Strategy for state (0, ('9s', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.054
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -0.5459999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.054. Total: -0.054
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['2s', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24378109452736318, 'bluff_count': 67, 'total_actions': 402, 'raise_count': 98}
Strategy for state (0, ('2s', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.158
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -1.0419999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5215. Total: -0.5215
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['2s', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24317617866004962, 'bluff_count': 68, 'total_actions': 403, 'raise_count': 98}
Strategy for state (0, ('2s', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.252
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -1.5479999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.656. Total: -1.1775
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2s', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24504950495049505, 'bluff_count': 68, 'total_actions': 404, 'raise_count': 99}
Strategy for state (0, ('2s', '6s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0835. Total: -0.3355
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5165. Total: -2.0645
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7915. Total: -1.9689999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2s', '6s'], Board Cards=['9d', '7s', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.24691358024691357, 'bluff_count': 68, 'total_actions': 405, 'raise_count': 100}
Strategy for state (3, ('2s', '6s'), ('9d', '7s', 'Ts')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2885. Total: -0.2885
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3115. Total: -0.3115
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2885. Total: -0.2885
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['2s', '6s'], Board Cards=['9d', '7s', 'Ts', 'Tc']
Opponent tendencies updated: {'aggression_frequency': 0.24876847290640394, 'bluff_count': 68, 'total_actions': 406, 'raise_count': 101}
Strategy for state (4, ('2s', '6s'), ('9d', '7s', 'Ts', 'Tc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2405. Total: -0.2405
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3595. Total: -0.3595
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2405. Total: -0.2405
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=5, My Cards=['2s', '6s'], Board Cards=['9d', '7s', 'Ts', 'Tc', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.25061425061425063, 'bluff_count': 68, 'total_actions': 407, 'raise_count': 102}
Strategy for state (5, ('2s', '6s'), ('9d', '7s', 'Ts', 'Tc', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8865. Total: -0.8865
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 5
Round State: Street=0, My Cards=['7d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 68, 'total_actions': 408, 'raise_count': 102}
Strategy for state (0, ('7d', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -0.534
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7d', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25183374083129584, 'bluff_count': 68, 'total_actions': 409, 'raise_count': 103}
Strategy for state (0, ('7d', 'Jh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.1375
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -1.0625
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7618333333333334. Total: -1.2958333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['7d', 'Jh'], Board Cards=['Ac', '5d', '5h']
Opponent tendencies updated: {'aggression_frequency': 0.25365853658536586, 'bluff_count': 68, 'total_actions': 410, 'raise_count': 104}
Strategy for state (3, ('7d', 'Jh'), ('Ac', '5d', '5h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0175. Total: -0.0175
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5825. Total: -0.5825
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8825000000000001. Total: -0.8825000000000001
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ac', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25304136253041365, 'bluff_count': 69, 'total_actions': 411, 'raise_count': 104}
Strategy for state (0, ('2d', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.692. Total: -0.692
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ac', '2d'], Board Cards=['8s', '5d', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.25485436893203883, 'bluff_count': 69, 'total_actions': 412, 'raise_count': 105}
Strategy for state (3, ('2d', 'Ac'), ('8s', '5d', '9d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -0.5449999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.055. Total: -0.055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8c', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2542372881355932, 'bluff_count': 69, 'total_actions': 413, 'raise_count': 105}
Strategy for state (0, ('4d', '8c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -0.538
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8c', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2560386473429952, 'bluff_count': 69, 'total_actions': 414, 'raise_count': 106}
Strategy for state (0, ('4d', '8c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.11
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -1.0899999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7853333333333333. Total: -1.3233333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8c', '4d'], Board Cards=['7c', '9c', '8h']
Opponent tendencies updated: {'aggression_frequency': 0.25783132530120484, 'bluff_count': 69, 'total_actions': 415, 'raise_count': 107}
Strategy for state (3, ('4d', '8c'), ('7c', '9c', '8h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0925. Total: -0.0925
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5075. Total: -0.5075
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7825. Total: -0.7825
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=4, My Cards=['8c', '4d'], Board Cards=['7c', '9c', '8h', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.25961538461538464, 'bluff_count': 69, 'total_actions': 416, 'raise_count': 108}
Strategy for state (4, ('4d', '8c'), ('7c', '9c', '8h', 'Ks')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.649. Total: -0.649
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.049000000000000044. Total: 0.049000000000000044
Regret updated for <class 'skeleton.actions.CallAction'>: -0.31253846153846154. Total: -0.31253846153846154
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['8c', '4d'], Board Cards=['7c', '9c', '8h', 'Ks', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.26139088729016785, 'bluff_count': 69, 'total_actions': 417, 'raise_count': 109}
Strategy for state (5, ('4d', '8c'), ('7c', '9c', '8h', 'Ks', '3c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.55. Total: -0.55
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.04999999999999993. Total: -0.04999999999999993
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.55. Total: -0.55
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2607655502392344, 'bluff_count': 69, 'total_actions': 418, 'raise_count': 109}
Strategy for state (0, ('8h', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0915. Total: -0.18
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5085. Total: -1.02
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6585. Total: -1.3199999999999998
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['8h', 'Kh'], Board Cards=['5c', 'Ts', 'Qd']
Opponent tendencies updated: {'aggression_frequency': 0.26014319809069214, 'bluff_count': 69, 'total_actions': 419, 'raise_count': 109}
Strategy for state (3, ('8h', 'Kh'), ('5c', 'Ts', 'Qd')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.025. Total: -0.025
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.575. Total: -0.575
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.025. Total: -0.025
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2c', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25952380952380955, 'bluff_count': 69, 'total_actions': 420, 'raise_count': 109}
Strategy for state (0, ('2c', '5c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0915. Total: -0.0915
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5085. Total: -0.5085
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5085. Total: -0.5085
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4h', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2589073634204275, 'bluff_count': 69, 'total_actions': 421, 'raise_count': 109}
Strategy for state (0, ('4h', 'Kd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.057
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.5429999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5429999999999999. Total: -0.5429999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kc', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25829383886255924, 'bluff_count': 69, 'total_actions': 422, 'raise_count': 109}
Strategy for state (0, ('2c', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6825. Total: -0.6825
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ts', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2576832151300236, 'bluff_count': 69, 'total_actions': 423, 'raise_count': 109}
Strategy for state (0, ('Ah', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -0.534
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7h', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25707547169811323, 'bluff_count': 69, 'total_actions': 424, 'raise_count': 109}
Strategy for state (0, ('6h', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.127. Total: -0.127
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.473. Total: -0.473
Regret updated for <class 'skeleton.actions.CallAction'>: -0.473. Total: -0.473
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7d', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2564705882352941, 'bluff_count': 69, 'total_actions': 425, 'raise_count': 109}
Strategy for state (0, ('5h', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0825. Total: -0.0825
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2s', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25586854460093894, 'bluff_count': 69, 'total_actions': 426, 'raise_count': 109}
Strategy for state (0, ('2s', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5349999999999999. Total: -0.5349999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ts', '7s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25526932084309134, 'bluff_count': 70, 'total_actions': 427, 'raise_count': 109}
Strategy for state (0, ('7s', 'Ts'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1085. Total: -0.1085
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4915. Total: -0.4915
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6415. Total: -0.6415
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7c', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2546728971962617, 'bluff_count': 70, 'total_actions': 428, 'raise_count': 109}
Strategy for state (0, ('6s', '7c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.11. Total: -0.11
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49. Total: -0.49
Regret updated for <class 'skeleton.actions.CallAction'>: -0.49. Total: -0.49
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qs', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2540792540792541, 'bluff_count': 70, 'total_actions': 429, 'raise_count': 109}
Strategy for state (0, ('6c', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.051. Total: -0.051
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5489999999999999. Total: -0.5489999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5489999999999999. Total: -0.5489999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Qs', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2534883720930233, 'bluff_count': 70, 'total_actions': 430, 'raise_count': 109}
Strategy for state (0, ('6c', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.13
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -1.0699999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.671. Total: -1.22
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qs', '6c'], Board Cards=['Td', '3s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.2552204176334107, 'bluff_count': 70, 'total_actions': 431, 'raise_count': 110}
Strategy for state (3, ('6c', 'Qs'), ('Td', '3s', '5d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.029. Total: -0.029
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.571. Total: -0.571
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8043333333333333. Total: -0.8043333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kc', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25462962962962965, 'bluff_count': 70, 'total_actions': 432, 'raise_count': 110}
Strategy for state (0, ('6s', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Kc', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2540415704387991, 'bluff_count': 70, 'total_actions': 433, 'raise_count': 110}
Strategy for state (0, ('6s', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.114
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -1.0859999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.703. Total: -1.2359999999999998
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kc', '2d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2534562211981567, 'bluff_count': 70, 'total_actions': 434, 'raise_count': 110}
Strategy for state (0, ('2d', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.14450000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -1.6555
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5519999999999999. Total: -2.0805
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7s', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25287356321839083, 'bluff_count': 70, 'total_actions': 435, 'raise_count': 110}
Strategy for state (0, ('7s', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0515. Total: -0.0515
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5485. Total: -0.5485
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5485. Total: -0.5485
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7s', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2545871559633027, 'bluff_count': 70, 'total_actions': 436, 'raise_count': 111}
Strategy for state (0, ('7s', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.11199999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -1.088
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7728333333333334. Total: -1.3213333333333335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8c', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2540045766590389, 'bluff_count': 70, 'total_actions': 437, 'raise_count': 111}
Strategy for state (0, ('8c', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0855. Total: -0.0855
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5145. Total: -0.5145
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0855. Total: -0.0855
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['8c', 'Qc'], Board Cards=['Kd', '5d', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.2534246575342466, 'bluff_count': 70, 'total_actions': 438, 'raise_count': 111}
Strategy for state (3, ('8c', 'Qc'), ('Kd', '5d', '9s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.036. Total: -0.036
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.564. Total: -0.564
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.036. Total: -0.036
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2c', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2528473804100228, 'bluff_count': 70, 'total_actions': 439, 'raise_count': 111}
Strategy for state (0, ('2c', '8d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.CallAction'>: -0.534. Total: -0.534
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['3d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25227272727272726, 'bluff_count': 71, 'total_actions': 440, 'raise_count': 111}
Strategy for state (0, ('3d', '4s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.088. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.512. Total: -0.512
Regret updated for <class 'skeleton.actions.CallAction'>: -0.512. Total: -0.512
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['5d', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25170068027210885, 'bluff_count': 71, 'total_actions': 441, 'raise_count': 111}
Strategy for state (0, ('5d', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0815. Total: -0.0815
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5185. Total: -0.5185
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6685. Total: -0.6685
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['5d', '8s'], Board Cards=['Jd', 'Kc', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.25339366515837103, 'bluff_count': 71, 'total_actions': 442, 'raise_count': 112}
Strategy for state (3, ('5d', '8s'), ('Jd', 'Kc', '2h')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0. Total: 0.0
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.6. Total: -0.6
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0. Total: 0.0
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['6d', '9c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2528216704288939, 'bluff_count': 71, 'total_actions': 443, 'raise_count': 112}
Strategy for state (0, ('6d', '9c'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.081
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.519
Regret updated for <class 'skeleton.actions.CallAction'>: -0.519. Total: -0.519
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Qh', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25225225225225223, 'bluff_count': 72, 'total_actions': 444, 'raise_count': 112}
Strategy for state (0, ('4h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.0695
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.5305
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6805. Total: -0.6805
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Qh', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2539325842696629, 'bluff_count': 72, 'total_actions': 445, 'raise_count': 113}
Strategy for state (0, ('4h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.15050000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -1.0495
Regret updated for <class 'skeleton.actions.CallAction'>: -0.794. Total: -1.4745
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=0, My Cards=['Qh', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2556053811659193, 'bluff_count': 72, 'total_actions': 446, 'raise_count': 114}
Strategy for state (0, ('4h', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.22900000000000004
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -1.5710000000000002
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8381666666666666. Total: -2.3126666666666664
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['8d', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2550335570469799, 'bluff_count': 72, 'total_actions': 447, 'raise_count': 114}
Strategy for state (0, ('8d', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0605. Total: -0.0605
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5395. Total: -0.5395
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5395. Total: -0.5395
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ks', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2544642857142857, 'bluff_count': 73, 'total_actions': 448, 'raise_count': 114}
Strategy for state (0, ('2s', 'Ks'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0645. Total: -0.0645
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5355. Total: -0.5355
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0645. Total: -0.0645
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['Ks', '2s'], Board Cards=['4s', 'Ac', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.25389755011135856, 'bluff_count': 73, 'total_actions': 449, 'raise_count': 114}
Strategy for state (3, ('2s', 'Ks'), ('4s', 'Ac', 'Js')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.246. Total: -0.246
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.354. Total: -0.354
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.246. Total: -0.246
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.3615999999999997
sent answer: RaiseAction(amount=2.3615999999999997)
Round State: Street=3, My Cards=['Ks', '2s'], Board Cards=['4s', 'Ac', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.25555555555555554, 'bluff_count': 73, 'total_actions': 450, 'raise_count': 115}
Strategy for state (3, ('2s', 'Ks'), ('4s', 'Ac', 'Js')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.257. Total: -0.503
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34299999999999997. Total: -0.697
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6253529411764706. Total: -0.6253529411764706
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 16
sent answer: RaiseAction(amount=16)
Round State: Street=3, My Cards=['Ks', '2s'], Board Cards=['4s', 'Ac', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.2572062084257206, 'bluff_count': 73, 'total_actions': 451, 'raise_count': 116}
Strategy for state (3, ('2s', 'Ks'), ('4s', 'Ac', 'Js')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.23. Total: -0.733
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.37. Total: -1.067
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7392307692307692. Total: -1.3645837104072398
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['8s', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25663716814159293, 'bluff_count': 73, 'total_actions': 452, 'raise_count': 116}
Strategy for state (0, ('8h', '8s'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.244. Total: -0.7275
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.356. Total: -1.0724999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.356. Total: -1.2225
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Qd', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2560706401766004, 'bluff_count': 73, 'total_actions': 453, 'raise_count': 116}
Strategy for state (0, ('2c', 'Qd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5519999999999999. Total: -0.5519999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qd', '2c'], Board Cards=['5s', '4s', '9c']
Opponent tendencies updated: {'aggression_frequency': 0.2555066079295154, 'bluff_count': 73, 'total_actions': 454, 'raise_count': 116}
Strategy for state (3, ('2c', 'Qd'), ('5s', '4s', '9c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.027. Total: -0.027
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.573. Total: -0.573
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.027. Total: -0.027
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Qh', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2549450549450549, 'bluff_count': 74, 'total_actions': 455, 'raise_count': 116}
Strategy for state (0, ('Jh', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.114. Total: -0.114
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.486. Total: -0.486
Regret updated for <class 'skeleton.actions.CallAction'>: -0.486. Total: -0.486
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['2d', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2543859649122807, 'bluff_count': 74, 'total_actions': 456, 'raise_count': 116}
Strategy for state (0, ('2d', '4h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.076. Total: -0.076
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['2d', '4h'], Board Cards=['Kh', '3d', '4c']
Opponent tendencies updated: {'aggression_frequency': 0.2538293216630197, 'bluff_count': 74, 'total_actions': 457, 'raise_count': 116}
Strategy for state (3, ('2d', '4h'), ('Kh', '3d', '4c')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.068. Total: -0.068
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['9d', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25327510917030566, 'bluff_count': 74, 'total_actions': 458, 'raise_count': 116}
Strategy for state (0, ('9d', 'Ah'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5325. Total: -0.5325
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['9d', 'Ah'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25272331154684097, 'bluff_count': 75, 'total_actions': 459, 'raise_count': 116}
Strategy for state (0, ('9d', 'Ah'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0835. Total: -0.15100000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5165. Total: -1.049
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6665. Total: -1.1989999999999998
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', 'Ah'], Board Cards=['8d', '7h', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.25217391304347825, 'bluff_count': 75, 'total_actions': 460, 'raise_count': 116}
Strategy for state (3, ('9d', 'Ah'), ('8d', '7h', '3s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=4, My Cards=['9d', 'Ah'], Board Cards=['8d', '7h', '3s', '7d']
Opponent tendencies updated: {'aggression_frequency': 0.25379609544468545, 'bluff_count': 75, 'total_actions': 461, 'raise_count': 117}
Strategy for state (4, ('9d', 'Ah'), ('8d', '7h', '3s', '7d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.096. Total: -0.096
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.504. Total: -0.504
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7987368421052632. Total: -0.7987368421052632
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['3d', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2532467532467532, 'bluff_count': 75, 'total_actions': 462, 'raise_count': 117}
Strategy for state (0, ('3d', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.0575
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.5425
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5425. Total: -0.5425
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ac', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2526997840172786, 'bluff_count': 75, 'total_actions': 463, 'raise_count': 117}
Strategy for state (0, ('8d', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.056
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.5439999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5439999999999999. Total: -0.5439999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Td', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2521551724137931, 'bluff_count': 75, 'total_actions': 464, 'raise_count': 117}
Strategy for state (0, ('5h', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0665. Total: -0.0665
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5335. Total: -0.5335
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5335. Total: -0.5335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['5d', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25161290322580643, 'bluff_count': 75, 'total_actions': 465, 'raise_count': 117}
Strategy for state (0, ('5d', '8d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.121. Total: -0.121
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.479. Total: -0.479
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.121. Total: -0.121
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Kd', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2510729613733906, 'bluff_count': 75, 'total_actions': 466, 'raise_count': 117}
Strategy for state (0, ('4s', 'Kd'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.071
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.529
Regret updated for <class 'skeleton.actions.CallAction'>: -0.529. Total: -0.529
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Kc', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2505353319057816, 'bluff_count': 75, 'total_actions': 467, 'raise_count': 117}
Strategy for state (0, ('Kc', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0965. Total: -0.0965
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5035. Total: -0.5035
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6535. Total: -0.6535
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 75, 'total_actions': 468, 'raise_count': 117}
Strategy for state (0, ('4s', '7d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.20900000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -1.591
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5245. Total: -1.8243333333333334
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['7d', '4s'], Board Cards=['Ad', 'Qd', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.24946695095948826, 'bluff_count': 75, 'total_actions': 469, 'raise_count': 117}
Strategy for state (3, ('4s', '7d'), ('Ad', 'Qd', 'Ks')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0385. Total: -0.0385
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5615. Total: -0.5615
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7115. Total: -0.7115
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4d', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24893617021276596, 'bluff_count': 75, 'total_actions': 470, 'raise_count': 117}
Strategy for state (0, ('4d', 'Ac'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.056
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.5439999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5439999999999999. Total: -0.5439999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6h', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2484076433121019, 'bluff_count': 76, 'total_actions': 471, 'raise_count': 117}
Strategy for state (0, ('6h', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.163
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -1.037
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6675. Total: -1.1869999999999998
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6h', 'Kh'], Board Cards=['8c', 'Jd', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.2478813559322034, 'bluff_count': 76, 'total_actions': 472, 'raise_count': 117}
Strategy for state (3, ('6h', 'Kh'), ('8c', 'Jd', 'Td')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0255. Total: -0.0255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5745. Total: -0.5745
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0255. Total: -0.0255
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['6h', 'Kh'], Board Cards=['8c', 'Jd', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.24947145877378435, 'bluff_count': 77, 'total_actions': 473, 'raise_count': 118}
Strategy for state (3, ('6h', 'Kh'), ('8c', 'Jd', 'Td')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.038. Total: -0.0635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5619999999999999. Total: -1.1364999999999998
Regret updated for <class 'skeleton.actions.CallAction'>: -0.837. Total: -0.837
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Th', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2489451476793249, 'bluff_count': 77, 'total_actions': 474, 'raise_count': 118}
Strategy for state (0, ('Qs', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=0, My Cards=['Th', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24842105263157896, 'bluff_count': 77, 'total_actions': 475, 'raise_count': 118}
Strategy for state (0, ('Qs', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.16749999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -1.0325
Regret updated for <class 'skeleton.actions.CallAction'>: -0.677. Total: -1.1825
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Th', 'Qs'], Board Cards=['5s', '8s', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 77, 'total_actions': 476, 'raise_count': 119}
Strategy for state (3, ('Qs', 'Th'), ('5s', '8s', '9s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.323. Total: -0.323
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.27699999999999997. Total: -0.27699999999999997
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5103333333333333. Total: -0.5103333333333333
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Th', 'Qs'], Board Cards=['5s', '8s', '9s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.25157232704402516, 'bluff_count': 77, 'total_actions': 477, 'raise_count': 120}
Strategy for state (4, ('Qs', 'Th'), ('5s', '8s', '9s', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.33. Total: -0.33
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.26999999999999996. Total: -0.26999999999999996
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6074999999999999. Total: -0.6074999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 36
sent answer: RaiseAction(amount=36)
Round State: Street=4, My Cards=['Th', 'Qs'], Board Cards=['5s', '8s', '9s', 'Kh']
Opponent tendencies updated: {'aggression_frequency': 0.25313807531380755, 'bluff_count': 78, 'total_actions': 478, 'raise_count': 121}
Strategy for state (4, ('Qs', 'Th'), ('5s', '8s', '9s', 'Kh')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.351. Total: -0.681
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.249. Total: -0.5189999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6355771812080537. Total: -1.2430771812080537
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['2d', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25260960334029225, 'bluff_count': 78, 'total_actions': 479, 'raise_count': 121}
Strategy for state (0, ('2d', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0525. Total: -0.1055
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5475. Total: -1.0945
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0525. Total: -0.0525
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=3, My Cards=['2d', 'Qs'], Board Cards=['Ah', '2c', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.2520833333333333, 'bluff_count': 78, 'total_actions': 480, 'raise_count': 121}
Strategy for state (3, ('2d', 'Qs'), ('Ah', '2c', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0225. Total: -0.0225
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5775. Total: -0.5775
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0225. Total: -0.0225
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kc', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2515592515592516, 'bluff_count': 78, 'total_actions': 481, 'raise_count': 121}
Strategy for state (0, ('Kc', 'Qc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.105. Total: -0.2015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.495. Total: -0.9984999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.495. Total: -1.1484999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kc', 'Qc'], Board Cards=['Ah', '4d', '6s']
Opponent tendencies updated: {'aggression_frequency': 0.25103734439834025, 'bluff_count': 78, 'total_actions': 482, 'raise_count': 121}
Strategy for state (3, ('Kc', 'Qc'), ('Ah', '4d', '6s')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.013. Total: -0.013
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.587. Total: -0.587
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.013. Total: -0.013
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
Round State: Street=4, My Cards=['Kc', 'Qc'], Board Cards=['Ah', '4d', '6s', 'Qs']
Opponent tendencies updated: {'aggression_frequency': 0.2505175983436853, 'bluff_count': 78, 'total_actions': 483, 'raise_count': 121}
Strategy for state (4, ('Kc', 'Qc'), ('Ah', '4d', '6s', 'Qs')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.711. Total: -0.711
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.11099999999999999. Total: 0.11099999999999999
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.711. Total: -0.711
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6d', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 78, 'total_actions': 484, 'raise_count': 121}
Strategy for state (0, ('4s', '6d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0835. Total: -0.1975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5165. Total: -1.0025
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6665. Total: -1.1524999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', '4s'], Board Cards=['3d', '8d', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.24948453608247423, 'bluff_count': 78, 'total_actions': 485, 'raise_count': 121}
Strategy for state (3, ('4s', '6d'), ('3d', '8d', 'Js')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.073. Total: -0.073
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['6d', '4s'], Board Cards=['3d', '8d', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.25102880658436216, 'bluff_count': 79, 'total_actions': 486, 'raise_count': 122}
Strategy for state (3, ('4s', '6d'), ('3d', '8d', 'Js')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.135
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -1.065
Regret updated for <class 'skeleton.actions.CallAction'>: -0.813. Total: -0.813
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ac', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25051334702258726, 'bluff_count': 80, 'total_actions': 487, 'raise_count': 122}
Strategy for state (0, ('Ac', 'Td'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.CallAction'>: -0.524. Total: -0.524
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['3s', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 80, 'total_actions': 488, 'raise_count': 122}
Strategy for state (0, ('3s', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.136
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -1.064
Regret updated for <class 'skeleton.actions.CallAction'>: -0.685. Total: -1.214
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7d', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.24948875255623723, 'bluff_count': 80, 'total_actions': 489, 'raise_count': 122}
Strategy for state (0, ('7d', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.081
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.519
Regret updated for <class 'skeleton.actions.CallAction'>: -0.519. Total: -0.519
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7d', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2510204081632653, 'bluff_count': 80, 'total_actions': 490, 'raise_count': 123}
Strategy for state (0, ('7d', 'Ad'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0855. Total: -0.1665
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5145. Total: -1.0335
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7478333333333333. Total: -1.2668333333333335
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['7d', 'Ad'], Board Cards=['3s', '3h', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.2525458248472505, 'bluff_count': 80, 'total_actions': 491, 'raise_count': 124}
Strategy for state (3, ('7d', 'Ad'), ('3s', '3h', '4d')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.021. Total: -0.021
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.579. Total: -0.579
Regret updated for <class 'skeleton.actions.CallAction'>: -0.854. Total: -0.854
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4c', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25203252032520324, 'bluff_count': 81, 'total_actions': 492, 'raise_count': 124}
Strategy for state (0, ('4c', '7h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.0795
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.5205
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6705. Total: -0.6705
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9d', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2515212981744422, 'bluff_count': 81, 'total_actions': 493, 'raise_count': 124}
Strategy for state (0, ('2s', '9d'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.052
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.5479999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5479999999999999. Total: -0.5479999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qh', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25101214574898784, 'bluff_count': 81, 'total_actions': 494, 'raise_count': 124}
Strategy for state (0, ('3d', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.1195
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -1.0805
Regret updated for <class 'skeleton.actions.CallAction'>: -0.688. Total: -1.2305
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Qh', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25252525252525254, 'bluff_count': 81, 'total_actions': 495, 'raise_count': 125}
Strategy for state (0, ('3d', 'Qh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.1785
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -1.6215
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8160000000000001. Total: -2.0465
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kc', '5h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25201612903225806, 'bluff_count': 81, 'total_actions': 496, 'raise_count': 125}
Strategy for state (0, ('5h', 'Kc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.059. Total: -0.1245
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5409999999999999. Total: -1.0755
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5409999999999999. Total: -1.0755
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Th', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2515090543259557, 'bluff_count': 81, 'total_actions': 497, 'raise_count': 125}
Strategy for state (0, ('2c', 'Th'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0595. Total: -0.0595
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5405. Total: -0.5405
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6905. Total: -0.6905
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Th', '2c'], Board Cards=['Tc', 'As', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.25100401606425704, 'bluff_count': 81, 'total_actions': 498, 'raise_count': 125}
Strategy for state (3, ('2c', 'Th'), ('Tc', 'As', 'Kc')): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.066
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.534
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.066. Total: -0.066
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CheckAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Kh', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.250501002004008, 'bluff_count': 82, 'total_actions': 499, 'raise_count': 125}
Strategy for state (0, ('5s', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.056
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.5439999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5439999999999999. Total: -0.5439999999999999
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kh', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.252, 'bluff_count': 82, 'total_actions': 500, 'raise_count': 126}
Strategy for state (0, ('5s', 'Kh'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.114
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -1.0859999999999999
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7753333333333333. Total: -1.3193333333333332
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Ks', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25149700598802394, 'bluff_count': 82, 'total_actions': 501, 'raise_count': 126}
Strategy for state (0, ('Ks', 'Qs'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1095. Total: -0.1095
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4905. Total: -0.4905
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6405. Total: -0.6405
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5h', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.250996015936255, 'bluff_count': 82, 'total_actions': 502, 'raise_count': 126}
Strategy for state (0, ('2s', '5h'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.086. Total: -0.151
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.514. Total: -1.049
Regret updated for <class 'skeleton.actions.CallAction'>: -0.514. Total: -1.049
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qs', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.2504970178926441, 'bluff_count': 83, 'total_actions': 503, 'raise_count': 126}
Strategy for state (0, ('Qs', 'Tc'), ()): {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0875. Total: -0.0875
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5125. Total: -0.5125
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5125. Total: -0.5125
Legal strategy: {<class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333, <class 'skeleton.actions.CallAction'>: 0.3333333333333333}
