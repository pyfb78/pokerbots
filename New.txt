CFR data loaded successfully.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Jh', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.0, 'bluff_count': 0, 'total_actions': 1, 'raise_count': 0}
Strategy for state (0, ('4s', 'Jh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5305. Total: -0.5305
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.0695
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.5305
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 0, 'total_actions': 2, 'raise_count': 1}
Strategy for state (0, ('4s', 'Jh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7673333333333334. Total: -1.2978333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.066. Total: -0.1355
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.534. Total: -0.8645
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['7c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 0, 'total_actions': 3, 'raise_count': 1}
Strategy for state (0, ('2c', '7c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6819999999999999. Total: -0.6819999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['2d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.25, 'bluff_count': 0, 'total_actions': 4, 'raise_count': 1}
Strategy for state (0, ('2d', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5625. Total: -0.5625
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0375. Total: -0.0375
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5625. Total: -0.5625
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.4, 'bluff_count': 0, 'total_actions': 5, 'raise_count': 2}
Strategy for state (0, ('2d', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7868333333333334. Total: -1.3493333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0465. Total: -0.08399999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5535. Total: -0.9159999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['7d', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.3333333333333333, 'bluff_count': 0, 'total_actions': 6, 'raise_count': 2}
Strategy for state (0, ('7d', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6865. Total: -0.6865
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['7d', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.42857142857142855, 'bluff_count': 0, 'total_actions': 7, 'raise_count': 3}
Strategy for state (0, ('7d', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7995. Total: -1.486
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.139
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.861
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['7d', 'Js'], Board Cards=['9h', '2h', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 0, 'total_actions': 8, 'raise_count': 4}
Strategy for state (3, ('7d', 'Js'), ('9h', '2h', 'Th')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1505. Total: -0.1505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1505. Total: -0.1505
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4495. Total: -0.4495
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 15.049999999999999
sent answer: RaiseAction(amount=15.049999999999999)
Round State: Street=3, My Cards=['7d', 'Js'], Board Cards=['9h', '2h', 'Th']
Opponent tendencies updated: {'aggression_frequency': 0.5555555555555556, 'bluff_count': 0, 'total_actions': 9, 'raise_count': 5}
Strategy for state (3, ('7d', 'Js'), ('9h', '2h', 'Th')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8257608695652174. Total: -0.8257608695652174
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1525. Total: -0.303
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4475. Total: -0.6970000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['3d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 0, 'total_actions': 10, 'raise_count': 5}
Strategy for state (0, ('3d', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5445. Total: -0.5445
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0555. Total: -0.0555
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5445. Total: -0.5445
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5454545454545454, 'bluff_count': 0, 'total_actions': 11, 'raise_count': 6}
Strategy for state (0, ('3d', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7773333333333333. Total: -1.3218333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.1115
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.8884999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['9c', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5, 'bluff_count': 0, 'total_actions': 12, 'raise_count': 6}
Strategy for state (0, ('9c', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.646. Total: -0.646
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.104. Total: -0.104
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.496. Total: -0.496
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['9c', 'Qc'], Board Cards=['2d', '6d', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.5384615384615384, 'bluff_count': 0, 'total_actions': 13, 'raise_count': 7}
Strategy for state (3, ('9c', 'Qc'), ('2d', '6d', '4s')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.007. Total: -0.007
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.007. Total: -0.007
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.593. Total: -0.593
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['9c', 'Qc'], Board Cards=['2d', '6d', '4s']
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 0, 'total_actions': 14, 'raise_count': 8}
Strategy for state (3, ('9c', 'Qc'), ('2d', '6d', '4s')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9086666666666666. Total: -0.9086666666666666
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.008. Total: -0.015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.592. Total: -0.9849999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 14
sent answer: RaiseAction(amount=14)
Round State: Street=4, My Cards=['9c', 'Qc'], Board Cards=['2d', '6d', '4s', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 0, 'total_actions': 15, 'raise_count': 9}
Strategy for state (4, ('9c', 'Qc'), ('2d', '6d', '4s', '6h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1. Total: -0.1
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.1
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -0.5
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 20.0
sent answer: RaiseAction(amount=20.0)
Round State: Street=4, My Cards=['9c', 'Qc'], Board Cards=['2d', '6d', '4s', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.625, 'bluff_count': 0, 'total_actions': 16, 'raise_count': 10}
Strategy for state (4, ('9c', 'Qc'), ('2d', '6d', '4s', '6h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8891428571428571. Total: -0.8891428571428571
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.093. Total: -0.193
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.507. Total: -0.8069999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 80
sent answer: RaiseAction(amount=80)
Round State: Street=4, My Cards=['9c', 'Qc'], Board Cards=['2d', '6d', '4s', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.6470588235294118, 'bluff_count': 0, 'total_actions': 17, 'raise_count': 11}
Strategy for state (4, ('9c', 'Qc'), ('2d', '6d', '4s', '6h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9093793103448277. Total: -1.7985221674876848
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.275
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -1.125
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Ks', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6111111111111112, 'bluff_count': 0, 'total_actions': 18, 'raise_count': 11}
Strategy for state (0, ('Ks', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5225. Total: -0.5225
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0775. Total: -0.0775
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5225. Total: -0.5225
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ks', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.631578947368421, 'bluff_count': 0, 'total_actions': 19, 'raise_count': 12}
Strategy for state (0, ('Ks', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7563333333333334. Total: -1.2788333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.1545
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.8454999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Qc', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 0, 'total_actions': 20, 'raise_count': 12}
Strategy for state (0, ('Kc', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6585. Total: -0.6585
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0915. Total: -0.0915
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5085. Total: -0.5085
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Tc', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 0, 'total_actions': 21, 'raise_count': 12}
Strategy for state (0, ('3s', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5295. Total: -0.5295
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0705. Total: -0.0705
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5295. Total: -0.5295
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Tc', '3s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5909090909090909, 'bluff_count': 1, 'total_actions': 22, 'raise_count': 13}
Strategy for state (0, ('3s', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7538333333333334. Total: -1.2833333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0795. Total: -0.15
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5205. Total: -0.8499999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Kh', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5652173913043478, 'bluff_count': 2, 'total_actions': 23, 'raise_count': 13}
Strategy for state (0, ('3c', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.706. Total: -0.706
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.044. Total: -0.044
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5559999999999999. Total: -0.5559999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['6d', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5416666666666666, 'bluff_count': 2, 'total_actions': 24, 'raise_count': 13}
Strategy for state (0, ('3d', '6d'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.506. Total: -0.506
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6d', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.56, 'bluff_count': 2, 'total_actions': 25, 'raise_count': 14}
Strategy for state (0, ('3d', '6d'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7358333333333333. Total: -1.2418333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.1915
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.8085
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['6d', '3d'], Board Cards=['7d', '4d', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.5769230769230769, 'bluff_count': 2, 'total_actions': 26, 'raise_count': 15}
Strategy for state (3, ('3d', '6d'), ('7d', '4d', '3c')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.49835294117647055. Total: -0.49835294117647055
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.384. Total: -0.384
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.21599999999999997. Total: -0.21599999999999997
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 28.799999999999997
sent answer: RaiseAction(amount=28.799999999999997)
Round State: Street=4, My Cards=['6d', '3d'], Board Cards=['7d', '4d', '3c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.5925925925925926, 'bluff_count': 2, 'total_actions': 27, 'raise_count': 16}
Strategy for state (4, ('3d', '6d'), ('7d', '4d', '3c', '8d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.06717948717948719. Total: -0.06717948717948719
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.92. Total: -0.92
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.32000000000000006. Total: 0.32000000000000006
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 366
sent answer: RaiseAction(amount=366)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['6c', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 2, 'total_actions': 28, 'raise_count': 16}
Strategy for state (0, ('5c', '6c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.638. Total: -0.638
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.112. Total: -0.112
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.488. Total: -0.488
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['7s', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5517241379310345, 'bluff_count': 2, 'total_actions': 29, 'raise_count': 16}
Strategy for state (0, ('7s', 'Ks'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7s', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5666666666666667, 'bluff_count': 2, 'total_actions': 30, 'raise_count': 17}
Strategy for state (0, ('7s', 'Ks'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7568333333333334. Total: -1.2898333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.14350000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.8564999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['9d', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5483870967741935, 'bluff_count': 3, 'total_actions': 31, 'raise_count': 17}
Strategy for state (0, ('5c', '9d'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6865. Total: -0.6865
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['9d', '5c'], Board Cards=['Ts', 'Kd', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5625, 'bluff_count': 3, 'total_actions': 32, 'raise_count': 18}
Strategy for state (3, ('5c', '9d'), ('Ts', 'Kd', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0095. Total: -0.0095
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0095. Total: -0.0095
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5905. Total: -0.5905
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['9d', '5c'], Board Cards=['Ts', 'Kd', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5757575757575758, 'bluff_count': 3, 'total_actions': 33, 'raise_count': 19}
Strategy for state (3, ('5c', '9d'), ('Ts', 'Kd', 'Ah')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8925000000000001. Total: -0.8925000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0075. Total: -0.017
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5925. Total: -0.9830000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['As', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5588235294117647, 'bluff_count': 3, 'total_actions': 34, 'raise_count': 19}
Strategy for state (0, ('5c', 'As'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.538. Total: -0.538
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.062
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.538
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['As', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5714285714285714, 'bluff_count': 3, 'total_actions': 35, 'raise_count': 20}
Strategy for state (0, ('5c', 'As'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7793333333333333. Total: -1.3173333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.11599999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -0.8839999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['As', '5c'], Board Cards=['3s', '3h', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.5833333333333334, 'bluff_count': 3, 'total_actions': 36, 'raise_count': 21}
Strategy for state (3, ('5c', 'As'), ('3s', '3h', '9s')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.86. Total: -0.86
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.015. Total: -0.015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.585. Total: -0.585
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['5c', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5675675675675675, 'bluff_count': 4, 'total_actions': 37, 'raise_count': 21}
Strategy for state (0, ('5c', '7h'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6675. Total: -0.6675
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.0825
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.5175
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['5c', '7h'], Board Cards=['Qc', '7s', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.5789473684210527, 'bluff_count': 4, 'total_actions': 38, 'raise_count': 22}
Strategy for state (3, ('5c', '7h'), ('Qc', '7s', '3c')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.085. Total: -0.085
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.085
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -0.515
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 5.1000000000000005
sent answer: RaiseAction(amount=5.1000000000000005)
Round State: Street=3, My Cards=['5c', '7h'], Board Cards=['Qc', '7s', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.5897435897435898, 'bluff_count': 4, 'total_actions': 39, 'raise_count': 23}
Strategy for state (3, ('5c', '7h'), ('Qc', '7s', '3c')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8500344827586207. Total: -0.8500344827586207
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.166
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.8340000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['5c', '7h'], Board Cards=['Qc', '7s', '3c', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 4, 'total_actions': 40, 'raise_count': 24}
Strategy for state (4, ('5c', '7h'), ('Qc', '7s', '3c', '5d')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.875. Total: -0.875
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.875. Total: -0.875
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.275. Total: 0.275
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 112.0
sent answer: RaiseAction(amount=112.0)
Round State: Street=4, My Cards=['5c', '7h'], Board Cards=['Qc', '7s', '3c', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6097560975609756, 'bluff_count': 4, 'total_actions': 41, 'raise_count': 25}
Strategy for state (4, ('5c', '7h'), ('Qc', '7s', '3c', '5d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.13859459459459467. Total: -0.13859459459459467
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.856. Total: -1.7309999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.256. Total: 0.7310000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 384
sent answer: RaiseAction(amount=384)
Round State: Street=5, My Cards=['5c', '7h'], Board Cards=['Qc', '7s', '3c', '5d', 'Qh']
Opponent tendencies updated: {'aggression_frequency': 0.6190476190476191, 'bluff_count': 4, 'total_actions': 42, 'raise_count': 26}
Strategy for state (5, ('5c', '7h'), ('Qc', '7s', '3c', '5d', 'Qh')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.762. Total: -0.762
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.762. Total: -0.762
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['2h', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6046511627906976, 'bluff_count': 4, 'total_actions': 43, 'raise_count': 26}
Strategy for state (0, ('2h', '3d'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5375. Total: -0.5375
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0625. Total: -0.0625
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5375. Total: -0.5375
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2h', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6136363636363636, 'bluff_count': 4, 'total_actions': 44, 'raise_count': 27}
Strategy for state (0, ('2h', '3d'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7813333333333333. Total: -1.3188333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.11449999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.8855
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Kd', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 4, 'total_actions': 45, 'raise_count': 27}
Strategy for state (0, ('6c', 'Kd'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6745. Total: -0.6745
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0755. Total: -0.0755
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5245. Total: -0.5245
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['8c', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5869565217391305, 'bluff_count': 4, 'total_actions': 46, 'raise_count': 27}
Strategy for state (0, ('6s', '8c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5. Total: -0.5
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1. Total: -0.1
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5. Total: -0.5
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8c', '6s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5957446808510638, 'bluff_count': 4, 'total_actions': 47, 'raise_count': 28}
Strategy for state (0, ('6s', '8c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7298333333333333. Total: -1.2298333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1035. Total: -0.20350000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4965. Total: -0.7965
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['3d', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5833333333333334, 'bluff_count': 4, 'total_actions': 48, 'raise_count': 28}
Strategy for state (0, ('3d', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6865. Total: -0.6865
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.0635
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.5365
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['3d', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5918367346938775, 'bluff_count': 4, 'total_actions': 49, 'raise_count': 29}
Strategy for state (0, ('3d', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8115. Total: -1.498
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.127
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.873
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Td', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.58, 'bluff_count': 4, 'total_actions': 50, 'raise_count': 29}
Strategy for state (0, ('8s', 'Td'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.521. Total: -0.521
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.079
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -0.521
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Td', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5882352941176471, 'bluff_count': 4, 'total_actions': 51, 'raise_count': 30}
Strategy for state (0, ('8s', 'Td'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7448333333333333. Total: -1.2658333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0885. Total: -0.16749999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5115. Total: -0.8325
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['9c', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.5769230769230769, 'bluff_count': 4, 'total_actions': 52, 'raise_count': 30}
Strategy for state (0, ('2s', '9c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6915. Total: -0.6915
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0585. Total: -0.0585
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5415. Total: -0.5415
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['9c', '2s'], Board Cards=['Qh', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5849056603773585, 'bluff_count': 4, 'total_actions': 53, 'raise_count': 31}
Strategy for state (3, ('2s', '9c'), ('Qh', '9h', 'Ah')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.82
sent answer: RaiseAction(amount=2.82)
Round State: Street=3, My Cards=['9c', '2s'], Board Cards=['Qh', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.5925925925925926, 'bluff_count': 4, 'total_actions': 54, 'raise_count': 32}
Strategy for state (3, ('2s', '9c'), ('Qh', '9h', 'Ah')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9007195121951219. Total: -0.9007195121951219
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0505. Total: -0.0975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5495. Total: -0.9024999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 48
sent answer: RaiseAction(amount=48)
Round State: Street=3, My Cards=['9c', '2s'], Board Cards=['Qh', '9h', 'Ah']
Opponent tendencies updated: {'aggression_frequency': 0.6, 'bluff_count': 4, 'total_actions': 55, 'raise_count': 33}
Strategy for state (3, ('2s', '9c'), ('Qh', '9h', 'Ah')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9369502262443439. Total: -1.8376697384394658
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.054. Total: -0.1515
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5459999999999999. Total: -1.2485
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['9c', '2s'], Board Cards=['Qh', '9h', 'Ah', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.6071428571428571, 'bluff_count': 4, 'total_actions': 56, 'raise_count': 34}
Strategy for state (4, ('2s', '9c'), ('Qh', '9h', 'Ah', 'Qc')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.6685. Total: -0.6685
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6685. Total: -0.6685
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.0685. Total: 0.0685
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 235
sent answer: RaiseAction(amount=235)
Round State: Street=5, My Cards=['9c', '2s'], Board Cards=['Qh', '9h', 'Ah', 'Qc', '5h']
Opponent tendencies updated: {'aggression_frequency': 0.6140350877192983, 'bluff_count': 4, 'total_actions': 57, 'raise_count': 35}
Strategy for state (5, ('2s', '9c'), ('Qh', '9h', 'Ah', 'Qc', '5h')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.4275. Total: -0.4275
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.4275. Total: -0.4275
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['Jc', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.603448275862069, 'bluff_count': 4, 'total_actions': 58, 'raise_count': 35}
Strategy for state (0, ('Jc', 'Kc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.508. Total: -0.508
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.092
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.508
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jc', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6101694915254238, 'bluff_count': 4, 'total_actions': 59, 'raise_count': 36}
Strategy for state (0, ('Jc', 'Kc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7128333333333334. Total: -1.2208333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1205. Total: -0.2125
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4795. Total: -0.7875
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Jc', 'Kc'], Board Cards=['9c', '2s', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6166666666666667, 'bluff_count': 5, 'total_actions': 60, 'raise_count': 37}
Strategy for state (3, ('Jc', 'Kc'), ('9c', '2s', '3h')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.837. Total: -0.837
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.038. Total: -0.038
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5619999999999999. Total: -0.5619999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Jc', 'Kc'], Board Cards=['9c', '2s', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6229508196721312, 'bluff_count': 5, 'total_actions': 61, 'raise_count': 38}
Strategy for state (3, ('Jc', 'Kc'), ('9c', '2s', '3h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8806666666666666. Total: -1.7176666666666667
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.036. Total: -0.074
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.564. Total: -0.9259999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['7d', 'Ad'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6129032258064516, 'bluff_count': 6, 'total_actions': 62, 'raise_count': 38}
Strategy for state (0, ('7d', 'Ad'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6555. Total: -0.6555
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: A
Round State: Street=0, My Cards=['5h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6031746031746031, 'bluff_count': 6, 'total_actions': 63, 'raise_count': 38}
Strategy for state (0, ('3c', '5h'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.523. Total: -0.523
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.077
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.523
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['5h', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.609375, 'bluff_count': 6, 'total_actions': 64, 'raise_count': 39}
Strategy for state (0, ('3c', '5h'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7508333333333334. Total: -1.2738333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.1595
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.8405
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5h', '3c'], Board Cards=['9s', '6d', '4h']
Opponent tendencies updated: {'aggression_frequency': 0.6153846153846154, 'bluff_count': 6, 'total_actions': 65, 'raise_count': 40}
Strategy for state (3, ('3c', '5h'), ('9s', '6d', '4h')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.635. Total: -0.635
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.24. Total: -0.24
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.36. Total: -0.36
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 13.44
sent answer: RaiseAction(amount=13.44)
Round State: Street=4, My Cards=['5h', '3c'], Board Cards=['9s', '6d', '4h', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.6212121212121212, 'bluff_count': 6, 'total_actions': 66, 'raise_count': 41}
Strategy for state (4, ('3c', '5h'), ('9s', '6d', '4h', 'Js')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.711012987012987. Total: -0.711012987012987
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.276. Total: -0.276
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.32399999999999995. Total: -0.32399999999999995
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 228
sent answer: RaiseAction(amount=228)
Round State: Street=4, My Cards=['5h', '3c'], Board Cards=['9s', '6d', '4h', 'Js']
Opponent tendencies updated: {'aggression_frequency': 0.6268656716417911, 'bluff_count': 6, 'total_actions': 67, 'raise_count': 42}
Strategy for state (4, ('3c', '5h'), ('9s', '6d', '4h', 'Js')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7309183359013868. Total: -1.4419313229143738
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.266. Total: -0.542
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ah', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6176470588235294, 'bluff_count': 6, 'total_actions': 68, 'raise_count': 42}
Strategy for state (0, ('2c', 'Ah'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.698. Total: -0.698
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.052
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.5479999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ah', '2c'], Board Cards=['8s', 'Qd', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6231884057971014, 'bluff_count': 6, 'total_actions': 69, 'raise_count': 43}
Strategy for state (3, ('2c', 'Ah'), ('8s', 'Qd', '3d')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.015. Total: -0.015
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.015. Total: -0.015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.585. Total: -0.585
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['Ah', '2c'], Board Cards=['8s', 'Qd', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6285714285714286, 'bluff_count': 7, 'total_actions': 70, 'raise_count': 44}
Strategy for state (3, ('2c', 'Ah'), ('8s', 'Qd', '3d')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.888. Total: -0.888
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.012. Total: -0.027
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.588. Total: -0.9729999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['9d', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6197183098591549, 'bluff_count': 7, 'total_actions': 71, 'raise_count': 44}
Strategy for state (0, ('8h', '9d'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4965. Total: -0.4965
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1035. Total: -0.1035
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4965. Total: -0.4965
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9d', '8h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.625, 'bluff_count': 7, 'total_actions': 72, 'raise_count': 45}
Strategy for state (0, ('8h', '9d'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7208333333333333. Total: -1.2173333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1125. Total: -0.216
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4875. Total: -0.784
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['9d', '8h'], Board Cards=['2h', 'Ad', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6301369863013698, 'bluff_count': 7, 'total_actions': 73, 'raise_count': 46}
Strategy for state (3, ('8h', '9d'), ('2h', 'Ad', 'Ts')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.819. Total: -0.819
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.056. Total: -0.056
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5439999999999999. Total: -0.5439999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['9d', '8h'], Board Cards=['2h', 'Ad', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6351351351351351, 'bluff_count': 7, 'total_actions': 74, 'raise_count': 47}
Strategy for state (3, ('8h', '9d'), ('2h', 'Ad', 'Ts')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8676666666666666. Total: -1.6866666666666665
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.10500000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.8949999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['5h', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6266666666666667, 'bluff_count': 7, 'total_actions': 75, 'raise_count': 47}
Strategy for state (0, ('2c', '5h'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.66. Total: -0.66
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.09. Total: -0.09
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.51. Total: -0.51
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['5h', '2c'], Board Cards=['6h', '6s', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.631578947368421, 'bluff_count': 7, 'total_actions': 76, 'raise_count': 48}
Strategy for state (3, ('2c', '5h'), ('6h', '6s', '9s')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0245. Total: -0.0245
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0245. Total: -0.0245
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5755. Total: -0.5755
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['5h', '2c'], Board Cards=['6h', '6s', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.6363636363636364, 'bluff_count': 7, 'total_actions': 77, 'raise_count': 49}
Strategy for state (3, ('2c', '5h'), ('6h', '6s', '9s')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.883. Total: -0.883
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.017. Total: -0.0415
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.583. Total: -0.9584999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Th', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6282051282051282, 'bluff_count': 7, 'total_actions': 78, 'raise_count': 49}
Strategy for state (0, ('Ks', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Th', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6329113924050633, 'bluff_count': 8, 'total_actions': 79, 'raise_count': 50}
Strategy for state (0, ('Ks', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7508333333333334. Total: -1.2778333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0825. Total: -0.1555
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5175. Total: -0.8445
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['Th', 'Ks'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6375, 'bluff_count': 9, 'total_actions': 80, 'raise_count': 51}
Strategy for state (0, ('Ks', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8300000000000001. Total: -2.1078333333333337
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.07. Total: -0.2255
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.53. Total: -1.1745
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Th', 'Ks'], Board Cards=['Js', '5d', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6419753086419753, 'bluff_count': 9, 'total_actions': 81, 'raise_count': 52}
Strategy for state (3, ('Ks', 'Th'), ('Js', '5d', 'Ts')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8613809523809524. Total: -0.8613809523809524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.091. Total: -0.091
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.509. Total: -0.509
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 40
sent answer: RaiseAction(amount=40)
Round State: Street=3, My Cards=['Th', 'Ks'], Board Cards=['Js', '5d', 'Ts']
Opponent tendencies updated: {'aggression_frequency': 0.6463414634146342, 'bluff_count': 10, 'total_actions': 82, 'raise_count': 53}
Strategy for state (3, ('Ks', 'Th'), ('Js', '5d', 'Ts')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9028156028368794. Total: -1.7641965552178318
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.174
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.8260000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Th', 'Ks'], Board Cards=['Js', '5d', 'Ts', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6506024096385542, 'bluff_count': 10, 'total_actions': 83, 'raise_count': 54}
Strategy for state (4, ('Ks', 'Th'), ('Js', '5d', 'Ts', 'Jc')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.252993993993994. Total: -0.252993993993994
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.741. Total: -0.741
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.14100000000000001. Total: 0.14100000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 311
sent answer: RaiseAction(amount=311)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ts', 'Ac'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6428571428571429, 'bluff_count': 11, 'total_actions': 84, 'raise_count': 54}
Strategy for state (0, ('Ac', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.683. Total: -0.683
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ts', 'Ac'], Board Cards=['Qs', 'Jc', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.6470588235294118, 'bluff_count': 11, 'total_actions': 85, 'raise_count': 55}
Strategy for state (3, ('Ac', 'Ts'), ('Qs', 'Jc', '9s')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.2585. Total: -0.2585
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2585. Total: -0.2585
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34149999999999997. Total: -0.34149999999999997
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12.408000000000001
sent answer: RaiseAction(amount=12.408000000000001)
Round State: Street=3, My Cards=['Ts', 'Ac'], Board Cards=['Qs', 'Jc', '9s']
Opponent tendencies updated: {'aggression_frequency': 0.6511627906976745, 'bluff_count': 11, 'total_actions': 86, 'raise_count': 56}
Strategy for state (3, ('Ac', 'Ts'), ('Qs', 'Jc', '9s')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7115. Total: -0.7115
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2485. Total: -0.507
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.3515. Total: -0.49299999999999994
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Qd', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6436781609195402, 'bluff_count': 11, 'total_actions': 87, 'raise_count': 56}
Strategy for state (0, ('6h', 'Qd'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5445. Total: -0.5445
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0555. Total: -0.0555
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5445. Total: -0.5445
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qd', '6h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6477272727272727, 'bluff_count': 12, 'total_actions': 88, 'raise_count': 57}
Strategy for state (0, ('6h', 'Qd'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7758333333333334. Total: -1.3203333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0575. Total: -0.113
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5425. Total: -0.887
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ad', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6404494382022472, 'bluff_count': 13, 'total_actions': 89, 'raise_count': 57}
Strategy for state (0, ('3c', 'Ad'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.698. Total: -0.698
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.052. Total: -0.052
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5479999999999999. Total: -0.5479999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['2s', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6333333333333333, 'bluff_count': 14, 'total_actions': 90, 'raise_count': 57}
Strategy for state (0, ('2s', '9s'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.523. Total: -0.523
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.077
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.523
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2s', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6373626373626373, 'bluff_count': 14, 'total_actions': 91, 'raise_count': 58}
Strategy for state (0, ('2s', '9s'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7648333333333334. Total: -1.2878333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.14550000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.8545
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2s', '9s'], Board Cards=['7s', 'Qh', '5s']
Opponent tendencies updated: {'aggression_frequency': 0.6413043478260869, 'bluff_count': 14, 'total_actions': 92, 'raise_count': 59}
Strategy for state (3, ('2s', '9s'), ('7s', 'Qh', '5s')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.635. Total: -0.635
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.24. Total: -0.24
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.36. Total: -0.36
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 13.44
sent answer: RaiseAction(amount=13.44)
Round State: Street=4, My Cards=['2s', '9s'], Board Cards=['7s', 'Qh', '5s', '9c']
Opponent tendencies updated: {'aggression_frequency': 0.6451612903225806, 'bluff_count': 14, 'total_actions': 93, 'raise_count': 60}
Strategy for state (4, ('2s', '9s'), ('7s', 'Qh', '5s', '9c')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.2029468085106384. Total: -0.2029468085106384
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7545. Total: -0.7545
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.15449999999999997. Total: 0.15449999999999997
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 135.81
sent answer: RaiseAction(amount=135.81)
Round State: Street=5, My Cards=['2s', '9s'], Board Cards=['7s', 'Qh', '5s', '9c', '4c']
Opponent tendencies updated: {'aggression_frequency': 0.648936170212766, 'bluff_count': 15, 'total_actions': 94, 'raise_count': 61}
Strategy for state (5, ('2s', '9s'), ('7s', 'Qh', '5s', '9c', '4c')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.29290287769784173. Total: -0.29290287769784173
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7035. Total: -0.7035
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['3h', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6421052631578947, 'bluff_count': 15, 'total_actions': 95, 'raise_count': 61}
Strategy for state (0, ('3h', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.685. Total: -0.685
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.065. Total: -0.065
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5349999999999999. Total: -0.5349999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['3h', 'Qh'], Board Cards=['9d', '4d', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.6458333333333334, 'bluff_count': 15, 'total_actions': 96, 'raise_count': 62}
Strategy for state (3, ('3h', 'Qh'), ('9d', '4d', '2h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.049
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.5509999999999999
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2.3520000000000003
sent answer: RaiseAction(amount=2.3520000000000003)
Round State: Street=3, My Cards=['3h', 'Qh'], Board Cards=['9d', '4d', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.6494845360824743, 'bluff_count': 15, 'total_actions': 97, 'raise_count': 63}
Strategy for state (3, ('3h', 'Qh'), ('9d', '4d', '2h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.861. Total: -0.861
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.039. Total: -0.088
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5609999999999999. Total: -0.9119999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['3h', 'Qh'], Board Cards=['9d', '4d', '2h', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.6530612244897959, 'bluff_count': 15, 'total_actions': 98, 'raise_count': 64}
Strategy for state (4, ('3h', 'Qh'), ('9d', '4d', '2h', '6h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.33. Total: -0.33
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.33. Total: -0.33
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.26999999999999996. Total: -0.26999999999999996
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 26.400000000000006
sent answer: RaiseAction(amount=26.400000000000006)
Round State: Street=4, My Cards=['3h', 'Qh'], Board Cards=['9d', '4d', '2h', '6h']
Opponent tendencies updated: {'aggression_frequency': 0.6565656565656566, 'bluff_count': 15, 'total_actions': 99, 'raise_count': 65}
Strategy for state (4, ('3h', 'Qh'), ('9d', '4d', '2h', '6h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6415. Total: -0.6415
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.3385. Total: -0.6685000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.26149999999999995. Total: -0.3314999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['3h', 'Qh'], Board Cards=['9d', '4d', '2h', '6h', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.66, 'bluff_count': 15, 'total_actions': 100, 'raise_count': 66}
Strategy for state (5, ('3h', 'Qh'), ('9d', '4d', '2h', '6h', 'Jc')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.1445. Total: -0.1445
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1445. Total: -0.1445
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4555. Total: -0.4555
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 71.672
sent answer: RaiseAction(amount=71.672)
Round State: Street=5, My Cards=['3h', 'Qh'], Board Cards=['9d', '4d', '2h', '6h', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6633663366336634, 'bluff_count': 15, 'total_actions': 101, 'raise_count': 67}
Strategy for state (5, ('3h', 'Qh'), ('9d', '4d', '2h', '6h', 'Jc')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8748849104859335. Total: -0.8748849104859335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.12. Total: -0.26449999999999996
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.48. Total: -0.7355
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 317
sent answer: RaiseAction(amount=317)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['6s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6568627450980392, 'bluff_count': 15, 'total_actions': 102, 'raise_count': 67}
Strategy for state (0, ('6s', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5045. Total: -0.5045
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.0955
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.5045
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6s', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6601941747572816, 'bluff_count': 15, 'total_actions': 103, 'raise_count': 68}
Strategy for state (0, ('6s', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7283333333333334. Total: -1.2328333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.105. Total: -0.2005
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.495. Total: -0.7994999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Jd', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6538461538461539, 'bluff_count': 15, 'total_actions': 104, 'raise_count': 68}
Strategy for state (0, ('8d', 'Jd'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6485. Total: -0.6485
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1015. Total: -0.1015
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.49849999999999994. Total: -0.49849999999999994
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Jd', '8d'], Board Cards=['Jh', 'Kc', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.6571428571428571, 'bluff_count': 15, 'total_actions': 105, 'raise_count': 69}
Strategy for state (3, ('8d', 'Jd'), ('Jh', 'Kc', '2s')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.032. Total: -0.032
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.568. Total: -0.568
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 2
sent answer: RaiseAction(amount=2)
Round State: Street=3, My Cards=['Jd', '8d'], Board Cards=['Jh', 'Kc', '2s']
Opponent tendencies updated: {'aggression_frequency': 0.660377358490566, 'bluff_count': 16, 'total_actions': 106, 'raise_count': 70}
Strategy for state (3, ('8d', 'Jd'), ('Jh', 'Kc', '2s')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.875. Total: -0.875
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.025. Total: -0.057
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.575. Total: -0.9429999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Jd', '8d'], Board Cards=['Jh', 'Kc', '2s', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6635514018691588, 'bluff_count': 16, 'total_actions': 107, 'raise_count': 71}
Strategy for state (4, ('8d', 'Jd'), ('Jh', 'Kc', '2s', 'Jc')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.8395. Total: -0.8395
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.8395. Total: -0.8395
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.23950000000000005. Total: 0.23950000000000005
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 67.16
sent answer: RaiseAction(amount=67.16)
Round State: Street=4, My Cards=['Jd', '8d'], Board Cards=['Jh', 'Kc', '2s', 'Jc']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 16, 'total_actions': 108, 'raise_count': 72}
Strategy for state (4, ('8d', 'Jd'), ('Jh', 'Kc', '2s', 'Jc')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.14603139013452915. Total: -0.14603139013452915
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.845. Total: -1.6844999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.245. Total: 0.6845000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 390
sent answer: RaiseAction(amount=390)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Jh', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6605504587155964, 'bluff_count': 16, 'total_actions': 109, 'raise_count': 72}
Strategy for state (0, ('7c', 'Jh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5285. Total: -0.5285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jh', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6636363636363637, 'bluff_count': 17, 'total_actions': 110, 'raise_count': 73}
Strategy for state (0, ('7c', 'Jh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7413333333333334. Total: -1.2698333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.16349999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.8365
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['Jh', '7c'], Board Cards=['8c', 'Tc', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 17, 'total_actions': 111, 'raise_count': 74}
Strategy for state (3, ('7c', 'Jh'), ('8c', 'Tc', '3d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7733333333333333. Total: -0.7733333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.16. Total: -0.16
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.43999999999999995. Total: -0.43999999999999995
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 24
sent answer: RaiseAction(amount=24)
Round State: Street=3, My Cards=['Jh', '7c'], Board Cards=['8c', 'Tc', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6696428571428571, 'bluff_count': 17, 'total_actions': 112, 'raise_count': 75}
Strategy for state (3, ('7c', 'Jh'), ('8c', 'Tc', '3d')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.826. Total: -1.5993333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.149. Total: -0.309
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.45099999999999996. Total: -0.6909999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['6c', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6637168141592921, 'bluff_count': 18, 'total_actions': 113, 'raise_count': 75}
Strategy for state (0, ('6c', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.692. Total: -0.692
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.058. Total: -0.058
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5419999999999999. Total: -0.5419999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['6c', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 19, 'total_actions': 114, 'raise_count': 76}
Strategy for state (0, ('6c', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.815. Total: -1.507
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.118
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.8819999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ad', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6608695652173913, 'bluff_count': 19, 'total_actions': 115, 'raise_count': 76}
Strategy for state (0, ('9s', 'Ad'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5469999999999999. Total: -0.5469999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.053
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.5469999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ad', '9s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6637931034482759, 'bluff_count': 19, 'total_actions': 116, 'raise_count': 77}
Strategy for state (0, ('9s', 'Ad'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7878333333333334. Total: -1.3348333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0455. Total: -0.0985
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5545. Total: -0.9015
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ad', '9s'], Board Cards=['4s', 'Js', '8s']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 20, 'total_actions': 117, 'raise_count': 78}
Strategy for state (3, ('9s', 'Ad'), ('4s', 'Js', '8s')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6397619047619048. Total: -0.6397619047619048
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.265. Total: -0.265
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33499999999999996. Total: -0.33499999999999996
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 20.140000000000004
sent answer: RaiseAction(amount=20.140000000000004)
Round State: Street=4, My Cards=['Ad', '9s'], Board Cards=['4s', 'Js', '8s', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.6694915254237288, 'bluff_count': 20, 'total_actions': 118, 'raise_count': 79}
Strategy for state (4, ('9s', 'Ad'), ('4s', 'Js', '8s', '2d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7405254237288136. Total: -0.7405254237288136
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.251. Total: -0.251
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.349. Total: -0.349
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 364
sent answer: RaiseAction(amount=364)
Round State: Street=4, My Cards=['Ad', '9s'], Board Cards=['4s', 'Js', '8s', '2d']
Opponent tendencies updated: {'aggression_frequency': 0.6722689075630253, 'bluff_count': 20, 'total_actions': 119, 'raise_count': 80}
Strategy for state (4, ('9s', 'Ad'), ('4s', 'Js', '8s', '2d')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7664747474747475. Total: -1.5070001712035612
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.231. Total: -0.482
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['Ad', '9s'], Board Cards=['4s', 'Js', '8s', '2d', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.675, 'bluff_count': 20, 'total_actions': 120, 'raise_count': 81}
Strategy for state (5, ('9s', 'Ad'), ('4s', 'Js', '8s', '2d', '6c')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.327. Total: -0.327
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.327. Total: -0.327
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['3d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6694214876033058, 'bluff_count': 20, 'total_actions': 121, 'raise_count': 81}
Strategy for state (0, ('3d', 'Td'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.519. Total: -0.519
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.081
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.519
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['3d', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6721311475409836, 'bluff_count': 20, 'total_actions': 122, 'raise_count': 82}
Strategy for state (0, ('3d', 'Td'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7608333333333334. Total: -1.2798333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.1535
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -0.8465
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3d', 'Td'], Board Cards=['Qh', 'Jc', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6747967479674797, 'bluff_count': 20, 'total_actions': 123, 'raise_count': 83}
Strategy for state (3, ('3d', 'Td'), ('Qh', 'Jc', '8d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7944259259259259. Total: -0.7944259259259259
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1315. Total: -0.1315
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46849999999999997. Total: -0.46849999999999997
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 26
sent answer: RaiseAction(amount=26)
Round State: Street=3, My Cards=['3d', 'Td'], Board Cards=['Qh', 'Jc', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6774193548387096, 'bluff_count': 20, 'total_actions': 124, 'raise_count': 84}
Strategy for state (3, ('3d', 'Td'), ('Qh', 'Jc', '8d')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8234473684210527. Total: -1.6178732943469787
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1555. Total: -0.28700000000000003
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4445. Total: -0.713
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['3d', 'Td'], Board Cards=['Qh', 'Jc', '8d', '7s']
Opponent tendencies updated: {'aggression_frequency': 0.68, 'bluff_count': 20, 'total_actions': 125, 'raise_count': 85}
Strategy for state (4, ('3d', 'Td'), ('Qh', 'Jc', '8d', '7s')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8196803455723543. Total: -0.8196803455723543
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.176. Total: -0.176
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['9s', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6746031746031746, 'bluff_count': 21, 'total_actions': 126, 'raise_count': 85}
Strategy for state (0, ('4d', '9s'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.693. Total: -0.693
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.057
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.5429999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['9s', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6771653543307087, 'bluff_count': 21, 'total_actions': 127, 'raise_count': 86}
Strategy for state (0, ('4d', '9s'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.798. Total: -1.491
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.077. Total: -0.134
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.523. Total: -0.8659999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['2h', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.671875, 'bluff_count': 21, 'total_actions': 128, 'raise_count': 86}
Strategy for state (0, ('2h', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.524. Total: -0.524
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.076. Total: -0.076
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.524. Total: -0.524
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2h', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6744186046511628, 'bluff_count': 21, 'total_actions': 129, 'raise_count': 87}
Strategy for state (0, ('2h', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8128529411764706. Total: -1.3368529411764705
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0695. Total: -0.14550000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5305. Total: -0.8545
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['2h', 'Qh'], Board Cards=['3c', '8c', 'Qd']
Opponent tendencies updated: {'aggression_frequency': 0.676923076923077, 'bluff_count': 21, 'total_actions': 130, 'raise_count': 88}
Strategy for state (3, ('2h', 'Qh'), ('3c', '8c', 'Qd')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9295217391304348. Total: -0.9295217391304348
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.027. Total: -0.027
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.573. Total: -0.573
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 44
sent answer: RaiseAction(amount=44)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['7c', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6717557251908397, 'bluff_count': 21, 'total_actions': 131, 'raise_count': 88}
Strategy for state (0, ('7c', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6535. Total: -0.6535
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0965. Total: -0.0965
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5035. Total: -0.5035
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Qd', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 21, 'total_actions': 132, 'raise_count': 88}
Strategy for state (0, ('6c', 'Qd'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.536. Total: -0.536
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.064
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.536
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qd', '6c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6691729323308271, 'bluff_count': 21, 'total_actions': 133, 'raise_count': 89}
Strategy for state (0, ('6c', 'Qd'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7653333333333334. Total: -1.3013333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.132
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.8680000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['6h', '7h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.664179104477612, 'bluff_count': 21, 'total_actions': 134, 'raise_count': 89}
Strategy for state (0, ('6h', '7h'), ()): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.123. Total: -0.123
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.123. Total: -0.123
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.477. Total: -0.477
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Qc', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6592592592592592, 'bluff_count': 21, 'total_actions': 135, 'raise_count': 89}
Strategy for state (0, ('8d', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.528. Total: -0.528
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.072. Total: -0.072
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.528. Total: -0.528
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qc', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6617647058823529, 'bluff_count': 21, 'total_actions': 136, 'raise_count': 90}
Strategy for state (0, ('8d', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7523333333333334. Total: -1.2803333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.153
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.847
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['7c', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.656934306569343, 'bluff_count': 21, 'total_actions': 137, 'raise_count': 90}
Strategy for state (0, ('4d', '7c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.669. Total: -0.669
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.081. Total: -0.081
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.519. Total: -0.519
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['7c', '4d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6594202898550725, 'bluff_count': 22, 'total_actions': 138, 'raise_count': 91}
Strategy for state (0, ('4d', '7c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.796. Total: -1.465
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.079. Total: -0.16
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.521. Total: -0.8400000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['Ac', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6546762589928058, 'bluff_count': 22, 'total_actions': 139, 'raise_count': 91}
Strategy for state (0, ('Ac', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.532. Total: -0.532
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.068. Total: -0.068
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.532. Total: -0.532
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ac', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6571428571428571, 'bluff_count': 22, 'total_actions': 140, 'raise_count': 92}
Strategy for state (0, ('Ac', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7738333333333334. Total: -1.3058333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0595. Total: -0.1275
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5405. Total: -0.8725
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ac', 'Js'], Board Cards=['6c', 'Kd', '6d']
Opponent tendencies updated: {'aggression_frequency': 0.6595744680851063, 'bluff_count': 22, 'total_actions': 141, 'raise_count': 93}
Strategy for state (3, ('Ac', 'Js'), ('6c', 'Kd', '6d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9124838709677419. Total: -0.9124838709677419
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.023. Total: -0.023
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.577. Total: -0.577
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 34
sent answer: RaiseAction(amount=34)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 9
Round State: Street=0, My Cards=['2c', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6549295774647887, 'bluff_count': 22, 'total_actions': 142, 'raise_count': 93}
Strategy for state (0, ('2c', '4c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6365. Total: -0.6365
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1135. Total: -0.1135
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4865. Total: -0.4865
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2c', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6573426573426573, 'bluff_count': 22, 'total_actions': 143, 'raise_count': 94}
Strategy for state (0, ('2c', '4c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7825. Total: -1.419
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0925. Total: -0.20600000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5075. Total: -0.7939999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10.360000000000001
sent answer: RaiseAction(amount=10.360000000000001)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['6h', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6527777777777778, 'bluff_count': 22, 'total_actions': 144, 'raise_count': 94}
Strategy for state (0, ('6h', '8s'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5025. Total: -0.5025
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6h', '8s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6551724137931034, 'bluff_count': 22, 'total_actions': 145, 'raise_count': 95}
Strategy for state (0, ('6h', '8s'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7303333333333334. Total: -1.2328333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.103. Total: -0.2005
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.497. Total: -0.7994999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4c', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6506849315068494, 'bluff_count': 23, 'total_actions': 146, 'raise_count': 95}
Strategy for state (0, ('4c', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6885. Total: -0.6885
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.0615
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -0.5385
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ts', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6462585034013606, 'bluff_count': 23, 'total_actions': 147, 'raise_count': 95}
Strategy for state (0, ('2s', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5195. Total: -0.5195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0805. Total: -0.0805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5195. Total: -0.5195
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Ts', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6486486486486487, 'bluff_count': 23, 'total_actions': 148, 'raise_count': 96}
Strategy for state (0, ('2s', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7693333333333334. Total: -1.2888333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.064. Total: -0.14450000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.536. Total: -0.8554999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Ts', '2s'], Board Cards=['7d', '3s', 'Qh']
Opponent tendencies updated: {'aggression_frequency': 0.6510067114093959, 'bluff_count': 23, 'total_actions': 149, 'raise_count': 97}
Strategy for state (3, ('2s', 'Ts'), ('7d', '3s', 'Qh')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.855. Total: -0.855
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.02. Total: -0.02
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.58. Total: -0.58
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['Ts', '2s'], Board Cards=['7d', '3s', 'Qh']
Opponent tendencies updated: {'aggression_frequency': 0.6533333333333333, 'bluff_count': 24, 'total_actions': 150, 'raise_count': 98}
Strategy for state (3, ('2s', 'Ts'), ('7d', '3s', 'Qh')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8886666666666666. Total: -1.7436666666666665
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.028. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.572. Total: -0.952
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Ts', '2s'], Board Cards=['7d', '3s', 'Qh', 'Qc']
Opponent tendencies updated: {'aggression_frequency': 0.6556291390728477, 'bluff_count': 24, 'total_actions': 151, 'raise_count': 99}
Strategy for state (4, ('2s', 'Ts'), ('7d', '3s', 'Qh', 'Qc')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8549883720930233. Total: -0.8549883720930233
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0985. Total: -0.0985
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5015. Total: -0.5015
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 34
sent answer: RaiseAction(amount=34)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Js', '3d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6513157894736842, 'bluff_count': 24, 'total_actions': 152, 'raise_count': 99}
Strategy for state (0, ('3d', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.697. Total: -2.195
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.18
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -1.22
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Js', '3d'], Board Cards=['Jh', '7c', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.6470588235294118, 'bluff_count': 24, 'total_actions': 153, 'raise_count': 99}
Strategy for state (3, ('3d', 'Js'), ('Jh', '7c', '3c')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.159. Total: -0.159
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.159. Total: -0.159
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44099999999999995. Total: -0.44099999999999995
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10.176000000000002
sent answer: RaiseAction(amount=10.176000000000002)
Round State: Street=3, My Cards=['Js', '3d'], Board Cards=['Jh', '7c', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.6493506493506493, 'bluff_count': 25, 'total_actions': 154, 'raise_count': 100}
Strategy for state (3, ('3d', 'Js'), ('Jh', '7c', '3c')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.764. Total: -0.764
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.186. Total: -0.345
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.414. Total: -0.6549999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 56.544
sent answer: RaiseAction(amount=56.544)
Round State: Street=4, My Cards=['Js', '3d'], Board Cards=['Jh', '7c', '3c', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.6516129032258065, 'bluff_count': 25, 'total_actions': 155, 'raise_count': 101}
Strategy for state (4, ('3d', 'Js'), ('Jh', '7c', '3c', '3s')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.992. Total: -0.992
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.992. Total: -0.992
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.392. Total: 0.392
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 340
sent answer: RaiseAction(amount=340)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['9d', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6474358974358975, 'bluff_count': 26, 'total_actions': 156, 'raise_count': 101}
Strategy for state (0, ('8c', '9d'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5075. Total: -0.5075
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0925. Total: -0.0925
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5075. Total: -0.5075
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9d', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6496815286624203, 'bluff_count': 26, 'total_actions': 157, 'raise_count': 102}
Strategy for state (0, ('8c', '9d'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7263333333333334. Total: -1.2338333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.107. Total: -0.1995
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.493. Total: -0.8005
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8.56
sent answer: RaiseAction(amount=8.56)
Round State: Street=0, My Cards=['9d', '8c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6518987341772152, 'bluff_count': 26, 'total_actions': 158, 'raise_count': 103}
Strategy for state (0, ('8c', '9d'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7905. Total: -2.0243333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1095. Total: -0.309
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4905. Total: -1.091
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 15.768
sent answer: RaiseAction(amount=15.768)
Round State: Street=3, My Cards=['9d', '8c'], Board Cards=['9s', 'Ts', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.6540880503144654, 'bluff_count': 26, 'total_actions': 159, 'raise_count': 104}
Strategy for state (3, ('8c', '9d'), ('9s', 'Ts', '4d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.885. Total: -0.885
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.075
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -0.525
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 36
sent answer: RaiseAction(amount=36)
Round State: Street=4, My Cards=['9d', '8c'], Board Cards=['9s', 'Ts', '4d', 'Ac']
Opponent tendencies updated: {'aggression_frequency': 0.65625, 'bluff_count': 26, 'total_actions': 160, 'raise_count': 105}
Strategy for state (4, ('8c', '9d'), ('9s', 'Ts', '4d', 'Ac')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.26612598425196854. Total: -0.26612598425196854
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.726. Total: -0.726
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.126. Total: 0.126
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 349
sent answer: RaiseAction(amount=349)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Th', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6521739130434783, 'bluff_count': 26, 'total_actions': 161, 'raise_count': 105}
Strategy for state (0, ('8d', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6505. Total: -0.6505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0995. Total: -0.0995
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5005. Total: -0.5005
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Th', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.654320987654321, 'bluff_count': 26, 'total_actions': 162, 'raise_count': 106}
Strategy for state (0, ('8d', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7775. Total: -1.428
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.197
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.8029999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['2s', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6503067484662577, 'bluff_count': 27, 'total_actions': 163, 'raise_count': 106}
Strategy for state (0, ('2s', '7c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5519999999999999. Total: -0.5519999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['2s', '7c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6524390243902439, 'bluff_count': 27, 'total_actions': 164, 'raise_count': 107}
Strategy for state (0, ('2s', '7c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7973333333333333. Total: -1.3493333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.036. Total: -0.08399999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.564. Total: -0.9159999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['2s', '7c'], Board Cards=['3s', '5s', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.6545454545454545, 'bluff_count': 27, 'total_actions': 165, 'raise_count': 108}
Strategy for state (3, ('2s', '7c'), ('3s', '5s', '2c')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8381666666666666. Total: -0.8381666666666666
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0785. Total: -0.0785
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5215. Total: -0.5215
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 13.816000000000003
sent answer: RaiseAction(amount=13.816000000000003)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jc', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6506024096385542, 'bluff_count': 27, 'total_actions': 166, 'raise_count': 108}
Strategy for state (0, ('5c', 'Jc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.666. Total: -0.666
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.084. Total: -0.084
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.516. Total: -0.516
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Jc', '5c'], Board Cards=['7c', 'As', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.6526946107784432, 'bluff_count': 27, 'total_actions': 167, 'raise_count': 109}
Strategy for state (3, ('5c', 'Jc'), ('7c', 'As', 'Ks')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4.5120000000000005
sent answer: RaiseAction(amount=4.5120000000000005)
Round State: Street=3, My Cards=['Jc', '5c'], Board Cards=['7c', 'As', 'Ks']
Opponent tendencies updated: {'aggression_frequency': 0.6547619047619048, 'bluff_count': 27, 'total_actions': 168, 'raise_count': 110}
Strategy for state (3, ('5c', 'Jc'), ('7c', 'As', 'Ks')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8700769230769231. Total: -0.8700769230769231
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.053. Total: -0.1
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5469999999999999. Total: -0.8999999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Kh', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.650887573964497, 'bluff_count': 27, 'total_actions': 169, 'raise_count': 110}
Strategy for state (0, ('4s', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.54. Total: -0.54
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.06
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.54
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Kh', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6529411764705882, 'bluff_count': 27, 'total_actions': 170, 'raise_count': 111}
Strategy for state (0, ('4s', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7698333333333334. Total: -1.3098333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0635. Total: -0.1235
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5365. Total: -0.8765000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Kh', '4s'], Board Cards=['4h', '9d', 'Kc']
Opponent tendencies updated: {'aggression_frequency': 0.6549707602339181, 'bluff_count': 28, 'total_actions': 171, 'raise_count': 112}
Strategy for state (3, ('4s', 'Kh'), ('4h', '9d', 'Kc')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.752. Total: -0.752
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.168. Total: -0.168
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.43199999999999994. Total: -0.43199999999999994
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 30.912000000000006
sent answer: RaiseAction(amount=30.912000000000006)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['2s', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6511627906976745, 'bluff_count': 29, 'total_actions': 172, 'raise_count': 112}
Strategy for state (0, ('2s', 'Jh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7005. Total: -0.7005
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0495. Total: -0.0495
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5505. Total: -0.5505
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['2s', 'Jh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.653179190751445, 'bluff_count': 29, 'total_actions': 173, 'raise_count': 113}
Strategy for state (0, ('2s', 'Jh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.826. Total: -1.5265
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.049. Total: -0.0985
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5509999999999999. Total: -0.9015
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['5c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6494252873563219, 'bluff_count': 29, 'total_actions': 174, 'raise_count': 113}
Strategy for state (0, ('3c', '5c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4825. Total: -0.4825
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1175. Total: -0.1175
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4825. Total: -0.4825
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['5c', '3c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6514285714285715, 'bluff_count': 29, 'total_actions': 175, 'raise_count': 114}
Strategy for state (0, ('3c', '5c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7208333333333333. Total: -1.2033333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1125. Total: -0.22999999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4875. Total: -0.77
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['5c', '3c'], Board Cards=['2c', '2s', '7c']
Opponent tendencies updated: {'aggression_frequency': 0.6534090909090909, 'bluff_count': 29, 'total_actions': 176, 'raise_count': 115}
Strategy for state (3, ('3c', '5c'), ('2c', '2s', '7c')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8555. Total: -0.8555
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0195. Total: -0.0195
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5805. Total: -0.5805
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jd', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6497175141242938, 'bluff_count': 29, 'total_actions': 177, 'raise_count': 115}
Strategy for state (0, ('Jd', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.656. Total: -0.656
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.094. Total: -0.094
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.506. Total: -0.506
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Jd', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.651685393258427, 'bluff_count': 29, 'total_actions': 178, 'raise_count': 116}
Strategy for state (0, ('Jd', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7725. Total: -1.4285
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1025. Total: -0.1965
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4975. Total: -0.8035
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jd', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6480446927374302, 'bluff_count': 29, 'total_actions': 179, 'raise_count': 116}
Strategy for state (0, ('Jd', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5135. Total: -0.5135
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0865. Total: -0.0865
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5135. Total: -0.5135
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jd', 'Qc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.65, 'bluff_count': 29, 'total_actions': 180, 'raise_count': 117}
Strategy for state (0, ('Jd', 'Qc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7388333333333333. Total: -1.2523333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.181
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.819
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6464088397790055, 'bluff_count': 29, 'total_actions': 181, 'raise_count': 117}
Strategy for state (0, ('4c', 'Kd'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6815. Total: -0.6815
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0685. Total: -0.0685
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5315. Total: -0.5315
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['4c', 'Kd'], Board Cards=['6d', 'Qc', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.6483516483516484, 'bluff_count': 29, 'total_actions': 182, 'raise_count': 118}
Strategy for state (3, ('4c', 'Kd'), ('6d', 'Qc', '5c')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.078. Total: -0.078
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.522. Total: -0.522
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 7.488000000000001
sent answer: RaiseAction(amount=7.488000000000001)
Round State: Street=3, My Cards=['4c', 'Kd'], Board Cards=['6d', 'Qc', '5c']
Opponent tendencies updated: {'aggression_frequency': 0.6502732240437158, 'bluff_count': 29, 'total_actions': 183, 'raise_count': 119}
Strategy for state (3, ('4c', 'Kd'), ('6d', 'Qc', '5c')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8578571428571429. Total: -0.8578571428571429
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.163
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -0.837
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['4c', 'Kd'], Board Cards=['6d', 'Qc', '5c', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.6521739130434783, 'bluff_count': 29, 'total_actions': 184, 'raise_count': 120}
Strategy for state (4, ('4c', 'Kd'), ('6d', 'Qc', '5c', '2h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.158. Total: -0.158
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.158. Total: -0.158
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44199999999999995. Total: -0.44199999999999995
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 50.56000000000001
sent answer: RaiseAction(amount=50.56000000000001)
Round State: Street=4, My Cards=['4c', 'Kd'], Board Cards=['6d', 'Qc', '5c', '2h']
Opponent tendencies updated: {'aggression_frequency': 0.654054054054054, 'bluff_count': 29, 'total_actions': 185, 'raise_count': 121}
Strategy for state (4, ('4c', 'Kd'), ('6d', 'Qc', '5c', '2h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.801085995085995. Total: -0.801085995085995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.194. Total: -0.352
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.40599999999999997. Total: -0.6479999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jc', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6505376344086021, 'bluff_count': 29, 'total_actions': 186, 'raise_count': 121}
Strategy for state (0, ('9d', 'Jc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.515. Total: -0.515
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.085. Total: -0.085
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.515. Total: -0.515
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Jc', '9d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6524064171122995, 'bluff_count': 29, 'total_actions': 187, 'raise_count': 122}
Strategy for state (0, ('9d', 'Jc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7698529411764705. Total: -1.2848529411764704
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1125. Total: -0.1975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4875. Total: -0.8025
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 18
sent answer: RaiseAction(amount=18)
Round State: Street=3, My Cards=['Jc', '9d'], Board Cards=['9h', '8h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.6542553191489362, 'bluff_count': 29, 'total_actions': 188, 'raise_count': 123}
Strategy for state (3, ('9d', 'Jc'), ('9h', '8h', 'Td')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6961097560975609. Total: -0.6961097560975609
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2795. Total: -0.2795
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.32049999999999995. Total: -0.32049999999999995
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 178.88000000000002
sent answer: RaiseAction(amount=178.88000000000002)
Round State: Street=3, My Cards=['Jc', '9d'], Board Cards=['9h', '8h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.656084656084656, 'bluff_count': 29, 'total_actions': 189, 'raise_count': 124}
Strategy for state (3, ('9d', 'Jc'), ('9h', '8h', 'Td')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7397121212121212. Total: -1.435821877309682
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2565. Total: -0.536
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34349999999999997. Total: -0.4639999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 382
sent answer: RaiseAction(amount=382)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ac', '8d'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6526315789473685, 'bluff_count': 29, 'total_actions': 190, 'raise_count': 124}
Strategy for state (0, ('8d', 'Ac'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.693. Total: -0.693
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.057. Total: -0.057
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5429999999999999. Total: -0.5429999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Ac', '8d'], Board Cards=['Kd', '3h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.6544502617801047, 'bluff_count': 29, 'total_actions': 191, 'raise_count': 125}
Strategy for state (3, ('8d', 'Ac'), ('Kd', '3h', 'Td')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.043. Total: -0.043
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.043. Total: -0.043
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5569999999999999. Total: -0.5569999999999999
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4.128
sent answer: RaiseAction(amount=4.128)
Round State: Street=3, My Cards=['Ac', '8d'], Board Cards=['Kd', '3h', 'Td']
Opponent tendencies updated: {'aggression_frequency': 0.65625, 'bluff_count': 29, 'total_actions': 192, 'raise_count': 126}
Strategy for state (3, ('8d', 'Ac'), ('Kd', '3h', 'Td')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8730769230769231. Total: -0.8730769230769231
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.05. Total: -0.093
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5499999999999999. Total: -0.9069999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Ac', '8d'], Board Cards=['Kd', '3h', 'Td', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.6580310880829016, 'bluff_count': 29, 'total_actions': 193, 'raise_count': 127}
Strategy for state (4, ('8d', 'Ac'), ('Kd', '3h', 'Td', 'Jd')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.329. Total: -0.329
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.329. Total: -0.329
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.27099999999999996. Total: -0.27099999999999996
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 73.696
sent answer: RaiseAction(amount=73.696)
Round State: Street=4, My Cards=['Ac', '8d'], Board Cards=['Kd', '3h', 'Td', 'Jd']
Opponent tendencies updated: {'aggression_frequency': 0.6597938144329897, 'bluff_count': 29, 'total_actions': 194, 'raise_count': 128}
Strategy for state (4, ('8d', 'Ac'), ('Kd', '3h', 'Td', 'Jd')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6721140350877193. Total: -0.6721140350877193
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.3235. Total: -0.6525000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.27649999999999997. Total: -0.3474999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7c', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6564102564102564, 'bluff_count': 29, 'total_actions': 195, 'raise_count': 128}
Strategy for state (0, ('7c', 'Jc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.491. Total: -0.491
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.109. Total: -0.109
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.491. Total: -0.491
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7c', 'Jc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6581632653061225, 'bluff_count': 29, 'total_actions': 196, 'raise_count': 129}
Strategy for state (0, ('7c', 'Jc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7413333333333334. Total: -1.2323333333333335
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.092. Total: -0.201
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.508. Total: -0.7989999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Jc', 'Th'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6548223350253807, 'bluff_count': 30, 'total_actions': 197, 'raise_count': 129}
Strategy for state (0, ('Jc', 'Th'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6425. Total: -0.6425
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1075. Total: -0.1075
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.4925. Total: -0.4925
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=3, My Cards=['Jc', 'Th'], Board Cards=['2s', '9h', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6565656565656566, 'bluff_count': 30, 'total_actions': 198, 'raise_count': 130}
Strategy for state (3, ('Jc', 'Th'), ('2s', '9h', '6c')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.037. Total: -0.037
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.037. Total: -0.037
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.563. Total: -0.563
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 3.5519999999999996
sent answer: RaiseAction(amount=3.5519999999999996)
Round State: Street=3, My Cards=['Jc', 'Th'], Board Cards=['2s', '9h', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6582914572864321, 'bluff_count': 30, 'total_actions': 199, 'raise_count': 131}
Strategy for state (3, ('Jc', 'Th'), ('2s', '9h', '6c')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8670434782608695. Total: -0.8670434782608695
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.046. Total: -0.08299999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5539999999999999. Total: -0.9169999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Jc', 'Th'], Board Cards=['2s', '9h', '6c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.66, 'bluff_count': 30, 'total_actions': 200, 'raise_count': 132}
Strategy for state (4, ('Jc', 'Th'), ('2s', '9h', '6c', '7h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.163. Total: -0.163
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.163. Total: -0.163
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.43699999999999994. Total: -0.43699999999999994
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 31.296000000000006
sent answer: RaiseAction(amount=31.296000000000006)
Round State: Street=4, My Cards=['Jc', 'Th'], Board Cards=['2s', '9h', '6c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6616915422885572, 'bluff_count': 30, 'total_actions': 201, 'raise_count': 133}
Strategy for state (4, ('Jc', 'Th'), ('2s', '9h', '6c', '7h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8089678714859438. Total: -0.8089678714859438
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.183. Total: -0.346
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.417. Total: -0.6539999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=5, My Cards=['Jc', 'Th'], Board Cards=['2s', '9h', '6c', '7h', '4d']
Opponent tendencies updated: {'aggression_frequency': 0.6633663366336634, 'bluff_count': 30, 'total_actions': 202, 'raise_count': 134}
Strategy for state (5, ('Jc', 'Th'), ('2s', '9h', '6c', '7h', '4d')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.0995. Total: -0.0995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0995. Total: -0.0995
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5005. Total: -0.5005
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 196
sent answer: RaiseAction(amount=196)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['4h', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6600985221674877, 'bluff_count': 30, 'total_actions': 203, 'raise_count': 134}
Strategy for state (0, ('4h', 'As'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.527. Total: -0.527
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.073. Total: -0.073
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.527. Total: -0.527
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['4h', 'As'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6617647058823529, 'bluff_count': 30, 'total_actions': 204, 'raise_count': 135}
Strategy for state (0, ('4h', 'As'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7568333333333334. Total: -1.2838333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.1495
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.8505
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['4h', 'As'], Board Cards=['Ks', 'Kh', '9d']
Opponent tendencies updated: {'aggression_frequency': 0.6634146341463415, 'bluff_count': 30, 'total_actions': 205, 'raise_count': 136}
Strategy for state (3, ('4h', 'As'), ('Ks', 'Kh', '9d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8505. Total: -0.8505
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0245. Total: -0.0245
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5755. Total: -0.5755
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['3s', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6601941747572816, 'bluff_count': 30, 'total_actions': 206, 'raise_count': 136}
Strategy for state (0, ('3s', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6525. Total: -0.6525
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['3s', 'Js'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6618357487922706, 'bluff_count': 30, 'total_actions': 207, 'raise_count': 137}
Strategy for state (0, ('3s', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.792. Total: -1.4445000000000001
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.1805
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.8194999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['3s', 'Js'], Board Cards=['Qc', '9c', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.6634615384615384, 'bluff_count': 30, 'total_actions': 208, 'raise_count': 138}
Strategy for state (3, ('3s', 'Js'), ('Qc', '9c', '2c')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.048. Total: -0.048
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5519999999999999. Total: -0.5519999999999999
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6.144
sent answer: RaiseAction(amount=6.144)
Round State: Street=3, My Cards=['3s', 'Js'], Board Cards=['Qc', '9c', '2c']
Opponent tendencies updated: {'aggression_frequency': 0.6650717703349283, 'bluff_count': 30, 'total_actions': 209, 'raise_count': 139}
Strategy for state (3, ('3s', 'Js'), ('Qc', '9c', '2c')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8999444444444444. Total: -0.8999444444444444
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0445. Total: -0.0925
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5555. Total: -0.9075
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['3s', 'Js'], Board Cards=['Qc', '9c', '2c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 30, 'total_actions': 210, 'raise_count': 140}
Strategy for state (4, ('3s', 'Js'), ('Qc', '9c', '2c', '7h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.083. Total: -0.083
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.083. Total: -0.083
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.517. Total: -0.517
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 26.560000000000006
sent answer: RaiseAction(amount=26.560000000000006)
Round State: Street=4, My Cards=['3s', 'Js'], Board Cards=['Qc', '9c', '2c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6682464454976303, 'bluff_count': 30, 'total_actions': 211, 'raise_count': 141}
Strategy for state (4, ('3s', 'Js'), ('Qc', '9c', '2c', '7h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9223110367892977. Total: -0.9223110367892977
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.071. Total: -0.154
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.529. Total: -0.8460000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6650943396226415, 'bluff_count': 30, 'total_actions': 212, 'raise_count': 141}
Strategy for state (0, ('7c', 'Kd'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5529999999999999. Total: -0.5529999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.047. Total: -0.047
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5529999999999999. Total: -0.5529999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7c', 'Kd'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 30, 'total_actions': 213, 'raise_count': 142}
Strategy for state (0, ('7c', 'Kd'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7908333333333334. Total: -1.3438333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0425. Total: -0.0895
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5575. Total: -0.9104999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['7c', 'Kd'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6682242990654206, 'bluff_count': 31, 'total_actions': 214, 'raise_count': 143}
Strategy for state (3, ('7c', 'Kd'), ('3s', '4h', '3h')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8435. Total: -0.8435
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0315. Total: -0.0315
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5685. Total: -0.5685
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=3, My Cards=['7c', 'Kd'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6697674418604651, 'bluff_count': 31, 'total_actions': 215, 'raise_count': 144}
Strategy for state (3, ('7c', 'Kd'), ('3s', '4h', '3h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8966666666666666. Total: -1.7401666666666666
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.02. Total: -0.051500000000000004
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.58. Total: -0.9484999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['7c', 'Kd'], Board Cards=['3s', '4h', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.6712962962962963, 'bluff_count': 32, 'total_actions': 216, 'raise_count': 145}
Strategy for state (3, ('7c', 'Kd'), ('3s', '4h', '3h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.9185. Total: -2.6586666666666665
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.019. Total: -0.07050000000000001
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.581. Total: -1.3295
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12
sent answer: RaiseAction(amount=12)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Ks', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6682027649769585, 'bluff_count': 33, 'total_actions': 217, 'raise_count': 145}
Strategy for state (0, ('2s', 'Ks'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6785. Total: -0.6785
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0715. Total: -0.0715
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5285. Total: -0.5285
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['Ks', '2s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6697247706422018, 'bluff_count': 33, 'total_actions': 218, 'raise_count': 146}
Strategy for state (0, ('2s', 'Ks'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8025. Total: -1.4809999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0725. Total: -0.144
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5275. Total: -0.8559999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['Qh', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 34, 'total_actions': 219, 'raise_count': 146}
Strategy for state (0, ('Kc', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.518. Total: -0.518
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.082. Total: -0.082
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.518. Total: -0.518
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['Qh', 'Kc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6681818181818182, 'bluff_count': 34, 'total_actions': 220, 'raise_count': 147}
Strategy for state (0, ('Kc', 'Qh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7733333333333334. Total: -1.2913333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.06. Total: -0.14200000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.54. Total: -0.8580000000000001
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['Qh', 'Kc'], Board Cards=['Kd', 'Qs', '3h']
Opponent tendencies updated: {'aggression_frequency': 0.669683257918552, 'bluff_count': 34, 'total_actions': 221, 'raise_count': 148}
Strategy for state (3, ('Kc', 'Qh'), ('Kd', 'Qs', '3h')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7358888888888888. Total: -0.7358888888888888
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.153. Total: -0.153
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44699999999999995. Total: -0.44699999999999995
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 19.584000000000003
sent answer: RaiseAction(amount=19.584000000000003)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['5h', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 34, 'total_actions': 222, 'raise_count': 148}
Strategy for state (0, ('5h', 'Qs'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.675. Total: -0.675
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.075. Total: -0.075
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.525. Total: -0.525
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 6
Round State: Street=0, My Cards=['7h', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6636771300448431, 'bluff_count': 34, 'total_actions': 223, 'raise_count': 148}
Strategy for state (0, ('4h', '7h'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7h', '4h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6651785714285714, 'bluff_count': 34, 'total_actions': 224, 'raise_count': 149}
Strategy for state (0, ('4h', '7h'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7093333333333334. Total: -1.2148333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.124. Total: -0.2185
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.476. Total: -0.7814999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['As', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6622222222222223, 'bluff_count': 34, 'total_actions': 225, 'raise_count': 149}
Strategy for state (0, ('As', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6825. Total: -0.6825
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0675. Total: -0.0675
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5325. Total: -0.5325
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['As', 'Tc'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6637168141592921, 'bluff_count': 34, 'total_actions': 226, 'raise_count': 150}
Strategy for state (0, ('As', 'Tc'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7985. Total: -1.4809999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.14400000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.8559999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 10
sent answer: RaiseAction(amount=10)
Round State: Street=3, My Cards=['As', 'Tc'], Board Cards=['6s', '8c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6651982378854625, 'bluff_count': 34, 'total_actions': 227, 'raise_count': 151}
Strategy for state (3, ('As', 'Tc'), ('6s', '8c', '7h')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.127. Total: -0.127
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.127. Total: -0.127
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.473. Total: -0.473
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 20.32
sent answer: RaiseAction(amount=20.32)
Round State: Street=3, My Cards=['As', 'Tc'], Board Cards=['6s', '8c', '7h']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 34, 'total_actions': 228, 'raise_count': 152}
Strategy for state (3, ('As', 'Tc'), ('6s', '8c', '7h')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8431097560975609. Total: -0.8431097560975609
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.1325. Total: -0.2595
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.46749999999999997. Total: -0.7404999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['4d', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6637554585152838, 'bluff_count': 34, 'total_actions': 229, 'raise_count': 152}
Strategy for state (0, ('4c', '4d'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.33499999999999996. Total: -0.33499999999999996
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.265. Total: -0.265
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33499999999999996. Total: -0.33499999999999996
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6.360000000000001
sent answer: RaiseAction(amount=6.360000000000001)
Round State: Street=0, My Cards=['4d', '4c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6652173913043479, 'bluff_count': 34, 'total_actions': 230, 'raise_count': 153}
Strategy for state (0, ('4c', '4d'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6528888888888889. Total: -0.9878888888888888
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.236. Total: -0.501
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.364. Total: -0.49899999999999994
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=3, My Cards=['4d', '4c'], Board Cards=['6d', 'Kh', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 35, 'total_actions': 231, 'raise_count': 154}
Strategy for state (3, ('4c', '4d'), ('6d', 'Kh', '3d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7616666666666666. Total: -0.7616666666666666
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.155. Total: -0.155
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44499999999999995. Total: -0.44499999999999995
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 27.280000000000005
sent answer: RaiseAction(amount=27.280000000000005)
Round State: Street=3, My Cards=['4d', '4c'], Board Cards=['6d', 'Kh', '3d']
Opponent tendencies updated: {'aggression_frequency': 0.6681034482758621, 'bluff_count': 35, 'total_actions': 232, 'raise_count': 155}
Strategy for state (3, ('4c', '4d'), ('6d', 'Kh', '3d')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8291980198019802. Total: -1.5908646864686466
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.151. Total: -0.306
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.44899999999999995. Total: -0.694
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['4d', '4c'], Board Cards=['6d', 'Kh', '3d', '6c']
Opponent tendencies updated: {'aggression_frequency': 0.6695278969957081, 'bluff_count': 36, 'total_actions': 233, 'raise_count': 156}
Strategy for state (4, ('4c', '4d'), ('6d', 'Kh', '3d', '6c')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.3032280701754386. Total: -0.3032280701754386
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.688. Total: -0.688
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.08799999999999997. Total: 0.08799999999999997
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 338
sent answer: RaiseAction(amount=338)
Round State: Street=5, My Cards=['4d', '4c'], Board Cards=['6d', 'Kh', '3d', '6c', 'Jh']
Opponent tendencies updated: {'aggression_frequency': 0.6709401709401709, 'bluff_count': 36, 'total_actions': 234, 'raise_count': 157}
Strategy for state (5, ('4c', '4d'), ('6d', 'Kh', '3d', '6c', 'Jh')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.6135. Total: -0.6135
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.6135. Total: -0.6135
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Tc', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6680851063829787, 'bluff_count': 36, 'total_actions': 235, 'raise_count': 157}
Strategy for state (0, ('Tc', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.4905. Total: -0.4905
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2595. Total: -0.2595
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.34049999999999997. Total: -0.34049999999999997
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12.456
sent answer: RaiseAction(amount=12.456)
Round State: Street=0, My Cards=['Tc', 'Ts'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6694915254237288, 'bluff_count': 37, 'total_actions': 236, 'raise_count': 158}
Strategy for state (0, ('Tc', 'Ts'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6766764705882353. Total: -1.1671764705882353
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.2645. Total: -0.524
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.33549999999999996. Total: -0.4759999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 67.712
sent answer: RaiseAction(amount=67.712)
Round State: Street=3, My Cards=['Tc', 'Ts'], Board Cards=['Js', '2c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6708860759493671, 'bluff_count': 37, 'total_actions': 237, 'raise_count': 159}
Strategy for state (3, ('Tc', 'Ts'), ('Js', '2c', '8d')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.107. Total: -0.107
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.107. Total: -0.107
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.493. Total: -0.493
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 114.70400000000001
sent answer: RaiseAction(amount=114.70400000000001)
Round State: Street=3, My Cards=['Tc', 'Ts'], Board Cards=['Js', '2c', '8d']
Opponent tendencies updated: {'aggression_frequency': 0.6722689075630253, 'bluff_count': 37, 'total_actions': 238, 'raise_count': 160}
Strategy for state (3, ('Tc', 'Ts'), ('Js', '2c', '8d')): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.87981589958159. Total: -0.87981589958159
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.116. Total: -0.223
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.484. Total: -0.7769999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.CallAction'>
Defaulting to CallAction.
Round State: Street=4, My Cards=['Tc', 'Ts'], Board Cards=['Js', '2c', '8d', '5s']
Opponent tendencies updated: {'aggression_frequency': 0.6736401673640168, 'bluff_count': 37, 'total_actions': 239, 'raise_count': 161}
Strategy for state (4, ('Tc', 'Ts'), ('Js', '2c', '8d', '5s')): {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.72. Total: -0.72
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.72. Total: -0.72
Regret updated for <class 'skeleton.actions.RaiseAction'>: 0.12. Total: 0.12
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 105
sent answer: RaiseAction(amount=105)
Round State: Street=5, My Cards=['Tc', 'Ts'], Board Cards=['Js', '2c', '8d', '5s', '3c']
Opponent tendencies updated: {'aggression_frequency': 0.675, 'bluff_count': 37, 'total_actions': 240, 'raise_count': 162}
Strategy for state (5, ('Tc', 'Ts'), ('Js', '2c', '8d', '5s', '3c')): {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CheckAction'>: -0.7615. Total: -0.7615
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.7615. Total: -0.7615
Legal strategy: {<class 'skeleton.actions.CheckAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.CheckAction'>
sent answer: CheckAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6721991701244814, 'bluff_count': 38, 'total_actions': 241, 'raise_count': 162}
Strategy for state (0, ('4s', '9h'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5455. Total: -0.5455
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0545. Total: -0.0545
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5455. Total: -0.5455
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['9h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6735537190082644, 'bluff_count': 39, 'total_actions': 242, 'raise_count': 163}
Strategy for state (0, ('4s', '9h'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7783333333333333. Total: -1.3238333333333334
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.055. Total: -0.1095
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5449999999999999. Total: -0.8904999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=0, My Cards=['9h', '4s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6748971193415638, 'bluff_count': 39, 'total_actions': 243, 'raise_count': 164}
Strategy for state (0, ('4s', '9h'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.8385. Total: -2.1623333333333337
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0615. Total: -0.17099999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5385. Total: -1.2289999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 12
sent answer: RaiseAction(amount=12)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Qs', 'Qh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6721311475409836, 'bluff_count': 40, 'total_actions': 244, 'raise_count': 164}
Strategy for state (0, ('Qh', 'Qs'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.514. Total: -0.514
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.236. Total: -0.236
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.364. Total: -0.364
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 11.328
sent answer: RaiseAction(amount=11.328)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6c', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6693877551020408, 'bluff_count': 40, 'total_actions': 245, 'raise_count': 164}
Strategy for state (0, ('3h', '6c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.513. Total: -0.513
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.087. Total: -0.087
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.513. Total: -0.513
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['6c', '3h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6707317073170732, 'bluff_count': 40, 'total_actions': 246, 'raise_count': 165}
Strategy for state (0, ('3h', '6c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7438333333333333. Total: -1.2568333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0895. Total: -0.1765
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5105. Total: -0.8234999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['Js', '2h'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6680161943319838, 'bluff_count': 41, 'total_actions': 247, 'raise_count': 165}
Strategy for state (0, ('2h', 'Js'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6995. Total: -0.6995
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0505. Total: -0.0505
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5495. Total: -0.5495
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['7c', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6653225806451613, 'bluff_count': 41, 'total_actions': 248, 'raise_count': 165}
Strategy for state (0, ('7c', 'Td'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5329999999999999. Total: -0.5329999999999999
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.067. Total: -0.067
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5329999999999999. Total: -0.5329999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['7c', 'Td'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 42, 'total_actions': 249, 'raise_count': 166}
Strategy for state (0, ('7c', 'Td'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7568333333333334. Total: -1.2898333333333332
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0765. Total: -0.14350000000000002
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5235. Total: -0.8564999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 8
sent answer: RaiseAction(amount=8)
Round State: Street=3, My Cards=['7c', 'Td'], Board Cards=['8h', '9h', '3s']
Opponent tendencies updated: {'aggression_frequency': 0.668, 'bluff_count': 42, 'total_actions': 250, 'raise_count': 167}
Strategy for state (3, ('7c', 'Td'), ('8h', '9h', '3s')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6737619047619048. Total: -0.6737619047619048
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.231. Total: -0.231
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.369. Total: -0.369
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 35.112
sent answer: RaiseAction(amount=35.112)
Round State: Street=4, My Cards=['7c', 'Td'], Board Cards=['8h', '9h', '3s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6693227091633466, 'bluff_count': 42, 'total_actions': 251, 'raise_count': 168}
Strategy for state (4, ('7c', 'Td'), ('8h', '9h', '3s', '5d')): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7323945578231292. Total: -0.7323945578231292
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.254. Total: -0.254
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.346. Total: -0.346
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 294.64
sent answer: RaiseAction(amount=294.64)
Round State: Street=4, My Cards=['7c', 'Td'], Board Cards=['8h', '9h', '3s', '5d']
Opponent tendencies updated: {'aggression_frequency': 0.6706349206349206, 'bluff_count': 42, 'total_actions': 252, 'raise_count': 169}
Strategy for state (4, ('7c', 'Td'), ('8h', '9h', '3s', '5d')): {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7402936400541272. Total: -1.4726881978772566
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.257. Total: -0.511
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.5, <class 'skeleton.actions.FoldAction'>: 0.5}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['6c', '5c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6679841897233202, 'bluff_count': 43, 'total_actions': 253, 'raise_count': 169}
Strategy for state (0, ('5c', '6c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.633. Total: -1.271
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.117. Total: -0.229
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.483. Total: -0.7709999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['8s', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6653543307086615, 'bluff_count': 43, 'total_actions': 254, 'raise_count': 169}
Strategy for state (0, ('5s', '8s'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.493. Total: -0.493
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.107. Total: -0.107
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.493. Total: -0.493
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['8s', '5s'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6666666666666666, 'bluff_count': 43, 'total_actions': 255, 'raise_count': 170}
Strategy for state (0, ('5s', '8s'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7093333333333334. Total: -1.2023333333333333
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.124. Total: -0.23099999999999998
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.476. Total: -0.7689999999999999
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['9s', 'Qs'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6640625, 'bluff_count': 43, 'total_actions': 256, 'raise_count': 170}
Strategy for state (0, ('9s', 'Qs'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6525. Total: -0.6525
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0975. Total: -0.0975
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5025. Total: -0.5025
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6614785992217899, 'bluff_count': 43, 'total_actions': 257, 'raise_count': 170}
Strategy for state (0, ('2c', '5c'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.5055. Total: -0.5055
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0945. Total: -0.0945
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5055. Total: -0.5055
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 4
sent answer: RaiseAction(amount=4)
Round State: Street=0, My Cards=['5c', '2c'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6627906976744186, 'bluff_count': 44, 'total_actions': 258, 'raise_count': 171}
Strategy for state (0, ('2c', '5c'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.7868529411764705. Total: -1.2923529411764705
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0955. Total: -0.19
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5045. Total: -0.8099999999999998
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
New round started.
Bounty for this round: 8
Round State: Street=0, My Cards=['5d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6602316602316602, 'bluff_count': 44, 'total_actions': 259, 'raise_count': 171}
Strategy for state (0, ('5d', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.6975. Total: -0.6975
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.0525. Total: -0.0525
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.5475. Total: -0.5475
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.0, <class 'skeleton.actions.FoldAction'>: 0.0, <class 'skeleton.actions.RaiseAction'>: 1.0}
checking type <class 'skeleton.actions.RaiseAction'>
Dynamic raise amount calculated with tendencies: 6
sent answer: RaiseAction(amount=6)
Round State: Street=0, My Cards=['5d', 'Kh'], Board Cards=[]
Opponent tendencies updated: {'aggression_frequency': 0.6615384615384615, 'bluff_count': 44, 'total_actions': 260, 'raise_count': 172}
Strategy for state (0, ('5d', 'Kh'), ()): {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
Regret updated for <class 'skeleton.actions.CallAction'>: -0.813. Total: -1.5105
Regret updated for <class 'skeleton.actions.FoldAction'>: -0.062. Total: -0.11449999999999999
Regret updated for <class 'skeleton.actions.RaiseAction'>: -0.538. Total: -0.8855
Legal strategy: {<class 'skeleton.actions.CallAction'>: 0.3333333333333333, <class 'skeleton.actions.FoldAction'>: 0.3333333333333333, <class 'skeleton.actions.RaiseAction'>: 0.3333333333333333}
checking type <class 'skeleton.actions.FoldAction'>
sent answer: FoldAction()
CFR data saved successfully.
Round over. Data saved.
